{"version":3,"sources":["click.wav","types.ts","util.ts","redux.ts","components/TempoMarking.tsx","components/Common.tsx","polyfill.ts","hooks.ts","components/TimeSignature.tsx","components/TapIn.tsx","components/Tuner.tsx","components/Dial.tsx","metronome.ts","components/Metronome.tsx","components/Settings.tsx","components/Scales.tsx","serviceWorker.ts","components/Update.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","ActionType","LocalStorageKey","Mode","Pitch","defaultDivisionDetails","isActive","isAccented","defaultActiveDivision","immutable","defaultActiveBeat","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","F_Sharp","Minor","A_Sharp","D_Sharp","G_Sharp","fromLocalStorage","key","defaultValue","fromLocal","localStorage","getItem","transit","toLocalStorage","value","setItem","setBPM","action","setMetronomeState","old","bpm","clampBPM","applyAction","util","t","BPM","Object","objectSpread","setSignature","signature","TimeSignature","toggleAccent","beatIdx","division","divisionIdx","setActiveBeats","update","a","d","dd","setAccent","toggleKeepAwake","setKeepAwake","toggleTuner","setTuner","addBPM","resetActivebeats","abs","map","ab","toggleStart","setPlaying","stop","playing","setSettings","keepAwake","nextValue","Function","store","getState","settings","showTuner","R","current","activeBeats","ActiveBeats","dispatch","type","SetActiveBeats","SetMetronomeState","AppSettings","SetSettings","setScales","scales","sortBy","pitch","ScalesDB","SetScales","defaultBeat","set","defaultStore","beats","denominator","numerator","reduce","scalesDB","scaleKey","add","mode","known","learning","id","concat","addScale","enabledDivisions","acc","b","metronomeState","ready","pending","redux","arguments","length","undefined","assign","startsWith","console","log","useSelector","selector","comparisonFn","reactRedux","markings","name","low","high","fromBPM","filter","_ref","to","test","Marking","React","memo","_ref2","react_default","createElement","className","TempoMarking","_ref3","style","minHeight","_ref4","_ref5","_ref6","nu","equals","Wrap","offProps","onProps","ToggleButton","on","props","objectWithoutProperties","renderProps","useMemo","toRemove","child","children","Array","Common_Button","Button","isPrimary","isDanger","isLink","isInfo","isSuccess","isOutlined","offIsPrimary","offIsDanger","offIsLink","offIsInfo","offIsSuccess","offIsOutlined","grow","propsClassName","classnames","is-primary","is-link","is-danger","is-info","is-success","is-outlined","is-grow","ButtonsWrapper","styled","div","_templateObject","Buttons","hasAddons","isRight","ref","has-addons","is-right","AudioContext","window","webkitAudioContext","useLocalStorage","initialValue","override","_React$useState5","useState","firstValue","_React$useState6","slicedToArray","setValue","useCallback","valueAction","oldValue","newValue","useToggle","sideEffect","toggleState","_React$useState7","_React$useState8","DivisionsWrapper","section","TimeSignature_templateObject","Divisions","uiEnabledDivisions","toggleDivisionOption","clearDivisions","Common_Buttons","marginRight","num","get","Common_ToggleButton","onClick","Signature","setCurrentNumerator","currentNumerator","hasAccent","find","c","disabled","Fragment","BeatRowItemWrapper","_templateObject2","BeatRowWrapper","_templateObject3","BeatWrapper","_templateObject4","BeatsWrapper","_templateObject5","BeatRowItem","height","beatIndex","divisionIndex","details","marginTop","BeatRow","Beat","divisions","keySeq","size","Beats","_React$useState","_React$useState2","hasChanged","setHasChanged","_hooks$useLocalStorag","hooks","EnabledDivisions","_hooks$useLocalStorag2","uIenabledDivisions","setUiEnabledDivisions","useEffect","divisionOption","_React$useState3","_React$useState4","calculateBPM","tapTimes","Math","trunc","TapIn","taps","setTaps","now","performance","newTaps","tap","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","j","base","pow","centsPerOctave","frequency","octave","note","push","Tuner","_useToggle","_useToggle2","toggleOn","analyser","setAnalyser","sampleRate","setSampleRate","freq","setFreq","audioContext","setAudioContext","polyfill","mediaStream","mediaDevices","navigator","getUserMedia","audio","then","ms","createAnalyser","fftSize","createMediaStreamSource","connect","getAudioTracks","forEach","track","tick","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","Infinity","maxIdx","resolution","interval","setInterval","clearInterval","_freqToPitch","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","TunerWrapper","Close","toFixed","Tuner_templateObject","Tuner_templateObject2","Outer","Dial_templateObject","InnerWrapper","Dial_templateObject2","Inner","knobContainer","container","addDiff","Radians","PI","stateRadians","setRadians","radiansRef","useRef","onMouseDown","e","setMouseDown","preventDefault","mouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","onMouseUp","_","addToBuffer","diff","oldDiff","moveKnob","clientX","clientY","box","getBoundingClientRect","boxCenter","x","left","width","y","top","newRadians","atan2","onTouchMove","t0","changedTouches","onMouseMove","uiRadians","_React$useState15","_React$useState16","debouncedValue","setDebouncedValue","valueRef","animationFrame","loop","requestAnimationFrame","cancelAnimationFrame","sin","cos","addEventListener","removeEventListener","ChildContainer","Dial_templateObject3","InfiniKnob","_ref2$size","setKnobContainer","Dial_Inner","click","require","scheduleNote","time","gain","buffer","sound","createBufferSource","volume","createGain","destination","start","lastTime","addBeatsToQueue","nextNoteTime","currentBeat","currentTime","scheduleAhead","beatsQueue","nextBeat","secondsPerBeat","beatsForNextMeasure","startOfBeatTime","activeDeets","noteOffset","beat","divisionLength","sort","beatsFor","apply","toConsumableArray","intervalError","useScheduleAhead","url","_React$useState9","_React$useState10","updateBuffer","fetch","response","arrayBuffer","decodeAudioData","useAudioBuffer","numeratorSize","numeratorSizeRef","playingRef","nextNoteTimeRef","delay","beatToSchedule","updateUi","timeToRun","callback","setTimeout","runAtTime","getIn","Deque","firstClickTime","min","intervalLength","scheduleTil","peekFront","toSchedule","shift","playBeatsTill","useMetronome","s","numeratorBeat","oldActiveBeat","activeBeat","enabled","FullPage","Metronome_templateObject","DialSection","Dial","Metronome_BPM","components_TempoMarking","Controls","components_TapIn","Metronome","components_Tuner","components_TimeSignature","ScaleMode","SettingsWrapper","Settings_templateObject","Settings","checked","onChange","BumpBpm","scale","remove","LearnScales","reset","scaleMode","LEARNING","KNOWN","floor","random","toArray","scaleIds","setScaleIds","nextScaleText","first","currentScale","nextScale","rest","next","alignSelf","fontWeight","display","marginBottom","justifyContent","ModeGroup","hideKnown","Scales_ScaleRow","ScaleRow","Scales","NOT_STARTED","setScaleMode","_hooks$usePersistantT","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","ShowKnown","_hooks$usePersistantT2","showKnown","toggleShowKnown","hasKnown","hasLearning","Scales_ModeGroup","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","status","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","rotate","keyframes","Update_templateObject","UpdateStyle","Update_templateObject2","hasRegistered","Update","updateAvailable","setUpdateAvailable","close","TopBarWrapper","App_templateObject","CenterIcon","span","App_templateObject2","TopNav","App_templateObject3","dropDown","App_templateObject4","NavDropDown","nav","App_templateObject5","NavItem","Link","_templateObject6","NavIcon","FontAwesomeIcon","_templateObject7","NavDrop","toggleNav","icon","faHome","faMusic","faGear","TopBar","_hooks$useToggle","_hooks$useToggle2","showNav","thing","react_router_dom","index_es","faCoffee","faBars","App_NavDrop","WrapperStyle","_templateObject8","FooterStyle","_templateObject9","Wrapper","App","_React$useState11","_React$useState12","audioContextRef","_React$useState13","_React$useState14","hasFixed","setHasFixed","fixAudioContext","resume","document","context","shouldSleep","NoSleep","noSleep","enable","disable","basename","react_router","exact","path","render","components_Metronome","components_Scales","components_Settings","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Error","message","stack","JSON","stringify","Component","ReactDOM","es","src_ErrorBoundary","components_App","getElementById"],"mappings":"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","file":"static/js/main.ede15626.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\nimport * as immutable from \"immutable\";\n\nexport type RSA<T> = React.SetStateAction<T>;\nexport type Action =\n  | { type: ActionType.SetActiveBeats; action: RSA<ActiveBeats> }\n  | { type: ActionType.SetSettings; action: RSA<AppSettingsState> }\n  | { type: ActionType.SetScales; action: RSA<ScalesDB> }\n  | { type: ActionType.SetMetronomeState; action: RSA<MetronomeState> };\n\nexport interface ReduxState {\n  activeBeats: ActiveBeats;\n  metronomeState: MetronomeState;\n  settings: AppSettingsState;\n  scales: ScalesDB;\n}\n\nexport enum ActionType {\n  SetScales,\n  SetActiveBeats,\n  SetMetronomeState,\n  SetSettings\n}\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  divisionLength: number;\n  currentBeat: number;\n  isAccented: boolean;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\nexport interface DivisionDetails {\n  isActive: boolean;\n  isAccented: boolean;\n}\nexport const defaultDivisionDetails: DivisionDetails = {\n  isActive: false,\n  isAccented: false\n};\n\nexport type ActiveDivision = immutable.List<DivisionDetails>;\nexport const defaultActiveDivision: ActiveDivision = immutable.List();\n\nexport type ActiveBeat = immutable.Map<Division, ActiveDivision>;\nexport const defaultActiveBeat: ActiveBeat = immutable.Map();\n\nexport type ActiveBeats = immutable.List<ActiveBeat>;\nexport const defaultActiveBeats: ActiveBeats = immutable.List();\n\nexport type EnabledDivisions = immutable.Map<Division, boolean>;\n\nexport type Numerator = immutable.List<EnabledDivisions>;\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: Numerator;\n}\n\nexport interface MetronomeState {\n  ready: boolean;\n  pending: boolean;\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n}\n\nexport interface AppSettingsState {\n  keepAwake: boolean;\n  showTuner: boolean;\n}\n\nexport interface AppSettings {\n  state: AppSettingsState;\n  toggleKeepAwake: () => void;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n}\n\nexport type MAudioContext =\n  | AudioContext\n  | \"pending\"\n  | \"not-supported\"\n  | undefined;\n\nexport enum LocalStorageKey {\n  EnabledDivisions = \"@mjh/k/enabled-divisions-0\",\n  AppSettings = \"@mjh/k/app-settings-0\",\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db-3\",\n  ActiveBeats = \"@mjh/k/active-beats-3\",\n  TimeSignature = \"@mjh/k/signature-3\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\",\n  WakeLock = \"@mjh/k/wake-lock-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO: - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n  id: string;\n}\n\nexport type ScalesDB = immutable.OrderedSet<Scale>;\n","import * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\n\nexport function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\n// TODO: - I might be able to overload this so it's actually typesafe by making\n// the return type dependant on a key literal.\nexport const fromLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  defaultValue: T\n): T => {\n  const fromLocal = localStorage.getItem(key);\n  if (fromLocal === null) {\n    return defaultValue;\n  } else {\n    return transit.fromJSON(fromLocal);\n  }\n};\n\nexport const toLocalStorage = <T>(key: t.LocalStorageKey, value: T) => {\n  localStorage.setItem(key, transit.toJSON(value));\n};\n\nexport const shuffle = <T>(a: Array<T>) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n};\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  // const now = audioContext.currentTime;\n  // if (timeToRun <= now) {\n  //   callback();\n  // } else {\n  //   const sleepTime = ((timeToRun - now) / 2) * 1000;\n  //   setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  // }\n  setTimeout(callback, (timeToRun - audioContext.currentTime) * 1000);\n};\n","import * as redux from \"redux\";\nimport * as t from \"./types\";\nimport * as immutable from \"immutable\";\nimport * as reactRedux from \"react-redux\";\nimport * as R from \"ramda\";\nimport * as util from \"./util\";\n\nexport const setPending = (action: t.RSA<boolean>) => {\n  setMetronomeState(old => ({\n    ...old,\n    pending: applyAction(action, old.pending)\n  }));\n};\n\nexport const setBPM = (action: React.SetStateAction<number>) => {\n  setMetronomeState(old => {\n    const bpm = clampBPM(applyAction(action, old.bpm));\n    util.toLocalStorage(t.LocalStorageKey.BPM, bpm);\n    return { ...old, bpm };\n  });\n};\n\nexport const setSignature = (action: React.SetStateAction<t.TimeSignature>) => {\n  setMetronomeState(old => {\n    const signature = applyAction(action, old.signature);\n    util.toLocalStorage(t.LocalStorageKey.TimeSignature, signature);\n    return { ...old, signature };\n  });\n};\n\nexport const toggleLearning = (id: string) => {\n  setScales(old => {\n    const scale = old.find(s => s.id === id);\n    if (!scale) {\n      return old;\n    }\n    return old.remove(scale).add({ ...scale, learning: !scale.learning });\n  });\n};\nexport const toggleKnown = (id: string) => {\n  setScales(old => {\n    const scale = old.find(s => s.id === id);\n    if (!scale) {\n      return old;\n    }\n    return old.remove(scale).add({ ...scale, known: !scale.known });\n  });\n};\n\nexport const addBPMToScale = (id: string, bpm: number) => {\n  setScales(old => {\n    const scale = old.find(s => s.id === id);\n    if (!scale) {\n      return old;\n    }\n    return old.remove(scale).add({ ...scale, bpm: scale.bpm + bpm });\n  });\n};\n\nexport const updateActiveBeat = (beat: t.Beat) => {\n  setActiveBeats(old => {\n    const oldBeats = old.getIn([\n      beat.currentBeat,\n      beat.divisions,\n      beat.divisionIndex\n    ]);\n    if (oldBeats === undefined) {\n      return old;\n    }\n    return old.update(beat.currentBeat, a => {\n      return a.update(beat.divisions, b => {\n        return b.update(beat.divisionIndex, c => {\n          return { ...c, isActive: !c.isActive };\n        });\n      });\n    });\n  });\n};\n\nexport const setAccent = (\n  beatIdx: number,\n  division: t.Division,\n  divisionIdx: number,\n  action: t.RSA<boolean>\n) => {\n  setActiveBeats(old =>\n    old.update(beatIdx, a => {\n      return a.update(division, d => {\n        return d.update(divisionIdx, dd => {\n          return { ...dd, isAccented: applyAction(action, dd.isAccented) };\n        });\n      });\n    })\n  );\n};\n\nexport const toggleAccent = (\n  beatIdx: number,\n  division: t.Division,\n  divisionIdx: number\n) => {\n  setAccent(beatIdx, division, divisionIdx, a => !a);\n};\n\nexport const toggleKeepAwake = () => {\n  setKeepAwake(old => !old);\n};\n\nexport const toggleTuner = () => {\n  setTuner(a => !a);\n};\n\nexport const addBPM = (action: number) => {\n  setBPM(old => old + action);\n};\n\nexport const resetActivebeats = () => {\n  setActiveBeats(abs =>\n    abs.map(ab => ab.map(dd => dd.map(d => ({ ...d, isActive: false }))))\n  );\n};\n\nexport const clearAccents = () => {\n  setActiveBeats(abs =>\n    abs.map(ab => ab.map(dd => dd.map(d => ({ ...d, isAccented: false }))))\n  );\n};\n\nexport const updateActiveBeats = (numerator: t.Numerator) => {\n  setActiveBeats(old => {\n    return numerator.map((numeratorBeat, beatIndex) => {\n      const oldActiveBeat = old.get(beatIndex);\n      return numeratorBeat.reduce(\n        (activeBeat: t.ActiveBeat, enabled, division) => {\n          if (enabled) {\n            // Check to see if this division was already there.\n            if (oldActiveBeat && oldActiveBeat.get(division)) {\n              return activeBeat.set(division, oldActiveBeat.get(division)!);\n            }\n            return activeBeat.set(\n              division,\n              immutable.List(\n                R.range(0, division).map(() => ({\n                  isActive: false,\n                  isAccented: false\n                }))\n              )\n            );\n          } else {\n            return activeBeat;\n          }\n        },\n        immutable.Map<t.Division, t.ActiveDivision>() as t.ActiveBeat\n      );\n    });\n  });\n};\n\nexport const toggleStart = () => {\n  setPlaying(a => !a);\n};\n\nexport const start = (bpm?: number) => {\n  if (bpm !== undefined) {\n    setBPM(bpm);\n  }\n  setPlaying(true);\n};\n\nexport const stop = () => {\n  setPlaying(false);\n};\n\nconst setPlaying = (action: React.SetStateAction<boolean>) => {\n  setMetronomeState(old => ({\n    ...old,\n    playing: applyAction(action, old.playing)\n  }));\n};\n\nconst setKeepAwake = (action: React.SetStateAction<boolean>) => {\n  setSettings(old => ({\n    ...old,\n    keepAwake: applyAction(action, old.keepAwake)\n  }));\n};\n\nconst setTuner = (action: t.RSA<boolean>) => {\n  const nextValue =\n    action instanceof Function\n      ? action(store.getState().settings.showTuner)\n      : action;\n  setSettings(old => ({ ...old, showTuner: nextValue }));\n};\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\nconst applyAction = <T>(action: t.RSA<T>, current: T) => {\n  return action instanceof Function ? action(current) : action;\n};\n\nexport const setActiveBeats = (action: t.RSA<t.ActiveBeats>) => {\n  const nextValue =\n    action instanceof Function ? action(store.getState().activeBeats) : action;\n  util.toLocalStorage(t.LocalStorageKey.ActiveBeats, nextValue);\n  store.dispatch({ type: t.ActionType.SetActiveBeats, action: nextValue });\n};\n\nconst setMetronomeState = (action: t.RSA<t.MetronomeState>) => {\n  store.dispatch({ type: t.ActionType.SetMetronomeState, action });\n};\n\nconst setSettings = (action: t.RSA<t.AppSettingsState>) => {\n  const nextValue =\n    action instanceof Function ? action(store.getState().settings) : action;\n  util.toLocalStorage(t.LocalStorageKey.AppSettings, nextValue);\n  store.dispatch({ type: t.ActionType.SetSettings, action: nextValue });\n};\n\nconst setScales = (action: t.RSA<t.ScalesDB>): void => {\n  const nextValue = (action instanceof Function\n    ? action(store.getState().scales)\n    : action\n  ).sortBy(a => a.pitch);\n  util.toLocalStorage(t.LocalStorageKey.ScalesDB, nextValue);\n  store.dispatch({\n    type: t.ActionType.SetScales,\n    action: nextValue\n  });\n};\n\nconst defaultBeat = () => immutable.Map<t.Division, boolean>().set(1, true);\n\nconst defaultSignature = () =>\n  util.fromLocalStorage(t.LocalStorageKey.TimeSignature, {\n    denominator: 4,\n    numerator: immutable.List([\n      defaultBeat(),\n      defaultBeat(),\n      defaultBeat(),\n      defaultBeat()\n    ])\n  });\n\nconst initScale = (scaleKey: t.ScaleKey): t.Scale => ({\n  scaleKey,\n  pitch: scaleKey[0],\n  mode: scaleKey[1],\n  known: false,\n  learning: false,\n  bpm: 60,\n  id: `scaleId-${scaleKey[0]}-${scaleKey[1]}`\n});\n\nconst addScale = (scalesDB: t.ScalesDB, key: t.ScaleKey): t.ScalesDB => {\n  return scalesDB.add(initScale(key));\n};\n\nconst initScalesDB = (): t.ScalesDB => {\n  return t.scaleKeys\n    .reduce(\n      (scalesDB: t.ScalesDB, scaleKey) => addScale(scalesDB, scaleKey),\n      immutable.OrderedSet<t.Scale>()\n    )\n    .sortBy(a => a.pitch);\n};\n\nconst initialActiveBeats = (\n  beats: immutable.List<t.EnabledDivisions>\n): immutable.List<t.ActiveBeat> =>\n  immutable.List(\n    beats.map((enabledDivisions: t.EnabledDivisions) =>\n      enabledDivisions.reduce((acc, b, d) => {\n        return b\n          ? acc.set(\n              d,\n              immutable.List(\n                R.range(0, d).map(() => ({ isActive: true, isAccented: false }))\n              )\n            )\n          : acc;\n      }, immutable.Map<t.Division, t.ActiveDivision>())\n    )\n  );\n\nconst defaultStore = (): t.ReduxState => {\n  const signature = defaultSignature();\n  return {\n    // TODO: hydrate this from localStorage.\n    scales: util.fromLocalStorage(t.LocalStorageKey.ScalesDB, initScalesDB()),\n    activeBeats: util.fromLocalStorage(\n      t.LocalStorageKey.ActiveBeats,\n      initialActiveBeats(signature.numerator)\n    ),\n    settings: util.fromLocalStorage(t.LocalStorageKey.AppSettings, {\n      keepAwake: false,\n      showTuner: false\n    }),\n    metronomeState: {\n      ready: false,\n      pending: true,\n      bpm: util.fromLocalStorage(t.LocalStorageKey.BPM, 60),\n      playing: false,\n      signature: signature\n    }\n  };\n};\n// TODO: - figure out how to add a local storage thing for hydration???\nconst rootReducer = (\n  store: t.ReduxState = defaultStore(),\n  action: t.Action\n): t.ReduxState => {\n  switch (action.type) {\n    case t.ActionType.SetActiveBeats:\n      return Object.assign(store, {\n        activeBeats: applyAction(action.action, store.activeBeats)\n      });\n    case t.ActionType.SetMetronomeState:\n      return {\n        ...store,\n        metronomeState: applyAction(action.action, store.metronomeState)\n      };\n    case t.ActionType.SetSettings:\n      return {\n        ...store,\n        settings: applyAction(action.action, store.settings)\n      };\n    case t.ActionType.SetScales:\n      return {\n        ...store,\n        scales: applyAction(action.action, store.scales)\n      };\n    default:\n      // @ts-ignore - It's too smart for us here, but this is safe.\n      if (!(action.type as any).startsWith(\"@@redux\")) {\n        console.log(action, \"was not handled\");\n      }\n      return store;\n  }\n};\n\nexport const store = redux.createStore(rootReducer);\n\n// TODO: - once this hook is standardized, update to use it directly.\nexport const useSelector = <T>(\n  selector: (state: t.ReduxState) => T,\n  comparisonFn?: (t1: T, t2: T) => boolean\n): T => {\n  return (reactRedux as any).useSelector(selector, comparisonFn);\n};\n","import React from \"react\";\nimport * as immutable from \"immutable\";\nimport * as R from \"ramda\";\nimport * as redux from \"../redux\";\n\ninterface Marking {\n  high: number;\n  low: number;\n  name: string;\n}\n\nexport const markings: immutable.List<Marking> = immutable.List([\n  { name: \"Larghissimo\", low: 0, high: 24 },\n  { name: \"Grave\", low: 25, high: 45 },\n  { name: \"Largo\", low: 40, high: 60 },\n  { name: \"Lento\", low: 45, high: 60 },\n  { name: \"Larghetto\", low: 60, high: 66 },\n  { name: \"Adagio\", low: 66, high: 76 },\n  { name: \"Andante\", low: 76, high: 108 },\n  { name: \"Marcia moderato\", low: 83, high: 85 },\n  { name: \"Andante moderato\", low: 92, high: 112 },\n  { name: \"Moderato\", low: 108, high: 120 },\n  { name: \"Allegro\", low: 120, high: 156 },\n  { name: \"Vivace\", low: 156, high: 176 },\n  { name: \"Vivacissimo\", low: 172, high: 176 },\n  { name: \"Allegrissimo\", low: 172, high: 176 },\n  { name: \"Presto\", low: 168, high: 200 },\n  { name: \"Prestissimo\", low: 200, high: 250 }\n]);\n\nconst inRange = (to: number, from: number, test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = R.memoizeWith(\n  a => \"\" + a,\n  (bpm: number): immutable.List<Marking> =>\n    markings.filter(({ high, low }) => inRange(high, low, bpm))\n);\n\ninterface MarkingProps {\n  name: string;\n  low: number;\n  high: number;\n}\n\nconst Marking: React.FC<MarkingProps> = React.memo(({ name, low, high }) => {\n  return (\n    <div className=\"has-text-centered\">\n      {name} - {low} - {high}\n    </div>\n  );\n});\n\nconst TempoMarking = React.memo(\n  ({ bpm }: { bpm: number }) => {\n    const markings = fromBPM(bpm);\n    return (\n      <div style={{ minHeight: \"6.5em\" }}>\n        {markings.map(({ name, high, low }) => (\n          <Marking key={`marking-${name}`} name={name} high={high} low={low} />\n        ))}\n      </div>\n    );\n  },\n  ({ bpm: old }, { bpm: nu }) => fromBPM(old).equals(fromBPM(nu))\n);\n\nconst Wrap = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <TempoMarking bpm={bpm} />;\n};\n\nexport default Wrap;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\n\nexport const maxWidth = \"40em\";\n\ntype ReactButton = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\ninterface ButtonProps extends ReactButton {\n  primary?: boolean;\n  isPrimary?: boolean;\n  isLink?: boolean;\n  isInfo?: boolean;\n  isSuccess?: boolean;\n  isDanger?: boolean;\n  isOutlined?: boolean;\n  offIsPrimary?: boolean;\n  offIsLink?: boolean;\n  offIsInfo?: boolean;\n  offIsSuccess?: boolean;\n  offIsDanger?: boolean;\n  offIsOutlined?: boolean;\n  grow?: boolean;\n}\n\ninterface ToggleButtonProps extends ButtonProps {\n  on: boolean;\n}\n\nconst offProps = [\n  \"offIsPrimary\",\n  \"offIsLink\",\n  \"offIsDanger\",\n  \"offIsInfo\",\n  \"offIsSuccess\",\n  \"offIsOutlined\"\n];\nconst onProps = [\n  \"isPrimary\",\n  \"isLink\",\n  \"isDanger\",\n  \"isInfo\",\n  \"isSuccess\",\n  \"isOutlined\"\n];\n\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({ on, ...props }) => {\n  const renderProps = React.useMemo(() => {\n    const toRemove = on ? offProps : onProps;\n    return R.omit(toRemove, props);\n  }, [on, props]);\n\n  const child = React.useMemo(\n    () =>\n      props.children instanceof Array && props.children.length === 2\n        ? on\n          ? props.children[0]\n          : props.children[1]\n        : props.children,\n    [props, on]\n  );\n  return <Button {...renderProps}>{child}</Button>;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  isPrimary,\n  isDanger,\n  isLink,\n  isInfo,\n  isSuccess,\n  isOutlined,\n  offIsPrimary,\n  offIsDanger,\n  offIsLink,\n  offIsInfo,\n  offIsSuccess,\n  offIsOutlined,\n  grow,\n  className: propsClassName,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(\"button\", propsClassName, {\n        \"is-primary\": isPrimary || offIsPrimary,\n        \"is-link\": isLink || offIsLink,\n        \"is-danger\": isDanger || offIsDanger,\n        \"is-info\": isInfo || offIsInfo,\n        \"is-success\": isSuccess || offIsSuccess,\n        \"is-outlined\": isOutlined || offIsOutlined,\n        \"is-grow\": grow\n      }),\n    [\n      propsClassName,\n      grow,\n      isPrimary,\n      offIsPrimary,\n      isLink,\n      offIsLink,\n      isDanger,\n      offIsDanger,\n      isInfo,\n      offIsInfo,\n      isOutlined,\n      offIsOutlined,\n      isSuccess,\n      offIsSuccess\n    ]\n  );\n  const renderProps = React.useMemo(() => {\n    return { ...props, className };\n  }, [props, className]);\n\n  return <button {...renderProps}>{props.children}</button>;\n};\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hasAddons?: true;\n  grow?: true;\n  isRight?: true;\n}\n\nconst ButtonsWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0 !important;\n  }\n`;\n\nexport const Buttons: React.FC<ButtonsProps> = ({\n  children,\n  hasAddons,\n  isRight,\n  ref,\n  className: propsClassName,\n  grow,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(propsClassName, \"buttons\", {\n        \"has-addons\": hasAddons,\n        \"is-grow\": grow,\n        \"is-right\": isRight\n      }),\n    [hasAddons, grow, propsClassName, isRight]\n  );\n  return (\n    <ButtonsWrapper ref={ref as any} {...props} className={className}>\n      {children}\n    </ButtonsWrapper>\n  );\n};\n","interface Constructable<T> {\n  new (): T;\n}\n\nexport const AudioContext: Constructable<AudioContext> | undefined =\n  (window as any).AudioContext || // Default\n  (window as any).webkitAudioContext || // Safari and old versions of Chrome\n  undefined;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as polyfill from \"./polyfill\";\nimport * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\nimport NoSleep from \"nosleep.js\";\n\nexport const useSingleton = <T>(initialValue?: T) => {\n  const [value, setValue] = React.useState<T | undefined>(initialValue);\n\n  const setValueOnce = React.useCallback(\n    (t: T) => {\n      if (!value) {\n        setValue(t);\n      }\n    },\n    [value]\n  );\n\n  return {\n    value: value,\n    init: setValueOnce\n  };\n};\n\nexport const useSleepLock = (shouldSleep: boolean) => {\n  const [noSleep] = React.useState(new NoSleep());\n\n  React.useEffect(() => {\n    if (shouldSleep) {\n      noSleep.enable();\n    } else {\n      noSleep.disable();\n    }\n  }, [shouldSleep, noSleep]);\n};\n\n// TODO: - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = React.useState(() => {\n    let firstValue: T;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = transit.fromJSON(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, transit.toJSON(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = React.useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, transit.toJSON(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = React.useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = React.useState(initialValue);\n  const toggle = React.useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = React.useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = React.useRef<any[]>(values);\n\n  React.useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: t.MAudioContext,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = React.useState<AudioBuffer>();\n  React.useEffect(() => {\n    if (\n      // TODO: - refactor this out into a helper method if possible.\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\"\n    ) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nexport const useAudioContext = ():\n  | AudioContext\n  | undefined\n  | \"pending\"\n  | \"not-supported\" => {\n  const [audioContext, setAudioContext] = React.useState<\n    AudioContext | \"not-supported\" | \"pending\" | undefined\n  >();\n  const audioContextRef = React.useRef<AudioContext>();\n  const [hasFixed, setHasFixed] = React.useState(false);\n\n  const fixAudioContext = React.useCallback(() => {\n    if (!hasFixed) {\n      if (audioContextRef.current !== undefined) {\n        setAudioContext(\"pending\");\n        audioContextRef.current.resume().then(() => {\n          setHasFixed(true);\n          setAudioContext(audioContextRef.current);\n          document.removeEventListener(\"touchstart\", fixAudioContext);\n          document.removeEventListener(\"click\", fixAudioContext);\n          document.removeEventListener(\"touchend\", fixAudioContext);\n        });\n      }\n    }\n  }, [hasFixed, setHasFixed]);\n\n  React.useEffect(() => {\n    if (polyfill.AudioContext === undefined) {\n      setAudioContext(\"not-supported\");\n    } else {\n      const context = new polyfill.AudioContext();\n      audioContextRef.current = context;\n      if (context.state === \"suspended\") {\n        document.addEventListener(\"touchstart\", fixAudioContext);\n        document.addEventListener(\"click\", fixAudioContext);\n        document.addEventListener(\"touchend\", fixAudioContext);\n      } else {\n        setAudioContext(context);\n      }\n    }\n  }, [fixAudioContext]);\n\n  return audioContext;\n};\n\nexport const useAnimationFrameDebounce = <T>(value: T) => {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n  const valueRef = React.useRef<T>(value);\n\n  React.useEffect(() => {\n    valueRef.current = value;\n  }, [value]);\n\n  React.useEffect(() => {\n    let animationFrame = -1;\n\n    const tick = () => {\n      loop();\n      setDebouncedValue(valueRef.current);\n    };\n\n    const loop = () => {\n      animationFrame = requestAnimationFrame(tick);\n    };\n    loop();\n\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, []);\n\n  return debouncedValue;\n};\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport * as Common from \"./Common\";\nimport * as hooks from \"../hooks\";\nimport * as t from \"../types\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"../redux\";\n\ninterface DivisionsProps {\n  uiEnabledDivisions: t.EnabledDivisions;\n  toggleDivisionOption: (option: t.Division) => void;\n  clearDivisions: () => void;\n}\n\nconst DivisionsWrapper = React.memo(styled.section`\n  display: flex;\n  align-items: baseline;\n  > button {\n    margin-right: 5px;\n  }\n  > div {\n    margin-right: 5px;\n  }\n`);\n\nconst Divisions: React.FC<DivisionsProps> = React.memo(\n  ({ uiEnabledDivisions, toggleDivisionOption, clearDivisions }) => {\n    return (\n      <DivisionsWrapper>\n        <div className=\"is-size-5\">Division</div>\n        <Common.Buttons hasAddons grow style={{ marginRight: \"5px\" }}>\n          {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => {\n            const on = uiEnabledDivisions.get(num)!;\n            return (\n              <Common.ToggleButton\n                grow\n                on={on}\n                isPrimary\n                key={`division-options-${num}`}\n                onClick={() => toggleDivisionOption(num)}\n              >\n                {num}\n              </Common.ToggleButton>\n            );\n          })}\n        </Common.Buttons>\n        <Common.Button grow isDanger isOutlined onClick={clearDivisions}>\n          Clear\n        </Common.Button>\n      </DivisionsWrapper>\n    );\n  }\n);\n\n// TODO: the logic for the time signature is way too complicated. I should update this to be simplier.\n// TODO: When changing the time signature, if we're adding, we should keep\n// existing accents, and use the same divisions as currently enabled in the UI.\n// TODO: When changing the time signature, if we're removing, we should just\n// remove from the end of the list.\nconst TimeSignature = () => {\n  const setSignature = redux.setSignature;\n  const numerator = redux.useSelector(\n    a => a.metronomeState.signature.numerator\n  );\n\n  const [hasChanged, setHasChanged] = React.useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = hooks.useLocalStorage<\n    t.EnabledDivisions\n  >(\n    t.LocalStorageKey.EnabledDivisions,\n    immutable.Map<t.Division, boolean>().set(1, true)\n  );\n\n  React.useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, old.numerator.size).map(() => uIenabledDivisions)\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = React.useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old => {\n        const oldValue = old.get(divisionOption);\n        const newValue = oldValue === undefined ? true : !oldValue;\n        return old.set(divisionOption, newValue);\n      });\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = React.useCallback(() => {\n    setUiEnabledDivisions(immutable.Map<t.Division, boolean>().set(1, true));\n  }, [setUiEnabledDivisions]);\n\n  // TODO: - make it where clicking on a division group lets you set the volume & accents for that group.\n  // TODO: - add an option to turn on or off the accent at the start of every measure.\n  // TODO: - clean up these buttons to not use className.\n\n  const [currentNumerator, setCurrentNumerator] = React.useState(\n    numerator.size\n  );\n\n  React.useEffect(() => {\n    setSignature(old => ({\n      ...old,\n      numerator: immutable.List(\n        R.range(0, currentNumerator).map(() => uIenabledDivisions)\n      )\n    }));\n  }, [currentNumerator, setSignature, uIenabledDivisions]);\n\n  return (\n    <>\n      <Beats />\n      <Divisions\n        uiEnabledDivisions={uIenabledDivisions}\n        toggleDivisionOption={toggleDivisionOption}\n        clearDivisions={clearDivisions}\n      />\n      <Signature\n        currentNumerator={numerator.size}\n        setCurrentNumerator={setCurrentNumerator}\n      />\n    </>\n  );\n};\n\ninterface SignatureProps {\n  setCurrentNumerator: (numerator: number) => void;\n  currentNumerator: number;\n}\n\nconst Signature: React.FC<SignatureProps> = React.memo(\n  ({ setCurrentNumerator, currentNumerator }) => {\n    const hasAccent = redux.useSelector(\n      a => !!a.activeBeats.find(b => !!b.find(c => !!c.find(d => d.isAccented)))\n    );\n    return (\n      <section className=\"section buttons is-centered\">\n        <Common.Button\n          disabled={!hasAccent}\n          isDanger={hasAccent}\n          onClick={() => redux.clearAccents()}\n        >\n          {\">\"}\n        </Common.Button>\n        {[1, 2, 3, 4, 5].map(num => {\n          const on = currentNumerator === num;\n          return (\n            <Common.ToggleButton\n              key={`numerator-button-${num}`}\n              on={on}\n              isPrimary\n              isOutlined\n              grow\n              onClick={on ? () => {} : () => setCurrentNumerator(num)}\n            >\n              <>{num}/4</>\n            </Common.ToggleButton>\n          );\n        })}\n      </section>\n    );\n  }\n);\n\nconst BeatRowItemWrapper = React.memo(styled.div`\n  width: 1px;\n  margin-left: 1px;\n  margin-right: 1px;\n  flex-grow: 1;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`);\n\nconst BeatRowWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n`);\n\nconst BeatWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`);\n\nconst BeatsWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 10px;\n`);\n\n// TODO: - the selected division values should reset when you stop the metronome.\n// TODO: - If not playing, this should show the boring gray background.\n// TODO: - Resetting the beats should not reset the chosen accents.\n// TODO: I could write typed helpers for trying to navigate down the\n// a.activeBeats.\nconst BeatRowItem: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  divisionIndex: number;\n  height: number;\n}> = React.memo(({ height, beatIndex, division, divisionIndex }) => {\n  const details = redux.useSelector(\n    a =>\n      a.activeBeats\n        .get(beatIndex)!\n        .get(division)!\n        .get(divisionIndex)!\n  );\n  const className = React.useMemo(() => {\n    return details.isActive ? \"has-background-link\" : \"has-background-primary\";\n  }, [details.isActive]);\n  return (\n    <BeatRowItemWrapper\n      className={className}\n      onClick={() => redux.toggleAccent(beatIndex, division, divisionIndex)}\n      style={{\n        height,\n        marginTop: 1\n      }}\n    >\n      <div>{details.isAccented && \">\"}</div>\n    </BeatRowItemWrapper>\n  );\n});\n\nconst BeatRow: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  height: number;\n}> = React.memo(({ height, beatIndex, division }) => {\n  return (\n    <BeatRowWrapper>\n      {R.range(0, division).map(divisionIndex => (\n        <BeatRowItem\n          key={`${beatIndex}-${division}-${divisionIndex}`}\n          height={height}\n          beatIndex={beatIndex}\n          division={division}\n          divisionIndex={divisionIndex}\n        />\n      ))}\n    </BeatRowWrapper>\n  );\n});\n\nconst Beat: React.FC<{\n  beatIndex: number;\n}> = React.memo(({ beatIndex }) => {\n  const divisions = redux.useSelector(\n    a => a.activeBeats.get(beatIndex)!.keySeq(),\n    (a, b) => a.equals(b)\n  );\n  return (\n    <BeatWrapper key={`${beatIndex}`}>\n      {divisions.map(division => (\n        <BeatRow\n          height={70 / divisions.size!}\n          key={`${beatIndex}-${division}`}\n          beatIndex={beatIndex}\n          division={division}\n        />\n      ))}\n    </BeatWrapper>\n  );\n});\n\n// TODO: - make it where you can click and drag on the visual subdivision to\n// change the volume and double tap to change it's color and also make it an\n// accent?\nconst Beats: React.FC = React.memo(() => {\n  const activeBeats = redux.useSelector(a => a.activeBeats.size);\n  return (\n    <BeatsWrapper>\n      {R.range(0, activeBeats).map(beatIndex => (\n        <Beat key={beatIndex} beatIndex={beatIndex} />\n      ))}\n    </BeatsWrapper>\n  );\n});\n\nexport default TimeSignature;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport * as Common from \"./Common\";\nimport * as redux from \"../redux\";\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn: React.FC = () => {\n  const [taps, setTaps] = React.useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      redux.setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return (\n    <Common.Button isLink isOutlined onClick={onTap}>\n      Tap In\n    </Common.Button>\n  );\n};\n\nexport default TapIn;\n","import React from \"react\";\nimport { useToggle } from \"../hooks\";\nimport * as Common from \"./Common\";\nimport styled from \"styled-components\";\nimport * as polyfill from \"../polyfill\";\nimport * as redux from \"../redux\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = React.memo(() => {\n  const [on, toggleOn] = useToggle(false);\n  const [analyser, setAnalyser] = React.useState<AnalyserNode>();\n  const [sampleRate, setSampleRate] = React.useState<number>();\n  const [freq, setFreq] = React.useState<number>(440);\n  const [audioContext, setAudioContext] = React.useState<AudioContext>();\n\n  // Initailize the AudioContext when user turns on the tuner.\n  React.useEffect(() => {\n    if (on && !audioContext && polyfill.AudioContext !== undefined) {\n      setAudioContext(new polyfill.AudioContext());\n    }\n  }, [on, audioContext]);\n\n  // Prompt for microphone when user turns on the tuner.\n  React.useEffect(() => {\n    if (on && audioContext) {\n      setSampleRate(audioContext.sampleRate);\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices) {\n        let mediaStream: MediaStream;\n        mediaDevices.getUserMedia({ audio: true }).then((ms: MediaStream) => {\n          mediaStream = ms;\n          const analyser = audioContext.createAnalyser();\n          // If this isn't big, I don't have very good frequency accuracy, and I\n          // can't change the sample rate because web audio sucks.\n          analyser.fftSize = 8192;\n          const mic = audioContext.createMediaStreamSource(ms);\n          mic.connect(analyser);\n          setAnalyser(analyser);\n        });\n        return () => {\n          mediaStream.getAudioTracks().forEach(track => track.stop());\n        };\n      }\n    }\n  }, [on, audioContext]);\n\n  React.useEffect(() => {\n    if (on && analyser && sampleRate) {\n      const tick = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Float32Array(bufferLength);\n        analyser.getFloatFrequencyData(dataArray);\n        const [, maxIdx] = dataArray.reduce(\n          (a, b, i) => (a[0] < b ? [b, i] : a),\n          [-Infinity, -1]\n        );\n        const resolution = sampleRate / analyser.fftSize;\n        const freq = resolution * maxIdx;\n        setFreq(freq);\n      };\n      tick();\n      let interval = setInterval(tick, 50);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [on, analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  // TODO: - add in a graph of the FFT that's label with pitches and neato log bars.\n  return (\n    <TunerWrapper className=\"box has-text-centered\">\n      <Close>\n        <Common.Button isDanger isOutlined onClick={redux.toggleTuner}>\n          X\n        </Common.Button>\n      </Close>\n      <div className=\"is-size-1\">{on ? note + octave : \"Stopped\"}</div>\n\n      <div>\n        {on ? (\n          <>\n            {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n          </>\n        ) : (\n          \"press start to tune\"\n        )}\n      </div>\n      <Common.Buttons className=\"is-right\">\n        <Common.ToggleButton on={on} isDanger offIsPrimary onClick={toggleOn}>\n          <>Stop</>\n          <>Start</>\n        </Common.ToggleButton>\n      </Common.Buttons>\n    </TunerWrapper>\n  );\n});\nconst Close = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  text-align: unset !important;\n`;\n\nconst TunerWrapper = styled.section`\n  margin-top: 10px;\n  position: relative;\n`;\n\nexport default Tuner;\n","import React from \"react\";\nimport * as hooks from \"../hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"../types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst InnerWrapper = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface InnerProps {\n  container: HTMLDivElement | null;\n  addDiff: (value: number) => void;\n  size: number;\n}\n\nconst Inner: React.FC<InnerProps> = ({\n  container: knobContainer,\n  addDiff,\n  size\n}) => {\n  const [stateRadians, setRadians] = hooks.useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (Math.PI * 3) / 2\n  );\n  const radiansRef = React.useRef(Math.PI);\n  React.useEffect(() => {\n    radiansRef.current = stateRadians;\n  }, [stateRadians]);\n  const onMouseDown = React.useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  }, []);\n\n  const [mouseDown, setMouseDown] = React.useState(false);\n  const mouseDownRef = React.useRef(false);\n  React.useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = React.useState(0);\n  const totalDiffRef = React.useRef(0);\n  React.useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const onMouseUp = React.useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = React.useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = React.useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      if (knobContainer !== null) {\n        const { clientX, clientY } = e;\n        const box = knobContainer.getBoundingClientRect();\n\n        const boxCenter = {\n          x: box.left + box.width / 2,\n          y: box.top + box.height / 2\n        };\n        const y = -(boxCenter.y - clientY);\n        const x = -(boxCenter.x - clientX);\n        const newRadians = Math.atan2(y, x);\n        let diff = radiansRef.current - newRadians;\n        if (diff < -Math.PI) {\n          diff = -radiansRef.current - newRadians;\n        } else if (diff > Math.PI) {\n          diff = radiansRef.current - -newRadians;\n        }\n        if (diff !== 0) {\n          addToBuffer(diff);\n        }\n        const same = newRadians === radiansRef.current;\n        if (!same) {\n          setRadians(newRadians);\n        }\n      }\n    },\n    [addToBuffer, setRadians, knobContainer]\n  );\n\n  const onTouchMove = React.useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      const t = e.changedTouches;\n      const t0 = t[0];\n      moveKnob(t0);\n    },\n    [moveKnob]\n  );\n\n  const onMouseMove = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  const uiRadians = hooks.useAnimationFrameDebounce(stateRadians);\n\n  const top = React.useMemo(\n    () =>\n      size / 2 +\n      Math.sin(uiRadians) * (size / 4) +\n      (Math.sin(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n  const left = React.useMemo(\n    () =>\n      size / 2 +\n      Math.cos(uiRadians) * (size / 4) +\n      (Math.cos(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  return (\n    <InnerWrapper\n      className=\"has-background-info\"\n      onMouseDown={onMouseDown}\n      onTouchMove={onTouchMove}\n      style={{\n        top,\n        left\n      }}\n    />\n  );\n};\n\ninterface Props {\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [knobContainer, setKnobContainer] = React.useState<HTMLDivElement | null>(\n    null\n  );\n\n  return (\n    <Outer ref={setKnobContainer} className=\"has-background-primary\">\n      <Inner addDiff={addDiff} container={knobContainer} size={size} />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = React.memo(styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`);\n\nexport default InfiniKnob;\n","import React from \"react\";\nimport * as t from \"./types\";\nimport { useAudioBuffer } from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nimport * as redux from \"./redux\";\nimport { store } from \"./redux\";\n\nconst click = require(\"./click.wav\");\n\n// TODO - instead of scheduling a t.Beat, I think I should schedule a\n// t.DivisionDetails\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer }: t.Beat\n) => {\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats: Array<t.Beat> = [];\n  const activeDeets: t.ActiveBeats = store.getState().activeBeats;\n  divisions\n    .filter(a => a)\n    .forEach((_, divisionOption) => {\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const { isAccented } = activeDeets\n          .get(currentBeat, t.defaultActiveBeat)\n          .get(divisionOption, t.defaultActiveDivision)\n          .get(divisionIndex, t.defaultDivisionDetails);\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const divisionLength = noteOffset;\n        const gain = isAccented ? 1.0 : 0.1 * 1.0;\n        const beat: t.Beat = {\n          time,\n          divisionLength,\n          pitch: 220,\n          gain,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat,\n          isAccented\n        };\n        beats.push(beat);\n      }\n    });\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nlet lastTime = -1;\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const toSchedule = beatsQueue.shift()!;\n    if (toSchedule.time !== lastTime || toSchedule.isAccented) {\n      scheduleNote(audioContext, toSchedule);\n    }\n    lastTime = toSchedule.time;\n    updateUi(audioContext, toSchedule);\n  }\n};\n\n// TODO: - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  bpm: number,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useScheduleAhead = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const buffer = useAudioBuffer(audioContext, click);\n  const numeratorSize = redux.useSelector(\n    a => a.metronomeState.signature.numerator.size\n  );\n  const numeratorSizeRef = React.useRef(numeratorSize);\n  const playingRef = React.useRef(playing);\n\n  const scheduleAhead = 0.3;\n  const nextNoteTimeRef = React.useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  const beatToSchedule = React.useRef(0);\n  React.useEffect(() => {\n    if (!playing) {\n      beatToSchedule.current = 0;\n    }\n    playingRef.current = playing;\n    numeratorSizeRef.current = numeratorSize;\n  }, [playing, numeratorSize]);\n\n  const nextBeat = React.useCallback(() => {\n    let old = beatToSchedule.current;\n    beatToSchedule.current = (old + 1) % numeratorSizeRef.current;\n  }, []);\n\n  // TODO: - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = React.useCallback(\n    (audioContext: AudioContext, beat: t.Beat) => {\n      // We ovewrite activeBeats here because it's definitely changing.\n      runAtTime(audioContext, beat.time, () => {\n        if (playingRef.current) {\n          // TODO: - this is super janky.\n          // TODO: - this would be much nicer with an animation.\n          // TODO: - switch this to runAtTime to clear the beat it just set.\n          // TODO: - If the division changes, we should reset all active beats to false.\n          redux.updateActiveBeat(beat);\n        }\n      });\n    },\n    []\n  );\n\n  React.useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\" &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const numerator = store.getState().metronomeState.signature.numerator;\n        const beatIdx = Math.min(beatToSchedule.current, numerator.size - 1);\n        const currentBeat = numerator.get(beatIdx);\n        if (currentBeat !== undefined) {\n          addBeatsToQueue(\n            store.getState().metronomeState.bpm,\n            nextNoteTimeRef,\n            currentBeat,\n            beatToSchedule.current,\n            audioContext.currentTime,\n            scheduleAhead,\n            buffer,\n            beatsQueue,\n            nextBeat\n          );\n        }\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay, buffer, audioContext, updateUi, nextBeat]);\n};\n\nconst useMetronome = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(s => s.metronomeState.playing);\n\n  // If the component using this hook unmounts, we need to stop the metronome.\n  React.useEffect(() => {\n    if (playing) {\n      return () => {\n        redux.stop();\n      };\n    }\n  }, [playing]);\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  const numerator = redux.useSelector(\n    s => s.metronomeState.signature.numerator\n  );\n  React.useEffect(() => {\n    // TODO: - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    redux.resetActivebeats();\n    redux.updateActiveBeats(numerator);\n  }, [numerator]);\n\n  // If the metronome stops playing, we should reset the active beats.\n  React.useEffect(() => {\n    if (!playing) {\n      redux.resetActivebeats();\n    }\n  }, [playing]);\n\n  // Once the audio context is ready, set pending to false.\n  React.useEffect(() => {\n    if (audioContext !== \"pending\" && audioContext !== undefined) {\n      redux.setPending(false);\n    }\n  }, [audioContext]);\n\n  useScheduleAhead(audioContext);\n};\nexport default useMetronome;\n","import React from \"react\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport * as Common from \"./Common\";\nimport useMetronome from \"../metronome\";\nimport * as t from \"../types\";\nimport styled from \"styled-components\";\nimport * as redux from \"../redux\";\n\nconst FullPage = styled.div`\n  margin: 0 !important;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  text-align: center;\n`;\n\ninterface MetronomeProps {\n  audioContext: t.MAudioContext;\n}\n\nconst BPM = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <div className=\"has-text-centered is-size-1\">{bpm}</div>;\n};\n\nconst DialSection: React.FC = React.memo(() => {\n  return (\n    <section className=\"section\">\n      <Dial addDiff={redux.addBPM}>\n        <BPM />\n        <TempoMarking />\n      </Dial>\n    </section>\n  );\n});\n\nconst Metronome: React.FC<MetronomeProps> = ({ audioContext }) => {\n  const pending = redux.useSelector(a => a.metronomeState.pending);\n  const showTuner = redux.useSelector(a => a.settings.showTuner);\n\n  useMetronome(audioContext);\n\n  return (\n    <>\n      {pending && <FullPage>Tap to enable audio.</FullPage>}\n      {showTuner && <Tuner />}\n      <DialSection />\n      <TimeSignature />\n      <Controls />\n    </>\n  );\n};\n\nconst Controls: React.FC = React.memo(() => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const pending = redux.useSelector(a => a.metronomeState.pending);\n  const showTuner = redux.useSelector(a => a.settings.showTuner);\n  return (\n    <section className=\"section\">\n      <Common.Buttons hasAddons>\n        <Common.ToggleButton\n          isLink\n          offIsOutlined\n          offIsLink\n          on={showTuner}\n          onClick={redux.toggleTuner}\n        >\n          Tuner\n        </Common.ToggleButton>\n        <TapIn />\n        <Common.ToggleButton\n          on={playing}\n          offIsPrimary\n          grow\n          isOutlined\n          isDanger\n          disabled={pending}\n          onClick={redux.toggleStart}\n        >\n          <>Stop</>\n          <>Start</>\n        </Common.ToggleButton>\n      </Common.Buttons>\n    </section>\n  );\n});\nexport default Metronome;\n","import React from \"react\";\nimport * as redux from \"../redux\";\nimport styled from \"styled-components\";\n\nconst SettingsWrapper = styled.section``;\n\nconst Settings: React.FC = () => {\n  const keepAwake = redux.useSelector(s => s.settings.keepAwake);\n  return (\n    <SettingsWrapper>\n      <h2 className=\"is-size-4\">Settings</h2>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              style={{ marginRight: \"5px\" }}\n              type=\"checkbox\"\n              checked={keepAwake}\n              onChange={redux.toggleKeepAwake}\n            />\n            Keep screen on while metronome is running.\n          </label>\n        </div>\n      </div>\n    </SettingsWrapper>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport TimeSignature from \"./TimeSignature\";\nimport * as hooks from \"../hooks\";\nimport * as util from \"../util\";\nimport * as t from \"../types\";\nimport * as redux from \"../redux\";\nimport * as Common from \"./Common\";\nimport * as immutable from \"immutable\";\nimport useMetronome from \"../metronome\";\n\n// TODO: - clean up the rendering here. It redraws way too much on a change.\nenum ScaleMode {\n  NOT_STARTED = \"not-started\",\n  KNOWN = \"known\",\n  LEARNING = \"learning\"\n}\n\ninterface LearnScalesProps {\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\ninterface BumpBpmProps {\n  id: string;\n  bpm: number;\n}\nconst BumpBpm: React.FC<BumpBpmProps> = React.memo(({ id, bpm }) => {\n    return (\n        <Common.Button\n            isDanger={bpm < 0}\n            isPrimary={bpm > 0}\n            isOutlined\n            grow\n            onClick={() => redux.addBPMToScale(id, bpm)}\n        >\n            {bpm}\n        </Common.Button>\n    );\n});\n\nconst LearnScales: React.FC<LearnScalesProps> = React.memo(({ reset, scaleMode }) => {\n    const scales = redux.useSelector(a =>\n        a.scales.filter(s => {\n            if (scaleMode === ScaleMode.LEARNING) {\n                return s.learning;\n            } else if (scaleMode === ScaleMode.KNOWN) {\n                return s.known;\n            }\n            return false;\n        }).map(s => s.id), (a, b) => a.equals(b)\n    );\n    const [scaleIds, setScaleIds] = React.useState<immutable.OrderedSet<string>>(\n        () => immutable.OrderedSet(util.shuffle(scales.toArray()))\n    );\n    const nextScaleText = scaleIds.size > 1 ? \"Next\" : \"Finish\";\n    const id = scaleIds.first(undefined);\n    const currentScale = redux.useSelector(a =>\n        a.scales.find(s => s.id === id)\n    )!;\n    const nextScale = React.useCallback(() => {\n        if (scaleIds.first()) {\n            setScaleIds(scaleIds.rest());\n        }\n    }, [scaleIds, setScaleIds]);\n\n    React.useEffect(() => {\n        if (currentScale) {\n            redux.start(currentScale.bpm);\n        }\n    }, [currentScale]);\n\n    const stop = React.useMemo(() => (\n        <Common.Button isDanger isOutlined onClick={reset}>\n            Stop\n        </Common.Button>\n    ), [reset])\n\n    const next = React.useMemo(() => (\n        <Common.Button isPrimary onClick={nextScale}>\n            {nextScaleText}\n        </Common.Button>\n    ), [nextScaleText, nextScale])\n\n    if (id === undefined) {\n        reset();\n        return null;\n    }\n\n    const scale = currentScale!;\n    const { mode, pitch, bpm } = scale;\n\n\n    return (\n        <>\n            <div className=\"box\">\n                <div\n                    style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n                    className=\"control is-expanded is-size-5\"\n                >\n                    {scaleMode}\n                </div>\n                <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n                    <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n                        {pitch} {mode} @ {bpm}bpm\n                    </div>\n                    <Common.Buttons grow hasAddons>\n                        <BumpBpm id={id} bpm={-10} />\n                        <BumpBpm id={id} bpm={-1} />\n                        <BumpBpm id={id} bpm={1} />\n                        <BumpBpm id={id} bpm={10} />\n                    </Common.Buttons>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    {stop}\n                    {next}\n                </div>\n            </div>\n                <TimeSignature />\n            </>\n    );\n});\n\ninterface ModeGroupProps {\n  mode: t.Mode;\n  hideKnown: boolean;\n}\n\nconst ModeGroup: React.FC<ModeGroupProps> = ({ mode, hideKnown }) => {\n  const scales = redux.useSelector(\n    a =>\n      a.scales\n        .filter(s => s.mode === mode && (hideKnown ? !s.known : true))\n        .map(s => s.id),\n    (a, b) => a.equals(b)\n  );\n  return (\n    <>\n      {scales.map(id => (\n        <ScaleRow key={`scale-${id}`} id={id} />\n      ))}\n    </>\n  );\n};\n\ninterface ScaleRowProps {\n  id: string;\n}\n\nconst ScaleRow: React.FC<ScaleRowProps> = ({ id }) => {\n  const { pitch, mode, known, learning } = redux.useSelector(a =>\n    a.scales.find(a => a.id === id)\n  )!;\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Common.Buttons>\n        <Common.ToggleButton\n          on={known}\n          isInfo\n          onClick={() => redux.toggleKnown(id)}\n        >\n          Known\n        </Common.ToggleButton>\n        <Common.ToggleButton\n          on={learning}\n          isLink\n          onClick={() => redux.toggleLearning(id)}\n        >\n          Learning\n        </Common.ToggleButton>\n      </Common.Buttons>\n    </div>\n  );\n};\n\ninterface ScalesProps {\n  audioContext: t.MAudioContext;\n}\n\n// TODO: - Add a button to start learning a new scale. This will be a scale\n// that is know known and is not learning.\n// TODO: - use my piano keyboard component from my blog to show 3 octaves of the\n// current scale.\nconst Scales: React.FC<ScalesProps> = React.memo(({ audioContext }) => {\n    useMetronome(audioContext);\n\n    const [scaleMode, setScaleMode] = React.useState(ScaleMode.NOT_STARTED);\n    const [showKnown, toggleShowKnown] = hooks.usePersistantToggle(\n        t.LocalStorageKey.ShowKnown,\n        false\n    );\n\n    const hasKnown = redux.useSelector(a => !!a.scales.find(s => s.known));\n    const hasLearning = redux.useSelector(a => !!a.scales.find(s => s.learning));\n\n    React.useEffect(() => {\n        if (scaleMode === ScaleMode.NOT_STARTED) {\n            redux.stop();\n        }\n    }, [scaleMode]);\n\n    return (\n        <div style={{ marginTop: \"10px\" }}>\n            {scaleMode === ScaleMode.NOT_STARTED ? (\n                <div style={{ marginBottom: \"5px\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <div\n                            style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n                            className=\"control is-expanded is-size-5\"\n                        >\n                            Scales\n                        </div>\n                        <Common.Buttons>\n                            <Common.Button\n                                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                                disabled={!hasKnown}\n                                className=\"is-info is-outlined\"\n                            >\n                                Start Known\n                            </Common.Button>\n                            <Common.Button\n                                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                                disabled={!hasLearning}\n                                className=\"is-link is-outlined\"\n                            >\n                                Start Learning\n                            </Common.Button>\n                        </Common.Buttons>\n                    </div>\n                    <hr />\n                    <Common.Buttons isRight>\n                        <Common.ToggleButton\n                            offIsDanger\n                            offIsOutlined\n                            on={showKnown}\n                            onClick={toggleShowKnown}\n                        >\n                            <>Hide Known</>\n                            <>Hiding Known</>\n                        </Common.ToggleButton>\n                    </Common.Buttons>\n                    <ModeGroup mode={t.Mode.Major} hideKnown={!showKnown} />\n                    <hr />\n                    <ModeGroup mode={t.Mode.Minor} hideKnown={!showKnown} />\n                </div>\n            ) : (\n                <LearnScales\n                    scaleMode={scaleMode}\n                    reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default Scales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport * as Common from \"./Common\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n`;\n\nconst UpdateStyle = styled.section`\n  position: absolute;\n  max-width: ${Common.maxWidth};\n  width: 95%;\n  margin-top: 10px;\n  left: 0;\n  right: 0;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  z-index: 10;\n  display: flex !important;\n  justify-content: space-between;\n  animation: ease-in 1s ${rotate};\n`;\n\nlet hasRegistered = false;\nexport default () => {\n  const [updateAvailable, setUpdateAvailable] = React.useState(false);\n\n  const reload = React.useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const close = React.useCallback(() => {\n    setUpdateAvailable(false);\n  }, []);\n\n  React.useEffect(() => {\n    if (!hasRegistered) {\n      serviceWorker.register({\n        onUpdate: () => {\n          setUpdateAvailable(true);\n        }\n      });\n    }\n    hasRegistered = true;\n  }, []);\n  return (\n    <>\n      {updateAvailable && (\n        <UpdateStyle className=\"box\">\n          <span>An Update is Available!</span>\n          <Common.Buttons>\n            <Common.Button isPrimary isOutlined onClick={reload}>\n              Refresh\n            </Common.Button>\n            <Common.Button isDanger isOutlined onClick={close}>\n              x\n            </Common.Button>\n          </Common.Buttons>\n        </UpdateStyle>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport Metronome from \"./Metronome\";\nimport Settings from \"./Settings\";\nimport Scales from \"./Scales\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Update from \"./Update\";\nimport * as redux from \"../redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport { maxWidth } from \"./Common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faCoffee,\n  faHome,\n  faCog as faGear,\n  faMusic\n} from \"@fortawesome/free-solid-svg-icons\";\nimport * as hooks from \"../hooks\";\n\nconst TopBarWrapper = React.memo(styled.section`\n  margin-bottom: 10px;\n  margin-left: 0px !important;\n  margin-right: 0px !important;\n  position: relative;\n  display: inline-block;\n  flex-direction: column;\n`);\n\nconst CenterIcon = React.memo(styled.span`\n  align-self: center;\n`);\n\nconst TopNav = React.memo(styled.section`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  justify-content: space-between;\n  > h2 {\n    margin: 0 !important;\n  }\n`);\n\nconst dropDown = keyframes`\n  from {\nfont-size: 0px;\n  }\nto {\nmargin: 10px;\n}\n`;\n\nconst NavDropDown = React.memo(styled.nav`\n  display: flex;\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n  align-self: flex-end;\n  opacity: 0.9;\n  > a {\n    animation: ease-in 0.1s ${dropDown};\n    font-size: 1.5rem;\n    margin: 10px;\n  }\n`);\n\nconst NavItem = React.memo(styled(Link)``);\n\nconst NavIcon = React.memo(styled(FontAwesomeIcon)`\n  margin-left: 5px;\n`);\n\nconst NavDrop = ({ toggleNav }: { toggleNav: () => void }) => {\n  React.useEffect(() => {\n    window.addEventListener(\"click\", toggleNav);\n    return () => {\n      window.removeEventListener(\"click\", toggleNav);\n    };\n  }, [toggleNav]);\n  return (\n    <NavDropDown className=\"has-background-white\">\n      <NavItem to=\"/\">\n        Home\n        <NavIcon icon={faHome} />\n      </NavItem>\n      <NavItem to=\"/scales\">\n        Scales\n        <NavIcon icon={faMusic} />\n      </NavItem>\n      <NavItem to=\"/settings\">\n        Settings\n        <NavIcon icon={faGear} />\n      </NavItem>\n    </NavDropDown>\n  );\n};\n\nconst TopBar = React.memo(() => {\n  const [showNav, toggleNav] = hooks.useToggle(false);\n  const thing = redux.useSelector(\n    a => a.settings.keepAwake && a.metronomeState.playing\n  );\n  // TODO: - figure out how to animate the nav being hidden.\n  // TODO: - make it where you can swipe from the right of the screen to show the nav.\n  return (\n    <TopBarWrapper>\n      <TopNav className=\"has-background-primary has-text-light\">\n        <Link to=\"/\" className=\"has-text-white\">\n          <h2 className=\"is-size-4 is-bold\">(mjh)tronome</h2>\n        </Link>\n        {thing && (\n          <Link to=\"/settings\">\n            <CenterIcon className=\"has-text-info\" onClick={toggleNav}>\n              <FontAwesomeIcon icon={faCoffee} size=\"2x\" />\n            </CenterIcon>\n          </Link>\n        )}\n        <CenterIcon onClick={toggleNav}>\n          <FontAwesomeIcon icon={faBars} size=\"2x\" />\n        </CenterIcon>\n      </TopNav>\n      {showNav && <NavDrop toggleNav={toggleNav} />}\n    </TopBarWrapper>\n  );\n});\n\nconst WrapperStyle = React.memo(styled.div`\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  > * {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`);\n\nconst FooterStyle = React.memo(styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  margin-top: 5px;\n`);\n\nconst Wrapper: React.FC = React.memo(({ children }) => {\n  return (\n    <WrapperStyle>\n      <Update />\n      <TopBar />\n      {children}\n      <FooterStyle>{`v${process.env.REACT_APP_VERSION}`}</FooterStyle>\n    </WrapperStyle>\n  );\n});\n\n// TODO: - add a button to the overall exception handler that lets you clear local storage.\n// TODO: - add an option to the settings to clear local storage.\n// TODO: - update components to use the React.FC type.\nconst App: React.FC = () => {\n  const audioContext = hooks.useAudioContext();\n  const keepAwake = redux.useSelector(a => a.settings.keepAwake);\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  hooks.useSleepLock(keepAwake && playing);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Wrapper>\n        {audioContext === \"not-supported\" && (\n          <div>\n            Your browser doesn't support the audioContext api, so this will not\n            work. Sorry :(\n          </div>\n        )}\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Metronome audioContext={audioContext} />}\n        />\n        <Route\n          exact\n          path=\"/scales\"\n          render={() => <Scales audioContext={audioContext} />}\n        />\n        <Route exact path=\"/settings\" render={() => <Settings />} />\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./bulma-overrides.sass\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nclass ErrorBoundary extends React.Component<{}, { error: any }> {\n  constructor(props: { error: any }) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Something went wrong</h1>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.name}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.message}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.stack}\n          </code>\n          <hr />\n          <code>{JSON.stringify(this.state.error, undefined, \"  \")}</code>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}