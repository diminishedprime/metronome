{"version":3,"sources":["click.wav","types.ts","TempoMarking.tsx","hooks.ts","Common.tsx","TimeSignature.tsx","Tuner.tsx","util.ts","metronome.ts","TapIn.tsx","Dial.tsx","Scales.tsx","serviceWorker.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","Mode","Pitch","markings","name","range","fromBPM","bpm","filter","_ref3","_ref","test","_ref2","Object","slicedToArray","from","to","inRange","TempoMarking","_ref4","react_default","a","createElement","style","minHeight","map","_ref5","idx","key","className","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","D_Sharp","E_Sharp","F_Sharp","Minor","A_Sharp","G_Sharp","useLocalStorage","initialValue","override","arguments","length","undefined","_useState","useState","firstValue","fromLocal","localStorage","getItem","Function","JSON","parse","window","setItem","stringify","_useState2","value","setValue","useCallback","valueAction","oldValue","newValue","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","R","useDetectChangedValue","_len","values","Array","_key","oldValues","useRef","useEffect","lastValues","current","newValues","forEach","lastValue","index","diff","d","console","log","concat","Button","children","props","objectWithoutProperties","classes","allProps","assign","GrowButton","styled","_templateObject","Buttons","SigColumn","div","TimeSignature_templateObject","SigColumns","_templateObject2","BeatColumnRow","playing","activeBeats","beatIdx","division","divisionIdx","beatDivisions","enabledDivisions","divisions","parseInt","bg","marginTop","marginLeft","marginRight","justifyContent","height","keys","BeatColumn","TimeSignature_BeatColumnRow","objectSpread","TimeSignature","numerator","signature","setSignature","_useToggle","sideEffect","toggleState","_useState3","_useState4","old","useToggle","_useToggle2","edit","toggleEdit","hasChanged","setHasChanged","t","SignatureDivisions","1","uIenabledDivisions","setUiEnabledDivisions","setNumerator","classesForDivisions","toggleDivisionOption","divisionOption","clearDivisions","Fragment","paddingLeft","marginBottom","num","onClick","TimeSignature_BeatColumn","Common_Button","click","require","scheduleNote","audioContext","time","gain","buffer","pitch","sound","createBufferSource","detune","volume","createGain","connect","destination","currentTime","start","addBeatsToQueue","state","nextNoteTime","currentBeat","scheduleAhead","beatsQueue","nextBeat","secondsPerBeat","beatsForNextMeasure","startOfBeatTime","beats","noteOffset","divisionIndex","beat","push","sort","b","beatsFor","apply","toConsumableArray","intervalError","useScheduleAhead","setActiveDivisions","url","_useState5","_useState6","updateBuffer","fetch","then","response","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","delay","stateRef","beatToSchedule","setBeatToSchedule","beatToScheduleRef","setActiveBeat","oldBeats","withNewBeat","activeBeat","defineProperty","lastBeatIdx","reduce","acc","updateUi","runAtTime","timeToRun","callback","now","setTimeout","Deque","firstClickTime","tick","Math","min","intervalLength","scheduleTil","peekFront","first","shift","playBeatsTill","id","setInterval","clearInterval","resetActiveBeats","clampBPM","useMetronome","setPlaying","_useAdvice","advice","originalT","originalSetter","newSetter","action","oldT","useAdvice","BPM","_useAdvice2","setBPM","denominator","_useLocalStorage3","ActiveBeats","_useLocalStorage4","activeDivisions","bpmRef","toggleStart","stop","addBPM","bpmToAdd","calculateBPM","tapTimes","trunc","TapIn","taps","setTaps","performance","newTaps","tap","noteIdx","0","2","3","4","5","6","7","8","9","10","11","notes","i","j","base","pow","centsPerOctave","frequency","octave","note","Tuner","analyser","setAnalyser","setDataArray","sampleRate","setSampleRate","_useState7","_useState8","freq","setFreq","AudioContext","mediaDevices","navigator","getUserMedia","audio","thing","createAnalyser","fftSize","createMediaStreamSource","close","useLayoutEffect","animationFrame","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","maxIdx","resolution","loop","requestAnimationFrame","cancelAnimationFrame","_freqToPitch","low","high","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","toFixed","ScaleMode","Outer","Dial_templateObject","Inner","Dial_templateObject2","ChildContainer","_templateObject3","InfiniKnob","_ref$size","size","addDiff","Radians","PI","radians","setRadians","radiansRef","mouseDown","setMouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","knobContainer","onMouseUp","_","addToBuffer","abs","oldDiff","moveKnob","e","clientX","clientY","box","getBoundingClientRect","boxCenter","left","width","y","top","x","newRadians","atan2","onMouseMove","addEventListener","removeEventListener","sin","cos","ref","onMouseDown","preventDefault","onTouchMove","t0","changedTouches","getScaleByFilter","scalesDB","getScalesByFilter","scales","entries","lilMap","scale","initScalesDB","addScale","scaleKey","mode","pitchMap","known","learning","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","ScalesGroup","_ref5$scaleKey","toggleLearning","toggleKnown","Common_Buttons","LearnScales","_ref6","reset","scaleMode","startMetronome","floor","random","shuffle","s","LEARNING","KNOWN","_ref7","setScales","currentKey","maybeScale","nextScaleText","_ref8","alignSelf","fontWeight","display","flexGrow","nu","slice","Scales","_ref9","stopMetronome","ScalesDB","setScalesDB","NOT_STARTED","setScaleMode","_ref10","_ref11","_usePersistantToggle","ShowKnown","_usePersistantToggle2","showKnown","toggleShowKnown","disabled","Scales_ScalesGroup","Scales_LearnScales","_ref12","n","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Metronome","setAudioContext","_useMetronome","_useMetronome$state","ShowScales","showScales","toggleScales","_usePersistantToggle3","ShowTuner","_usePersistantToggle4","showTuner","toggleTuner","_usePersistantToggle5","ShowDial","_usePersistantToggle6","showDial","toggleDial","updateAvailable","setUpdateAvailable","InnerBody","Dial","src_TempoMarking","src_TimeSignature","src_TapIn","src_Scales","src_Tuner","App_templateObject","App","App_Metronome","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ff6d93c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\n\nexport enum LocalStorageKey {\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db\",\n  ActiveBeats = \"@mjh/k/active-beats-2\",\n  TimeSignature = \"@mjh/k/signature-2\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.D_Sharp, Mode.Major],\n  [Pitch.E_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = {\n  [pitch: string]: {\n    [mode: string]: Scale;\n  };\n}; // Map<Pitch, Map<Mode, Scale>>;\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  currentBeat: number;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type ActiveDivisions = {\n  [divisionOption: number]: number | undefined;\n};\nexport type EnabledDivisions = {\n  [divisionOption: number]: boolean;\n};\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: EnabledDivisions[];\n}\n\nexport interface State {\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n  activeDivisions: Array<ActiveDivisions>;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n  state: State;\n}\n","import React from \"react\";\n\ninterface Marking {\n  range: [number, number];\n  name: string;\n}\n\nexport const markings: Array<Marking> = [\n  { name: \"Larghissimo\", range: [0, 24] },\n  { name: \"Grave\", range: [25, 45] },\n  { name: \"Largo\", range: [40, 60] },\n  { name: \"Lento\", range: [45, 60] },\n  { name: \"Larghetto\", range: [60, 66] },\n  { name: \"Adagio\", range: [66, 76] },\n  { name: \"Andante\", range: [76, 108] },\n  { name: \"Marcia moderato\", range: [83, 85] },\n  { name: \"Andante moderato\", range: [92, 112] },\n  { name: \"Moderato\", range: [108, 120] },\n  { name: \"Allegro\", range: [120, 156] },\n  { name: \"Vivace\", range: [156, 176] },\n  { name: \"Vivacissimo\", range: [172, 176] },\n  { name: \"Allegrissimo\", range: [172, 176] },\n  { name: \"Presto\", range: [168, 200] },\n  { name: \"Prestissimo\", range: [200, 250] }\n];\n\nconst inRange = ([from, to]: [number, number], test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = (bpm: number): Array<Marking> => {\n  return markings.filter(({ range }) => inRange(range, bpm));\n};\n\ninterface Props {\n  bpm: number;\n}\n\nconst TempoMarking = ({ bpm }: Props) => {\n  const markings = fromBPM(bpm);\n  return (\n      <div style={{minHeight: '6.5em'}}>\n          {markings.map(({ name, range }, idx) => (\n              <div key={idx} className=\"has-text-centered\">\n                  {name} - {range[0]} - {range[1]}\n              </div>\n          ))}\n              </div>\n  );\n};\n\nexport default TempoMarking;\n","import {\n  useState,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as t from \"./types\";\n\n// TODO - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState(() => {\n    let firstValue;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = JSON.parse(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, JSON.stringify(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, JSON.stringify(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = useRef<any[]>(values);\n\n  useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: AudioContext | undefined,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = useState<AudioBuffer>();\n  useEffect(() => {\n    if (audioContext !== undefined) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {}\n\nexport const Button = ({ children, className, ...props }: ButtonProps) => {\n  const classes = `button ${className}`;\n  const allProps = Object.assign(props, { className: classes });\n  return (\n    <button {...allProps} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport const GrowButton = styled(Button)`\n  flex-grow: 1;\n`;\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  classes?: string[];\n}\n\nexport const Buttons = ({ children, className, ...props }: ButtonsProps) => {\n  const classes = `${className} buttons has-addons}`;\n  const allProps = Object.assign(props, { className: classes });\n  return <div {...allProps}>{children}</div>;\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport { useToggle, useLocalStorage } from \"./hooks\";\nimport { Button, GrowButton } from \"./Common\";\nimport * as t from \"./types\";\n\ninterface Props {\n  signature: t.TimeSignature;\n  setSignature: React.Dispatch<React.SetStateAction<t.TimeSignature>>;\n  playing: boolean;\n  activeBeats: t.ActiveDivisions[];\n}\n\nconst SigColumn = styled.div`\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst SigColumns = styled.div`\n  display: flex;\n`;\n\nconst BeatColumnRow = ({\n  playing,\n  activeBeats,\n  beatIdx,\n  division,\n  divisionIdx,\n  enabledDivisions: beatDivisions\n}: {\n  division: string;\n  playing: boolean;\n  activeBeats: t.ActiveDivisions[];\n  divisionIdx: number;\n  beatIdx: number;\n  enabledDivisions: t.EnabledDivisions;\n}) => {\n  const divisions = parseInt(division, 10);\n  return (\n    <SigColumns key={`d${divisions}`}>\n      {R.range(0, divisions).map(idx => {\n        const bg =\n          activeBeats[beatIdx][divisions] === idx && playing\n            ? \"has-background-primary\"\n            : \"has-background-light\";\n        const marginTop = divisions === 1 ? 0 : 5;\n        const marginLeft = idx === 0 ? 0 : 10 / divisions;\n        const marginRight = idx === divisions - 1 ? 0 : 10 / divisions;\n        return (\n          <SigColumn\n            key={`d${divisions}-${idx}`}\n            className={`${bg} has-text-centered`}\n            style={{\n              justifyContent: \"center\",\n              height:\n                70 /\n                  Object.keys(beatDivisions).filter(\n                    key => beatDivisions[key as any]\n                  ).length -\n                marginTop,\n              marginLeft,\n              marginRight,\n              marginTop\n            }}\n          >\n            {divisionIdx === 0 && beatIdx + 1}\n          </SigColumn>\n        );\n      })}\n    </SigColumns>\n  );\n};\n\nconst BeatColumn = (props: {\n  playing: boolean;\n  activeBeats: t.ActiveDivisions[];\n  beatIdx: number;\n  enabledDivisions: t.EnabledDivisions;\n}) => {\n  return (\n    <div className={`column has-text-centered`}>\n      {Object.keys(props.enabledDivisions)\n        .filter(key => props.enabledDivisions[key as any])\n        .map((division, divisionIdx) => (\n          <BeatColumnRow\n            key={`${props.beatIdx}-${divisionIdx}`}\n            {...{ ...props, division, divisionIdx }}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst TimeSignature = ({\n  playing,\n  signature: { numerator },\n  setSignature,\n  activeBeats\n}: Props) => {\n  const [edit, toggleEdit] = useToggle(false);\n  const [hasChanged, setHasChanged] = useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = useLocalStorage<\n    t.EnabledDivisions\n  >(t.LocalStorageKey.SignatureDivisions, { 1: true });\n  const setNumerator = useCallback(\n    (numerator: number) => {\n      setHasChanged(true);\n      setSignature(old => ({\n        ...old,\n        numerator: R.range(0, numerator).map(() => uIenabledDivisions)\n      }));\n    },\n    [uIenabledDivisions, setSignature]\n  );\n\n  const classesForDivisions = useCallback(\n    (division: t.Division) =>\n      uIenabledDivisions[division] ? \"is-primary\" : \"\",\n    [uIenabledDivisions]\n  );\n  useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: R.range(0, old.numerator.length).map(\n          () => uIenabledDivisions\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old =>\n        R.over(R.lensPath([divisionOption]), R.not, old)\n      );\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = useCallback(() => {\n    setUiEnabledDivisions({ 1: true });\n  }, [setUiEnabledDivisions]);\n\n  return (\n    <>\n      <h3\n        className=\"subtitle is-5\"\n        style={{ paddingLeft: \"10px\", marginBottom: \"0\" }}\n      >\n        Divisions\n      </h3>\n      <section\n        style={{ marginTop: \"10px\" }}\n        className=\"section buttons is-centered\"\n      >\n        {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => (\n          <GrowButton\n            key={`division-options-${num}`}\n            className={classesForDivisions(num)}\n            onClick={() => toggleDivisionOption(num)}\n          >\n            {num}\n          </GrowButton>\n        ))}\n        <GrowButton\n          className={\"is-danger is-outlined\"}\n          onClick={clearDivisions}\n        >\n          Clear\n        </GrowButton>\n      </section>\n      <section className=\"section is-mobile columns\" onClick={toggleEdit}>\n        {numerator.map(\n          (enabledDivisions: t.EnabledDivisions, beatIdx: number) => (\n            <BeatColumn\n              key={`${beatIdx}-enabledDivisionColumn`}\n              {...{ playing, beatIdx, enabledDivisions, activeBeats }}\n            />\n          )\n        )}\n      </section>\n      {edit && (\n        <section className=\"section buttons is-centered\">\n          <Button onClick={() => setNumerator(2)}>2/4</Button>\n          <Button onClick={() => setNumerator(3)}>3/4</Button>\n          <Button onClick={() => setNumerator(4)}>4/4</Button>\n          <Button onClick={() => setNumerator(5)}>5/4</Button>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default TimeSignature;\n","import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = () => {\n  const [analyser, setAnalyser] = useState<AnalyserNode>();\n  const [, setDataArray] = useState();\n  const [sampleRate, setSampleRate] = useState<number>();\n  const [freq, setFreq] = useState<number>(440);\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const audioContext = new AudioContext();\n    setSampleRate(audioContext.sampleRate);\n    const mediaDevices = navigator.mediaDevices;\n    if (mediaDevices) {\n      mediaDevices.getUserMedia({ audio: true }).then((thing: MediaStream) => {\n        const analyser = audioContext.createAnalyser();\n        // If this isn't big, I don't have very good frequency accuracy, and I\n        // can't change the sample rate because web audio sucks.\n        analyser.fftSize = 8192;\n        const mic = audioContext.createMediaStreamSource(thing);\n        mic.connect(analyser);\n        setAnalyser(analyser);\n      });\n    }\n    return () => {\n      audioContext.close();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    let animationFrame: number;\n\n    const tick = () => {\n      const bufferLength = analyser!.frequencyBinCount;\n      const dataArray = new Float32Array(bufferLength);\n      analyser!.getFloatFrequencyData(dataArray);\n      setDataArray(dataArray);\n\n      const [, maxIdx] = dataArray.reduce(\n        (a, b, i) => (a[0] < b ? [b, i] : a),\n        [-Infinity, -1]\n      );\n\n      const resolution = sampleRate! / analyser!.fftSize;\n      const freq = resolution * maxIdx;\n      setFreq(freq);\n\n      loop();\n    };\n\n    const loop = () => {\n      animationFrame = requestAnimationFrame(tick);\n    };\n\n    if (analyser !== undefined) {\n      loop();\n      return () => {\n        cancelAnimationFrame(animationFrame);\n      };\n    }\n  }, [analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  return (\n    <div className=\"box\">\n      <div className=\"has-text-centered\">\n        <div className=\"is-size-1\">{note + octave}</div>\n        <div>\n          {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n        </div>\n      </div>\n      {false && <canvas width={\"100%\"} height={\"100\"} ref={canvasRef} />}\n    </div>\n  );\n};\n\nexport default Tuner;\n","export function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  const now = audioContext.currentTime;\n  if (timeToRun <= now) {\n    callback();\n  } else {\n    const sleepTime = ((timeToRun - now) / 2) * 1000;\n    setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  }\n};\n","import { useEffect, useState, useCallback, useRef } from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport { useLocalStorage, useAdvice, useAudioBuffer } from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nconst click = require(\"./click.wav\");\n\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer, pitch }: t.Beat\n) => {\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n  sound.detune.value = -pitch;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  if (time <= audioContext.currentTime) {\n  }\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats = [];\n  for (const key in divisions) {\n    if (divisions[key]) {\n      let divisionOption = parseInt(key, 10) as t.Division;\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const beat: t.Beat = {\n          time,\n          pitch: 220,\n          gain: 1.0 * 0.5,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat\n        };\n        beats.push(beat);\n      }\n    }\n  }\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const first = beatsQueue.shift()!;\n    if (first.divisionIndex !== 0 || first.divisions === 1) {\n      scheduleNote(audioContext, first);\n    }\n    updateUi(audioContext, first);\n  }\n};\n\n// TODO - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  state: t.State,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const { bpm } = state;\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useScheduleAhead = (\n  audioContext: AudioContext | undefined,\n  state: t.State,\n  setActiveDivisions: React.Dispatch<React.SetStateAction<t.ActiveDivisions[]>>\n) => {\n  const scheduleAhead = 0.3;\n  const { playing } = state;\n  const buffer = useAudioBuffer(audioContext, click);\n  const nextNoteTimeRef = useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  const stateRef = useRef<t.State>(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n\n  const [beatToSchedule, setBeatToSchedule] = useState<number>(0);\n  useEffect(() => {\n    if (!state.playing) {\n      setBeatToSchedule(0);\n    }\n  }, [state.playing]);\n\n  const beatToScheduleRef = useRef(beatToSchedule);\n  useEffect(() => {\n    beatToScheduleRef.current = beatToSchedule;\n  }, [beatToSchedule]);\n\n  const nextBeat = () => {\n    setBeatToSchedule(\n      old => (old + 1) % stateRef.current.signature.numerator.length\n    );\n  };\n\n  // TODO - this is super janky.\n  const setActiveBeat = useCallback(\n    (beat: t.Beat) => {\n      setActiveDivisions(oldBeats => {\n        const withNewBeat = R.adjust(\n          beat.currentBeat,\n          (activeBeat: t.ActiveDivisions) => {\n            return { ...activeBeat, [beat.divisions]: beat.divisionIndex };\n          },\n          oldBeats\n        );\n        let lastBeatIdx = beat.currentBeat - 1;\n        if (lastBeatIdx < 0) {\n          lastBeatIdx = stateRef.current.signature.numerator.length - 1;\n        }\n        return R.adjust(\n          lastBeatIdx,\n          (activeBeat: t.ActiveDivisions) => {\n            return Object.keys(activeBeat).reduce(\n              (acc, key) => ({ ...acc, [key]: undefined }),\n              {}\n            );\n          },\n          withNewBeat\n        );\n      });\n    },\n    [setActiveDivisions]\n  );\n\n  // TODO - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = useCallback(\n    (audioContext: AudioContext, beat: t.Beat) => {\n      // We ovewrite activeBeats here because it's definitely changing.\n      runAtTime(audioContext, beat.time, () => {\n        if (stateRef.current.playing) {\n          setActiveBeat(beat);\n        }\n      });\n    },\n    [setActiveBeat]\n  );\n\n  useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const {\n          signature: { numerator }\n        } = stateRef.current;\n        const beatIdx = Math.min(\n          beatToScheduleRef.current,\n          numerator.length - 1\n        );\n        const currentBeat = numerator[beatIdx];\n        addBeatsToQueue(\n          stateRef.current,\n          nextNoteTimeRef,\n          currentBeat,\n          beatToScheduleRef.current,\n          audioContext.currentTime,\n          scheduleAhead,\n          buffer,\n          beatsQueue,\n          nextBeat\n        );\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [\n    delay,\n    buffer,\n    audioContext,\n    setActiveDivisions,\n    setActiveBeat,\n    updateUi\n  ]);\n};\n\nconst resetActiveBeats = (beats: t.EnabledDivisions[]): t.ActiveDivisions[] =>\n  beats.map((enabledDivisions: t.EnabledDivisions) =>\n    R.mapObjIndexed(() => undefined, enabledDivisions)\n  );\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\nexport const useMetronome = (\n  audioContext: AudioContext | undefined\n): t.Metronome => {\n  const [playing, setPlaying] = useState(false);\n  const [bpm, setBPM] = useAdvice(\n    useLocalStorage(t.LocalStorageKey.BPM, 90),\n    clampBPM\n  );\n  const [signature, setSignature] = useLocalStorage<t.TimeSignature>(\n    t.LocalStorageKey.TimeSignature,\n    {\n      denominator: 4,\n      numerator: [{ 1: true }, { 1: true }, { 1: true }]\n    }\n  );\n  const [activeDivisions, setActiveDivisions] = useLocalStorage<\n    t.ActiveDivisions[]\n  >(t.LocalStorageKey.ActiveBeats, resetActiveBeats(signature.numerator));\n\n  const state: t.State = {\n    bpm,\n    playing,\n    signature,\n    activeDivisions\n  };\n  const { numerator } = signature;\n\n  const bpmRef = useRef(bpm);\n  useEffect(() => {\n    bpmRef.current = bpm;\n  }, [bpm]);\n\n  // Effects for updating state.\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  useEffect(() => {\n    // TODO - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    setActiveDivisions(resetActiveBeats(numerator));\n  }, [numerator, signature, setActiveDivisions]);\n\n  useEffect(() => {\n    if (!playing) {\n      setActiveDivisions(resetActiveBeats(numerator));\n      setTimeout(() => {\n        setActiveDivisions(resetActiveBeats(numerator));\n      }, 300);\n    }\n  }, [playing, numerator, setActiveDivisions]);\n\n  useScheduleAhead(audioContext, state, setActiveDivisions);\n\n  // External API Things.\n  const addBPM = (bpmToAdd: number) => {\n    setBPM(R.add(bpmToAdd));\n  };\n\n  const toggleStart = () => setPlaying(R.not);\n\n  const start = useCallback(\n    (bpm?: number) => {\n      if (bpm !== undefined) {\n        setBPM(bpm);\n      }\n      setPlaying(true);\n    },\n    [setPlaying, setBPM]\n  );\n\n  const stop = useCallback(() => {\n    setPlaying(false);\n  }, [setPlaying]);\n\n  return {\n    toggleStart,\n    setSignature,\n    start,\n    stop,\n    setBPM,\n    addBPM,\n    state\n  };\n};\n","import React, { useState } from \"react\";\nimport * as R from \"ramda\";\nimport { Button } from \"./Common\";\n\ninterface Props {\n  setBPM: (bpm: number) => void;\n}\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn = ({ setBPM }: Props) => {\n  const [taps, setTaps] = useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return <Button onClick={onTap}>Tap In</Button>;\n};\n\nexport default TapIn;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocalStorage } from \"./hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"./types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Inner = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface Props {\n  initialValue: number;\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  initialValue,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [radians, setRadians] = useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (initialValue * (Math.PI * 3)) / 2\n  );\n  const radiansRef = useRef(Math.PI);\n  useEffect(() => {\n    radiansRef.current = radians;\n  }, [radians]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const mouseDownRef = useRef(false);\n  useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = useState(0);\n  const totalDiffRef = useRef(0);\n  useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const knobContainer = useRef<HTMLDivElement>(null);\n\n  const onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  };\n\n  const onMouseUp = useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      const { clientX, clientY } = e;\n      const box = knobContainer.current!.getBoundingClientRect();\n\n      const boxCenter = {\n        x: box.left + box.width / 2,\n        y: box.top + box.height / 2\n      };\n      const y = -(boxCenter.y - clientY);\n      const x = -(boxCenter.x - clientX);\n      const newRadians = Math.atan2(y, x);\n      let diff = radiansRef.current - newRadians;\n      if (diff < -Math.PI) {\n        diff = -radiansRef.current - newRadians;\n      } else if (diff > Math.PI) {\n        diff = radiansRef.current - -newRadians;\n      }\n      if (diff !== 0) {\n        addToBuffer(diff);\n      }\n      const same = newRadians === radiansRef.current;\n      if (!same) {\n        setRadians(newRadians);\n      }\n    },\n    [addToBuffer, setRadians]\n  );\n\n  const onMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  const onTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n    const t = e.changedTouches;\n    const t0 = t[0];\n    moveKnob(t0);\n  };\n\n  const top =\n    size / 2 +\n    Math.sin(radians) * (size / 4) +\n    (Math.sin(radians) * size) / 16 -\n    size / 6;\n  const left =\n    size / 2 +\n    Math.cos(radians) * (size / 4) +\n    (Math.cos(radians) * size) / 16 -\n    size / 6;\n\n  return (\n    <Outer ref={knobContainer} className=\"has-background-primary\">\n      <Inner\n        className=\"has-background-info\"\n        onMouseDown={onMouseDown}\n        onTouchMove={onTouchMove}\n        style={{\n          top,\n          left\n        }}\n      />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport default InfiniKnob;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocalStorage, usePersistantToggle } from \"./hooks\";\nimport * as R from \"ramda\";\nimport { Button, Buttons } from \"./Common\";\nimport { Scale, Mode, ScalesDB, ScaleKey, scaleKeys } from \"./types\";\nimport * as t from \"./types\";\n\nenum ScaleMode {\n  NOT_STARTED = \"Not Started\",\n  LEARNING = \"Learning\",\n  KNOWN = \"Known\"\n}\n\ninterface Props {\n  startMetronome: (bpm: number) => void;\n  stopMetronome: () => void;\n}\n\nconst getScaleByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n): Scale | undefined => {\n  return getScalesByFilter(scalesDB, filter)[0];\n};\n\nconst getScalesByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n) => {\n  let scales: Scale[] = [];\n  Object.entries(scalesDB).forEach(([, lilMap]) => {\n    Object.entries(lilMap).forEach(([, scale]) => {\n      if (filter(scale)) {\n        scales.push(scale);\n      }\n    });\n  });\n  return scales;\n};\n\nconst initScalesDB = (): ScalesDB => {\n  const scalesDB: ScalesDB = {};\n  const scaleFor = (scaleKey: ScaleKey): Scale => ({\n    scaleKey,\n    pitch: scaleKey[0],\n    mode: scaleKey[1],\n    known: false,\n    learning: false,\n    bpm: 60\n  });\n\n  const addScale = (key: ScaleKey): void => {\n    const [pitch, mode] = key;\n    let pitchMap = scalesDB[pitch];\n    if (pitchMap === undefined) {\n      pitchMap = {};\n      scalesDB[pitch] = pitchMap;\n    }\n    pitchMap[mode] = scaleFor(key);\n  };\n  // TODO(me) - clean up scale names & add sharps.\n  // Major\n  for (const key of scaleKeys) {\n    addScale(key);\n  }\n  return scalesDB;\n};\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Buttons>\n        <Button className={`${known ? \"is-info\" : \"\"}`} onClick={toggleKnown}>\n          Known\n        </Button>\n        <Button\n          className={`${learning ? \"is-link\" : \"\"}`}\n          onClick={toggleLearning}\n        >\n          Learning\n        </Button>\n      </Buttons>\n    </div>\n  );\n};\nfunction shuffle<T>(a: Array<T>) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\ninterface LearnScalesProps {\n  scalesDB: ScalesDB;\n  addBPM: (s: Scale, n: number) => () => void;\n  startMetronome: (bpm: number) => void;\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\n\nconst LearnScales = ({\n  scalesDB,\n  addBPM,\n  reset,\n  scaleMode,\n  startMetronome\n}: LearnScalesProps) => {\n  const [scaleKeys, setScales] = useState<Array<ScaleKey>>(() =>\n    shuffle(\n      getScalesByFilter(scalesDB, s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      }).map(({ scaleKey }) => scaleKey)\n    )\n  );\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScaleByFilter(\n    scalesDB,\n    (s: Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  useEffect(() => {\n    if (maybeScale !== undefined) {\n      startMetronome(maybeScale.bpm);\n    }\n  }, [maybeScale, startMetronome]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <div>\n      <div\n        style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n        className=\"control is-expanded is-size-5\"\n      >\n        {scaleMode}\n      </div>\n      <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n        <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n          {pitch} {mode} @ {bpm}bpm\n        </div>\n        <Buttons style={{ flexGrow: 1 }}>\n          <Button\n            className=\"is-danger is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, -10)}\n          >\n            -10\n          </Button>\n          <Button\n            className=\"is-danger is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, -1)}\n          >\n            -\n          </Button>\n          <Button\n            className=\"is-success is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, 1)}\n          >\n            +\n          </Button>\n          <Button\n            className=\"is-success is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, 10)}\n          >\n            +10\n          </Button>\n        </Buttons>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={reset}>Stop</Button>\n        <Button onClick={nextScale}>{nextScaleText}</Button>\n      </div>\n    </div>\n  );\n};\n\nconst Scales = ({ startMetronome, stopMetronome, ...props }: Props) => {\n  // TODO - Add a button to start learning a new scale. This will be a scale\n  // that is know known and is not learning.\n  const [scalesDB, setScalesDB] = useLocalStorage(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const [scaleMode, setScaleMode] = useState(ScaleMode.NOT_STARTED);\n\n  useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      stopMetronome();\n    }\n  }, [scaleMode, stopMetronome]);\n\n  const toggleLearning = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"learning\"]), R.not));\n  };\n\n  const toggleKnown = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"known\"]), R.not));\n  };\n\n  const [showKnown, toggleShowKnown] = usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  const addBPM = ({ pitch, mode }: Scale, n: number) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"bpm\"]), R.add(n)));\n  };\n\n  return (\n    <div className=\"box\" style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Buttons>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.known) === undefined\n                }\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Button>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.learning) === undefined\n                }\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Button>\n            </Buttons>\n          </div>\n          <hr />\n\n          <Buttons>\n            <Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Button>\n          </Buttons>\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          startMetronome={startMetronome}\n          addBPM={addBPM}\n          scalesDB={scalesDB}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport { useMetronome } from \"./metronome\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport Scales from \"./Scales\";\nimport { usePersistantToggle } from \"./hooks\";\nimport { Button, GrowButton, Buttons } from \"./Common\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as t from \"./types\";\n\nconst Metronome = () => {\n  const [audioContext, setAudioContext] = useState<AudioContext | undefined>();\n  const {\n    state: { playing, signature, bpm, activeDivisions },\n    start,\n    stop,\n    toggleStart,\n    setSignature,\n    setBPM,\n    addBPM\n  } = useMetronome(audioContext);\n\n  // Initialize AudioContext as a singleton on first start.\n  useEffect(() => {\n    if (playing && audioContext === undefined) {\n      setAudioContext(new AudioContext());\n    }\n  }, [playing, audioContext]);\n\n  const [showScales, toggleScales] = usePersistantToggle(\n    t.LocalStorageKey.ShowScales,\n    false\n  );\n  const [showTuner, toggleTuner] = usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n\n    false\n  );\n  const [showDial, toggleDial] = usePersistantToggle(\n    t.LocalStorageKey.ShowDial,\n    true\n  );\n\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    serviceWorker.register({\n      onUpdate: () => {\n        setUpdateAvailable(true);\n      }\n    });\n  });\n\n  return (\n    <InnerBody>\n      {updateAvailable && (\n        <section\n          className=\"box is-grouped field has-addons\"\n          style={{ marginBottom: \"10px\" }}\n        >\n          <p style={{ alignSelf: \"center\" }} className=\"control is-expanded\">\n            An Update is Available!\n          </p>\n          <Button onClick={() => window.location.reload()}>Refresh</Button>\n        </section>\n      )}\n      <section\n        className=\"section\"\n        style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n      >\n        <h2 className=\"title is-2 has-text-centered\">(mjh)tronome</h2>\n      </section>\n      {showDial && (\n        <section className=\"section\">\n          <Dial initialValue={bpm} addDiff={addBPM}>\n            <div className=\"has-text-centered is-size-1\">{bpm}</div>\n            <TempoMarking bpm={bpm} />\n          </Dial>\n        </section>\n      )}\n      <TimeSignature\n        playing={playing}\n        signature={signature}\n        setSignature={setSignature}\n        activeBeats={activeDivisions}\n      />\n\n      <section className=\"section\">\n        <Buttons>\n          <TapIn setBPM={setBPM} />\n          <GrowButton\n            className={`is-outlined ${playing ? \"is-danger\" : \"is-primary\"}`}\n            onClick={toggleStart}\n          >\n            {playing ? \"Stop\" : \"Start\"}\n          </GrowButton>\n        </Buttons>\n      </section>\n      {showScales && <Scales startMetronome={start} stopMetronome={stop} />}\n      {showTuner && <Tuner />}\n      <nav className=\"navbar is-fixed-bottom has-background-light\">\n        <InnerBody className=\" buttons is-right\">\n          <Button\n            className={`${showDial ? \"is-primary\" : \"\"}`}\n            onClick={toggleDial}\n          >\n            Dial\n          </Button>\n          <Button\n            className={`${showScales ? \"is-primary\" : \"\"}`}\n            onClick={toggleScales}\n          >\n            Scales\n          </Button>\n          <Button\n            className={`${showTuner ? \"is-primary\" : \"\"}`}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </Button>\n          <div>{`v${process.env.REACT_APP_VERSION}`}</div>\n        </InnerBody>\n      </nav>\n    </InnerBody>\n  );\n};\n\nconst InnerBody = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst App: React.FC = () => {\n  return <Metronome />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bulma-overrides.sass\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}