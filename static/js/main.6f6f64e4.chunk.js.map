{"version":3,"sources":["click.wav","types.ts","polyfill.ts","hooks.ts","util.ts","redux.ts","metronome.ts","components/TempoMarking.tsx","components/Common.tsx","components/TimeSignature.tsx","components/TapIn.tsx","components/Tuner.tsx","components/Dial.tsx","components/Metronome.tsx","components/Settings.tsx","components/Scales.tsx","scales.ts","serviceWorker.ts","components/Update.tsx","settings.ts","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","Mode","Pitch","AudioContext","window","webkitAudioContext","undefined","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","F_Sharp","Minor","A_Sharp","D_Sharp","G_Sharp","useLocalStorage","key","initialValue","override","arguments","length","_useState5","useState","firstValue","fromLocal","localStorage","getItem","Function","transit","setItem","_useState6","Object","slicedToArray","value","setValue","useCallback","valueAction","oldValue","newValue","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","R","useToggle","sideEffect","toggleState","_useState7","_useState8","old","ActionType","click","require","scheduleNote","audioContext","_ref","time","gain","buffer","pitch","currentBeat","divisionIndex","isOne","sound","createBufferSource","detune","volume","createGain","connect","destination","start","intervalError","useSelectorRef","selector","val","redux","valRef","React","useRef","useEffect","current","useScheduleAhead","playing","a","metronomeState","playingRef","bpmRef","bpm","numeratorRef","signature","numerator","numberOfBeatsRef","size","url","_useState9","_useState10","updateBuffer","fetch","then","response","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","delay","scheduleAhead","beatToScheduleRef","nextBeat","updateUi","beat","timeToRun","callback","setTimeout","currentTime","runAtTime","beatsQueue","Deque","firstClickTime","tick","beatIdx","Math","min","get","nextNoteTime","secondsPerBeat","divisions","beatsForNextMeasure","startOfBeatTime","beats","filter","forEach","_","divisionOption","noteOffset","divisionLength","push","sort","b","beatsFor","apply","toConsumableArray","addBeatsToQueue","intervalLength","scheduleTil","peekFront","first","shift","playBeatsTill","id","setInterval","clearInterval","useMetronome","s","addBPM","bpmToAdd","toggleStart","stop","setSignature","setBPM","action","store","dispatch","type","SetSignature","setPending","SetPending","setPlaying","SetPlaying","SetBpm","resetActivebeats","activeBeats","getState","immutable","map","enabledDivisions","reduce","acc","d","set","SetActiveBeats","updateActiveBeat","UpdateActiveBeats","defaultBeat","defaultSignature","denominator","ready","pending","objectSpread","getIn","setIn","startsWith","console","log","useSelector","reactRedux","markings","name","low","high","fromBPM","to","test","Marking","memo","_ref2","react_default","createElement","className","TempoMarking","_ref3","style","minHeight","_ref4","concat","_ref5","_ref6","nu","equals","Wrap","offProps","onProps","ToggleButton","on","props","objectWithoutProperties","renderProps","useMemo","toRemove","child","children","Array","Common_Button","Button","isPrimary","isDanger","isLink","isInfo","isSuccess","isOutlined","offIsPrimary","offIsDanger","offIsLink","offIsInfo","offIsSuccess","offIsOutlined","grow","propsClassName","classnames","is-primary","is-link","is-danger","is-info","is-success","is-outlined","is-grow","ButtonsWrapper","styled","div","_templateObject","Buttons","hasAddons","ref","has-addons","assign","DivisionsWrapper","section","TimeSignature_templateObject","Divisions","uiEnabledDivisions","toggleDivisionOption","clearDivisions","Common_Buttons","marginRight","num","Common_ToggleButton","onClick","Signature","setCurrentNumerator","currentNumerator","Fragment","BeatRowItemWrapper","_templateObject2","BeatRowWrapper","_templateObject3","BeatWrapper","_templateObject4","BeatsWrapper","_templateObject5","BeatRowItem","beatRows","height","marginTop","BeatRow","bools","beatNumber","rowIndex","j","index","itemIndex","Beat","things","entrySeq","_ref7","_ref8","Beats","TimeSignature","metronome","_useState","_useState2","hasChanged","setHasChanged","_hooks$useLocalStorag","hooks","t","EnabledDivisions","_hooks$useLocalStorag2","uIenabledDivisions","setUiEnabledDivisions","_React$useState","_React$useState2","calculateBPM","tapTimes","trunc","TapIn","taps","setTaps","now","performance","newTaps","tap","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","base","pow","centsPerOctave","frequency","octave","note","Tuner","_useToggle","_useToggle2","toggleOn","analyser","setAnalyser","_useState3","_useState4","sampleRate","setSampleRate","freq","setFreq","setAudioContext","polyfill","mediaStream","mediaDevices","navigator","getUserMedia","audio","ms","createAnalyser","fftSize","createMediaStreamSource","getAudioTracks","track","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","Infinity","maxIdx","resolution","interval","_freqToPitch","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","TunerWrapper","toFixed","Tuner_templateObject","Outer","Dial_templateObject","Inner","Dial_templateObject2","ChildContainer","Dial_templateObject3","InfiniKnob","_ref$size","addDiff","Radians","PI","stateRadians","setRadians","radiansRef","mouseDown","setMouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","knobContainer","onMouseDown","e","preventDefault","onMouseUp","addToBuffer","diff","abs","oldDiff","moveKnob","clientX","clientY","box","getBoundingClientRect","boxCenter","left","width","y","top","x","newRadians","atan2","onMouseMove","addEventListener","removeEventListener","onTouchMove","t0","changedTouches","sin","cos","FullPage","Metronome_templateObject","BPM","DialSection","Dial","Metronome_BPM","components_TempoMarking","Controls","showTuner","toggleTuner","components_TapIn","disabled","Metronome","appSettings","keepAwake","state","_usePersistantToggle","ShowTuner","_usePersistantToggle2","_useSleepLock","NoSleep","noSleep","lock","enable","release","disable","useSleepLock","components_Tuner","components_TimeSignature","ScaleMode","SettingsWrapper","Settings_templateObject","Settings","toggleKeepAwake","checked","onChange","initScalesDB","scalesDB","scaleKey","add","mode","known","learning","addScale","getScales","useScales","ScalesDB","setScalesDB","addScalePublic","Error","getScalePublic","getScale","getScalesPublic","localeCompare","scale","remove","toggleLearning","toggleKnown","ScalesGroup","_ref$scaleKey","LearnScales","scales","reset","scaleMode","floor","random","util","LEARNING","KNOWN","valueSeq","toArray","setScales","currentKey","maybeScale","nextScaleText","alignSelf","fontWeight","display","marginBottom","justifyContent","slice","Scales","stopMetronome","_React$useState3","NOT_STARTED","_React$useState4","setScaleMode","_hooks$usePersistantT","ShowKnown","_hooks$usePersistantT2","showKnown","toggleShowKnown","Scales_ScalesGroup","Scales_LearnScales","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","status","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","rotate","keyframes","Update_templateObject","UpdateStyle","Update_templateObject2","hasRegistered","Update","updateAvailable","setUpdateAvailable","close","initSettings","TopBarWrapper","App_templateObject","CenterIcon","span","App_templateObject2","TopNav","App_templateObject3","dropDown","App_templateObject4","NavDropDown","nav","App_templateObject5","NavItem","Link","_templateObject6","NavIcon","FontAwesomeIcon","_templateObject7","TopBar","showNav","toggleNav","react_router_dom","index_es","icon","faCoffee","faHome","faMusic","faGear","WrapperStyle","_templateObject8","FooterStyle","_templateObject9","Wrapper","App","AppSettings","setState","useAppSettings","audioContextRef","hasFixed","setHasFixed","fixAudioContext","resume","document","context","basename","react_router","exact","path","render","components_Metronome","components_Scales","components_Settings","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","message","stack","JSON","stringify","Component","ReactDOM","es","src_ErrorBoundary","components_App","getElementById"],"mappings":"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","file":"static/js/main.6f6f64e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\nimport * as immutable from \"immutable\";\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  divisionLength: number;\n  currentBeat: number;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type ActiveDivision = immutable.List<boolean>;\nexport type ActiveBeat = immutable.Map<Division, ActiveDivision>;\nexport type ActiveBeats = immutable.List<ActiveBeat>;\n\nexport type EnabledDivisions = immutable.Map<Division, boolean>;\n\nexport type Numerator = immutable.List<EnabledDivisions>;\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: Numerator;\n}\n\nexport interface MetronomeState {\n  ready: boolean;\n  pending: boolean;\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n}\n\ninterface AppSettingsState {\n  keepAwake: boolean;\n}\n\nexport interface AppSettings {\n  state: AppSettingsState;\n  toggleKeepAwake: () => void;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n}\n\nexport type MAudioContext =\n  | AudioContext\n  | \"pending\"\n  | \"not-supported\"\n  | undefined;\n\nexport enum LocalStorageKey {\n  EnabledDivisions = \"@mjh/k/enabled-divisions-0\",\n  AppSettings = \"@mjh/k/app-settings-0\",\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db-2\",\n  ActiveBeats = \"@mjh/k/active-beats-2\",\n  TimeSignature = \"@mjh/k/signature-3\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\",\n  WakeLock = \"@mjh/k/wake-lock-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = immutable.Set<Scale>;\n\nexport interface Scales {\n  getScale: (filter: (s: Scale) => boolean) => Scale | undefined;\n  getScales: (filter: (s: Scale) => boolean) => ScalesDB;\n  addScale: (s: Scale) => void;\n  toggleLearning: (s: Scale) => void;\n  toggleKnown: (s: Scale) => void;\n  addBPM: (s: Scale, bpm: number) => void;\n}\n","interface Constructable<T> {\n  new (): T;\n}\n\nexport const AudioContext: Constructable<AudioContext> | undefined =\n  (window as any).AudioContext || // Default\n  (window as any).webkitAudioContext || // Safari and old versions of Chrome\n  undefined;\n","import React, {\n  useState,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as polyfill from \"./polyfill\";\nimport * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\nimport NoSleep from \"nosleep.js\";\n\nexport const useSingleton = <T>(initialValue?: T) => {\n  const [value, setValue] = useState<T | undefined>(initialValue);\n\n  const setValueOnce = useCallback(\n    (t: T) => {\n      if (!value) {\n        setValue(t);\n      }\n    },\n    [value]\n  );\n\n  return {\n    value: value,\n    init: setValueOnce\n  };\n};\n\nexport const useSleepLock = () => {\n  const [noSleep] = useState(new NoSleep());\n\n  const lock = useCallback(() => {\n    noSleep.enable();\n  }, [noSleep]);\n\n  const release = useCallback(() => {\n    noSleep.disable();\n  }, [noSleep]);\n\n  return {\n    lock,\n    release\n  };\n};\n\n// TODO - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState(() => {\n    let firstValue: T;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = transit.fromJSON(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, transit.toJSON(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, transit.toJSON(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = useRef<any[]>(values);\n\n  useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: t.MAudioContext,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = useState<AudioBuffer>();\n  useEffect(() => {\n    if (\n      // TODO - refactor this out into a helper method if possible.\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\"\n    ) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nexport const useAudioContext = ():\n  | AudioContext\n  | undefined\n  | \"pending\"\n  | \"not-supported\" => {\n  const [audioContext, setAudioContext] = React.useState<\n    AudioContext | \"not-supported\" | \"pending\" | undefined\n  >();\n  const audioContextRef = React.useRef<AudioContext>();\n  const [hasFixed, setHasFixed] = React.useState(false);\n\n  const fixAudioContext = useCallback(() => {\n    if (!hasFixed) {\n      if (audioContextRef.current !== undefined) {\n        setAudioContext(\"pending\");\n        audioContextRef.current.resume().then(() => {\n          setHasFixed(true);\n          setAudioContext(audioContextRef.current);\n          document.removeEventListener(\"touchstart\", fixAudioContext);\n          document.removeEventListener(\"click\", fixAudioContext);\n          document.removeEventListener(\"touchend\", fixAudioContext);\n        });\n      }\n    }\n  }, [hasFixed, setHasFixed]);\n\n  React.useEffect(() => {\n    if (polyfill.AudioContext === undefined) {\n      setAudioContext(\"not-supported\");\n    } else {\n      const context = new polyfill.AudioContext();\n      audioContextRef.current = context;\n      if (context.state === \"suspended\") {\n        document.addEventListener(\"touchstart\", fixAudioContext);\n        document.addEventListener(\"click\", fixAudioContext);\n        document.addEventListener(\"touchend\", fixAudioContext);\n      } else {\n        setAudioContext(context);\n      }\n    }\n  }, [fixAudioContext]);\n\n  return audioContext;\n};\n","export function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\nexport const shuffle = <T>(a: Array<T>) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n};\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  // const now = audioContext.currentTime;\n  // if (timeToRun <= now) {\n  //   callback();\n  // } else {\n  //   const sleepTime = ((timeToRun - now) / 2) * 1000;\n  //   setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  // }\n  setTimeout(callback, (timeToRun - audioContext.currentTime) * 1000);\n};\n","import * as redux from \"redux\";\nimport * as t from \"./types\";\nimport * as immutable from \"immutable\";\nimport * as reactRedux from \"react-redux\";\nimport * as R from \"ramda\";\nimport * as metronome from \"./metronome\";\n\n// TODO these should live in types.\nexport enum ActionType {\n  UpdateActiveBeats,\n  SetActiveBeats,\n  SetSignature,\n  SetPending,\n  SetPlaying,\n  SetBpm\n}\n\ntype RSA<T> = React.SetStateAction<T>;\nexport type Action =\n  // TODO update the other types to use action & RSA\n  | { type: ActionType.UpdateActiveBeats; value: t.Beat }\n  | { type: ActionType.SetActiveBeats; value: t.ActiveBeats }\n  | { type: ActionType.SetPending; action: RSA<boolean> }\n  | { type: ActionType.SetPlaying; action: RSA<boolean> }\n  | { type: ActionType.SetBpm; action: RSA<number> }\n  | { type: ActionType.SetSignature; action: RSA<t.TimeSignature> };\n\nexport interface ReduxState {\n  activeBeats: t.ActiveBeats;\n  metronomeState: t.MetronomeState;\n}\n\nexport const setSignature = (action: React.SetStateAction<t.TimeSignature>) => {\n  store.dispatch({ type: ActionType.SetSignature, action });\n};\n\nexport const setPending = (action: RSA<boolean>) => {\n  store.dispatch({ type: ActionType.SetPending, action });\n};\n\nexport const setPlaying = (action: React.SetStateAction<boolean>) => {\n  store.dispatch({ type: ActionType.SetPlaying, action });\n};\n\nexport const setBPM = (action: React.SetStateAction<number>) => {\n  store.dispatch({ type: ActionType.SetBpm, action });\n};\n\nexport const setActiveBeats = (activeBeats: t.ActiveBeats) => {\n  store.dispatch({\n    type: ActionType.SetActiveBeats,\n    value: activeBeats\n  });\n};\n\nexport const resetActivebeats = () => {\n  setActiveBeats(\n    metronome.resetActiveBeats(\n      store.getState().metronomeState.signature.numerator\n    )\n  );\n};\n\nexport const updateActiveBeat = (beat: t.Beat) => {\n  store.dispatch({\n    type: ActionType.UpdateActiveBeats,\n    value: beat\n  });\n};\n\nconst defaultBeat = immutable.Map<t.Division, boolean>().set(1, true);\n\nconst defaultSignature = {\n  denominator: 4,\n  numerator: immutable.List([\n    defaultBeat,\n    defaultBeat,\n    defaultBeat,\n    defaultBeat\n  ])\n};\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\n// TODO - figure out how to add a local storage thing for hydration???\nconst rootReducer = (\n  store: ReduxState = {\n    activeBeats: immutable.List(),\n    metronomeState: {\n      ready: false,\n      pending: true,\n      bpm: 60,\n      playing: false,\n      signature: defaultSignature\n    }\n  },\n  action: Action\n): ReduxState => {\n  switch (action.type) {\n    case ActionType.SetActiveBeats:\n      return { ...store, activeBeats: action.value };\n    case ActionType.UpdateActiveBeats:\n      const beat = action.value;\n      const old = store.activeBeats.getIn([\n        beat.currentBeat,\n        beat.divisions,\n        beat.divisionIndex\n      ]);\n      if (old === undefined) {\n        return store;\n      }\n      return {\n        ...store,\n        activeBeats: store.activeBeats.setIn(\n          [beat.currentBeat, beat.divisions, beat.divisionIndex],\n          !old\n        )\n      };\n    case ActionType.SetSignature:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          signature:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.signature)\n              : action.action\n        }\n      };\n    case ActionType.SetPending:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          pending:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.pending)\n              : action.action\n        }\n      };\n    case ActionType.SetPlaying:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          playing:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.playing)\n              : action.action\n        }\n      };\n    case ActionType.SetBpm:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          bpm: clampBPM(\n            action.action instanceof Function\n              ? action.action(store.metronomeState.bpm)\n              : action.action\n          )\n        }\n      };\n    default:\n      // @ts-ignore - It's too smart for us here, but this is safe.\n      if (!(action.type as any).startsWith(\"@@redux\")) {\n        console.log(action, \"was not handled\");\n      }\n      return store;\n  }\n};\n\nexport const store = redux.createStore(rootReducer);\n\n// TODO - once this hook is standardized, update to use it directly.\nexport const useSelector = <T>(selector: (state: ReduxState) => T): T => {\n  return (reactRedux as any).useSelector(selector);\n};\n","import React, { useEffect, useCallback, useRef } from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport { useAudioBuffer } from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"./redux\";\n\nconst click = require(\"./click.wav\");\n\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer, pitch, currentBeat, divisionIndex }: t.Beat\n) => {\n  const isOne = currentBeat === 0 && divisionIndex === 0;\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n  sound.detune.value = isOne ? 0 : -pitch;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = isOne ? 1.0 : gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats: Array<t.Beat> = [];\n  divisions\n    .filter(a => a)\n    .forEach((_, divisionOption) => {\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const divisionLength = noteOffset;\n        const beat: t.Beat = {\n          time,\n          divisionLength,\n          pitch: 220,\n          gain: 1.0 * 0.5,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat\n        };\n        beats.push(beat);\n      }\n    });\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const first = beatsQueue.shift()!;\n    if (first.divisionIndex !== 0 || first.divisions === 1) {\n      scheduleNote(audioContext, first);\n    }\n    updateUi(audioContext, first);\n  }\n};\n\n// TODO - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  bpm: number,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useSelectorRef = <T>(selector: (a: redux.ReduxState) => T) => {\n  const val = redux.useSelector(selector);\n  const valRef = React.useRef(val);\n  React.useEffect(() => {\n    valRef.current = val;\n  }, [val]);\n  return valRef;\n};\n\nconst useScheduleAhead = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const playingRef = useSelectorRef(a => a.metronomeState.playing);\n  const bpmRef = useSelectorRef(a => a.metronomeState.bpm);\n  const numeratorRef = useSelectorRef(\n    a => a.metronomeState.signature.numerator\n  );\n  const numberOfBeatsRef = useSelectorRef(\n    a => a.metronomeState.signature.numerator.size\n  );\n  const buffer = useAudioBuffer(audioContext, click);\n\n  const scheduleAhead = 0.3;\n  const nextNoteTimeRef = useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  const beatToScheduleRef = useRef(0);\n  useEffect(() => {\n    if (!playing) {\n      beatToScheduleRef.current = 0;\n    }\n  }, [playing]);\n\n  const nextBeat = React.useCallback(() => {\n    let old = beatToScheduleRef.current;\n    beatToScheduleRef.current = (old + 1) % numberOfBeatsRef.current;\n  }, [numberOfBeatsRef]);\n\n  // TODO - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = useCallback(\n    (audioContext: AudioContext, beat: t.Beat) => {\n      // We ovewrite activeBeats here because it's definitely changing.\n      runAtTime(audioContext, beat.time, () => {\n        if (playingRef.current) {\n          // TODO - this is super janky.\n          // TODO - this would be much nicer with an animation.\n          // TODO - switch this to runAtTime to clear the beat it just set.\n          // TODO - If the division changes, we should reset all active beats to false.\n          redux.updateActiveBeat(beat);\n        }\n      });\n    },\n    [playingRef]\n  );\n\n  useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\" &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const beatIdx = Math.min(\n          beatToScheduleRef.current,\n          numberOfBeatsRef.current - 1\n        );\n        const currentBeat = numeratorRef.current.get(beatIdx);\n        if (currentBeat !== undefined) {\n          addBeatsToQueue(\n            bpmRef.current,\n            nextNoteTimeRef,\n            currentBeat,\n            beatToScheduleRef.current,\n            audioContext.currentTime,\n            scheduleAhead,\n            buffer,\n            beatsQueue,\n            nextBeat\n          );\n        }\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [\n    delay,\n    buffer,\n    audioContext,\n    updateUi,\n    bpmRef,\n    numberOfBeatsRef,\n    numeratorRef,\n    nextBeat\n  ]);\n};\n\nexport const resetActiveBeats = (\n  beats: immutable.List<t.EnabledDivisions>\n): immutable.List<t.ActiveBeat> =>\n  immutable.List(\n    beats.map((enabledDivisions: t.EnabledDivisions) =>\n      enabledDivisions.reduce((acc, b, d) => {\n        return b\n          ? acc.set(d, immutable.List(R.range(0, d).map(() => true)))\n          : acc;\n      }, immutable.Map<t.Division, immutable.List<boolean>>())\n    )\n  );\n\nconst useMetronome = (audioContext: t.MAudioContext): t.Metronome => {\n  // If the time signature changes, we need to reset the active subdivisions.\n  const numerator = redux.useSelector(\n    s => s.metronomeState.signature.numerator\n  );\n  const playing = redux.useSelector(s => s.metronomeState.playing);\n\n  useEffect(() => {\n    if (audioContext !== \"pending\" && audioContext !== undefined) {\n      redux.setPending(false);\n    }\n  }, [audioContext]);\n\n  useEffect(() => {\n    // TODO - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    redux.resetActivebeats();\n  }, [numerator]);\n\n  useEffect(() => {\n    if (!playing) {\n      redux.resetActivebeats();\n      setTimeout(() => {\n        redux.resetActivebeats();\n      }, 300);\n    }\n  }, [playing]);\n\n  useScheduleAhead(audioContext);\n\n  // External API Things.\n  const addBPM = React.useCallback((bpmToAdd: number) => {\n    redux.setBPM(R.add(bpmToAdd));\n  }, []);\n\n  const toggleStart = React.useCallback(() => redux.setPlaying(R.not), []);\n\n  const start = useCallback((bpm?: number) => {\n    if (bpm !== undefined) {\n      redux.setBPM(bpm);\n    }\n    redux.setPlaying(true);\n  }, []);\n\n  const stop = React.useCallback(() => {\n    redux.setPlaying(false);\n  }, []);\n\n  const setSignature = React.useCallback(redux.setSignature, []);\n  const setBPM = React.useCallback(redux.setBPM, []);\n\n  return {\n    toggleStart,\n    setSignature,\n    start,\n    stop,\n    setBPM,\n    addBPM\n  };\n};\nexport default useMetronome;\n","import React from \"react\";\nimport * as immutable from \"immutable\";\nimport * as R from \"ramda\";\nimport * as redux from \"../redux\";\n\ninterface Marking {\n  high: number;\n  low: number;\n  name: string;\n}\n\nexport const markings: immutable.List<Marking> = immutable.List([\n  { name: \"Larghissimo\", low: 0, high: 24 },\n  { name: \"Grave\", low: 25, high: 45 },\n  { name: \"Largo\", low: 40, high: 60 },\n  { name: \"Lento\", low: 45, high: 60 },\n  { name: \"Larghetto\", low: 60, high: 66 },\n  { name: \"Adagio\", low: 66, high: 76 },\n  { name: \"Andante\", low: 76, high: 108 },\n  { name: \"Marcia moderato\", low: 83, high: 85 },\n  { name: \"Andante moderato\", low: 92, high: 112 },\n  { name: \"Moderato\", low: 108, high: 120 },\n  { name: \"Allegro\", low: 120, high: 156 },\n  { name: \"Vivace\", low: 156, high: 176 },\n  { name: \"Vivacissimo\", low: 172, high: 176 },\n  { name: \"Allegrissimo\", low: 172, high: 176 },\n  { name: \"Presto\", low: 168, high: 200 },\n  { name: \"Prestissimo\", low: 200, high: 250 }\n]);\n\nconst inRange = (to: number, from: number, test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = R.memoizeWith(\n  a => \"\" + a,\n  (bpm: number): immutable.List<Marking> =>\n    markings.filter(({ high, low }) => inRange(high, low, bpm))\n);\n\ninterface MarkingProps {\n  name: string;\n  low: number;\n  high: number;\n}\n\nconst Marking: React.FC<MarkingProps> = React.memo(({ name, low, high }) => {\n  return (\n    <div className=\"has-text-centered\">\n      {name} - {low} - {high}\n    </div>\n  );\n});\n\nconst TempoMarking = React.memo(\n  ({ bpm }: { bpm: number }) => {\n    const markings = fromBPM(bpm);\n    return (\n      <div style={{ minHeight: \"6.5em\" }}>\n        {markings.map(({ name, high, low }) => (\n          <Marking key={`marking-${name}`} name={name} high={high} low={low} />\n        ))}\n      </div>\n    );\n  },\n  ({ bpm: old }, { bpm: nu }) => fromBPM(old).equals(fromBPM(nu))\n);\n\nconst Wrap = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <TempoMarking bpm={bpm} />;\n};\n\nexport default Wrap;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\n\nexport const maxWidth = \"40em\";\n\ntype ReactButton = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\ninterface ButtonProps extends ReactButton {\n  primary?: true;\n  isPrimary?: true;\n  isLink?: true;\n  isInfo?: true;\n  isSuccess?: true;\n  isDanger?: true;\n  isOutlined?: true;\n  offIsPrimary?: true;\n  offIsLink?: true;\n  offIsInfo?: true;\n  offIsSuccess?: true;\n  offIsDanger?: true;\n  offIsOutlined?: true;\n  grow?: true;\n}\n\ninterface ToggleButtonProps extends ButtonProps {\n  on: boolean;\n}\n\nconst offProps = [\n  \"offIsPrimary\",\n  \"offIsLink\",\n  \"offIsDanger\",\n  \"offIsInfo\",\n  \"offIsSuccess\",\n  \"offIsOutlined\"\n];\nconst onProps = [\n  \"isPrimary\",\n  \"isLink\",\n  \"isDanger\",\n  \"isInfo\",\n  \"isSuccess\",\n  \"isOutlined\"\n];\n\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({ on, ...props }) => {\n  const renderProps = React.useMemo(() => {\n    const toRemove = on ? offProps : onProps;\n    return R.omit(toRemove, props);\n  }, [on, props]);\n\n  const child = React.useMemo(\n    () =>\n      props.children instanceof Array && props.children.length === 2\n        ? on\n          ? props.children[0]\n          : props.children[1]\n        : props.children,\n    [props, on]\n  );\n  return <Button {...renderProps}>{child}</Button>;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  isPrimary,\n  isDanger,\n  isLink,\n  isInfo,\n  isSuccess,\n  isOutlined,\n  offIsPrimary,\n  offIsDanger,\n  offIsLink,\n  offIsInfo,\n  offIsSuccess,\n  offIsOutlined,\n  grow,\n  className: propsClassName,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(\"button\", propsClassName, {\n        \"is-primary\": isPrimary || offIsPrimary,\n        \"is-link\": isLink || offIsLink,\n        \"is-danger\": isDanger || offIsDanger,\n        \"is-info\": isInfo || offIsInfo,\n        \"is-success\": isSuccess || offIsSuccess,\n        \"is-outlined\": isOutlined || offIsOutlined,\n        \"is-grow\": grow\n      }),\n    [\n      propsClassName,\n      grow,\n      isPrimary,\n      offIsPrimary,\n      isLink,\n      offIsLink,\n      isDanger,\n      offIsDanger,\n      isInfo,\n      offIsInfo,\n      isOutlined,\n      offIsOutlined,\n      isSuccess,\n      offIsSuccess\n    ]\n  );\n  const renderProps = React.useMemo(() => {\n    return { ...props, className };\n  }, [props, className]);\n\n  return <button {...renderProps}>{props.children}</button>;\n};\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hasAddons?: true;\n  grow?: true | undefined;\n}\n\nconst ButtonsWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0 !important;\n  }\n`;\n\nexport const Buttons: React.FC<ButtonsProps> = ({\n  children,\n  hasAddons,\n  ref,\n  className: propsClassName,\n  grow,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(propsClassName, \"buttons\", {\n        \"has-addons\": hasAddons,\n        \"is-grow\": grow\n      }),\n    [hasAddons, grow, propsClassName]\n  );\n  return (\n    <ButtonsWrapper ref={ref as any} {...props} className={className}>\n      {children}\n    </ButtonsWrapper>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport * as hooks from \"../hooks\";\nimport * as t from \"../types\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"../redux\";\n\ninterface Props {\n  metronome: t.Metronome;\n}\n\ninterface DivisionsProps {\n  uiEnabledDivisions: t.EnabledDivisions;\n  toggleDivisionOption: (option: t.Division) => void;\n  clearDivisions: () => void;\n}\n\nconst DivisionsWrapper = React.memo(styled.section`\n  display: flex;\n  align-items: baseline;\n  > div {\n    margin-right: 10px;\n  }\n`);\n\nconst Divisions: React.FC<DivisionsProps> = React.memo(\n  ({ uiEnabledDivisions, toggleDivisionOption, clearDivisions }) => {\n    return (\n      <DivisionsWrapper>\n        <div className=\"is-size-5\">Division</div>\n        <Buttons hasAddons grow style={{ marginRight: \"5px\" }}>\n          {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => {\n            const on = uiEnabledDivisions.get(num)!;\n            return (\n              <ToggleButton\n                grow\n                on={on}\n                isPrimary\n                key={`division-options-${num}`}\n                onClick={() => toggleDivisionOption(num)}\n              >\n                {num}\n              </ToggleButton>\n            );\n          })}\n        </Buttons>\n        <Button grow isDanger isOutlined onClick={clearDivisions}>\n          Clear\n        </Button>\n      </DivisionsWrapper>\n    );\n  }\n);\n\nconst TimeSignature = ({ metronome }: Props) => {\n  const setSignature = React.useMemo(() => metronome.setSignature, [\n    metronome.setSignature\n  ]);\n  const numerator = redux.useSelector(\n    a => a.metronomeState.signature.numerator\n  );\n\n  const [hasChanged, setHasChanged] = useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = hooks.useLocalStorage<\n    t.EnabledDivisions\n  >(\n    t.LocalStorageKey.EnabledDivisions,\n    immutable.Map<t.Division, boolean>().set(1, true)\n  );\n\n  useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, old.numerator.size).map(() => uIenabledDivisions)\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old => {\n        const oldValue = old.get(divisionOption);\n        const newValue = oldValue === undefined ? true : !oldValue;\n        return old.set(divisionOption, newValue);\n      });\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = useCallback(() => {\n    setUiEnabledDivisions(immutable.Map<t.Division, boolean>().set(1, true));\n  }, [setUiEnabledDivisions]);\n\n  // TODO - make it where clicking on a division group lets you set the volume & accents for that group.\n  // TODO - add an option to turn on or off the accent at the start of every measure.\n  // TODO - clean up these buttons to not use className.\n\n  const [currentNumerator, setCurrentNumerator] = React.useState(\n    numerator.size\n  );\n\n  React.useEffect(() => {\n    setSignature(old => ({\n      ...old,\n      numerator: immutable.List(\n        R.range(0, currentNumerator).map(() => uIenabledDivisions)\n      )\n    }));\n  }, [currentNumerator, setSignature, uIenabledDivisions]);\n\n  return (\n    <>\n      <Beats />\n      <Divisions\n        uiEnabledDivisions={uIenabledDivisions}\n        toggleDivisionOption={toggleDivisionOption}\n        clearDivisions={clearDivisions}\n      />\n      <Signature\n        currentNumerator={numerator.size}\n        setCurrentNumerator={setCurrentNumerator}\n      />\n    </>\n  );\n};\n\ninterface SignatureProps {\n  setCurrentNumerator: (numerator: number) => void;\n  currentNumerator: number;\n}\n\nconst Signature: React.FC<SignatureProps> = React.memo(\n  ({ setCurrentNumerator, currentNumerator }) => {\n    return (\n      <section className=\"section buttons is-centered\">\n        {[1, 2, 3, 4, 5].map(num => {\n          const on = currentNumerator === num;\n          return (\n            <ToggleButton\n              key={`numerator-button-${num}`}\n              on={on}\n              isPrimary\n              isOutlined\n              grow\n              onClick={on ? () => {} : () => setCurrentNumerator(num)}\n            >\n              <>{num}/4</>\n            </ToggleButton>\n          );\n        })}\n      </section>\n    );\n  }\n);\n\n// TODO - margin should be calculated based on number of divisions.\nconst BeatRowItemWrapper = React.memo(styled.div`\n  width: 1px;\n  margin-left: 1px;\n  margin-right: 1px;\n  flex-grow: 1;\n`);\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatRowWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n`);\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`);\n\nconst BeatsWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 10px;\n`);\n\n// TODO - the selected division values should reset when you stop the metronome.\n// TODO - If not playing, this should show the boring gray background.\nconst BeatRowItem: React.FC<{\n  on: boolean;\n  beatRows: number;\n}> = React.memo(({ on, beatRows }) => {\n  const className = React.useMemo(() => {\n    return on ? \"has-background-primary\" : \"has-background-link\";\n  }, [on]);\n  const height = React.useMemo(() => {\n    return 70 / beatRows;\n  }, [beatRows]);\n  return (\n    <BeatRowItemWrapper\n      className={className}\n      style={{\n        height,\n        marginTop: 1\n      }}\n    />\n  );\n});\n\nconst BeatRow: React.FC<{\n  bools: immutable.List<boolean>;\n  divisions: t.Division;\n  beatNumber: number;\n  beatRows: number;\n  rowIndex: number;\n}> = React.memo(({ bools, beatNumber, rowIndex, beatRows }) => {\n  const j = rowIndex;\n  const index = beatNumber;\n  return (\n    <BeatRowWrapper key={`${index}-${j}`}>\n      {bools.map((on, itemIndex) => (\n        <BeatRowItem\n          beatRows={beatRows}\n          key={`${index}-${rowIndex}-${itemIndex}`}\n          on={on}\n        />\n      ))}\n    </BeatRowWrapper>\n  );\n});\n\nconst Beat: React.FC<{\n  beat: immutable.Map<t.Division, immutable.List<boolean>>;\n  index: number;\n}> = React.memo(({ beat, index }) => {\n  const things = beat.entrySeq();\n  return (\n    <BeatWrapper key={`${index}`}>\n      {things.map(([divisions, bools], rowIndex) => (\n        <BeatRow\n          beatRows={things.size || 0}\n          key={`${index}-${rowIndex}`}\n          divisions={divisions}\n          bools={bools}\n          beatNumber={index}\n          rowIndex={rowIndex}\n        />\n      ))}\n    </BeatWrapper>\n  );\n});\n\n// TODO - make it where you can click and drag on the visual subdivision to\n// change the volume and double tap to change it's color and also make it an\n// accent?\nconst Beats: React.FC = React.memo(() => {\n  const activeBeats: t.ActiveBeats = redux.useSelector(a => a.activeBeats);\n  return (\n    <BeatsWrapper>\n      {activeBeats.map((beat, beatNumber) => (\n        <Beat key={beatNumber} beat={beat} index={beatNumber} />\n      ))}\n    </BeatsWrapper>\n  );\n});\n\nexport default TimeSignature;\n","import React, { useState } from \"react\";\nimport * as R from \"ramda\";\nimport { Button } from \"./Common\";\n\ninterface Props {\n  setBPM: (bpm: number) => void;\n}\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn = ({ setBPM }: Props) => {\n  const [taps, setTaps] = useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return (\n    <Button isLink isOutlined onClick={onTap}>\n      Tap In\n    </Button>\n  );\n};\n\nexport default TapIn;\n","import React, { useEffect, useState } from \"react\";\nimport { useToggle } from \"../hooks\";\nimport { ToggleButton, Buttons } from \"./Common\";\nimport styled from \"styled-components\";\nimport * as polyfill from \"../polyfill\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = React.memo(() => {\n  const [on, toggleOn] = useToggle(false);\n  const [analyser, setAnalyser] = useState<AnalyserNode>();\n  const [sampleRate, setSampleRate] = useState<number>();\n  const [freq, setFreq] = useState<number>(440);\n  const [audioContext, setAudioContext] = useState<AudioContext>();\n\n  // Initailize the AudioContext when user turns on the tuner.\n  useEffect(() => {\n    if (on && !audioContext && polyfill.AudioContext !== undefined) {\n      setAudioContext(new polyfill.AudioContext());\n    }\n  }, [on, audioContext]);\n\n  // Prompt for microphone when user turns on the tuner.\n  useEffect(() => {\n    if (on && audioContext) {\n      setSampleRate(audioContext.sampleRate);\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices) {\n        let mediaStream: MediaStream;\n        mediaDevices.getUserMedia({ audio: true }).then((ms: MediaStream) => {\n          mediaStream = ms;\n          const analyser = audioContext.createAnalyser();\n          // If this isn't big, I don't have very good frequency accuracy, and I\n          // can't change the sample rate because web audio sucks.\n          analyser.fftSize = 8192;\n          const mic = audioContext.createMediaStreamSource(ms);\n          mic.connect(analyser);\n          setAnalyser(analyser);\n        });\n        return () => {\n          mediaStream.getAudioTracks().forEach(track => track.stop());\n        };\n      }\n    }\n  }, [on, audioContext]);\n\n  useEffect(() => {\n    if (on && analyser && sampleRate) {\n      const tick = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Float32Array(bufferLength);\n        analyser.getFloatFrequencyData(dataArray);\n        const [, maxIdx] = dataArray.reduce(\n          (a, b, i) => (a[0] < b ? [b, i] : a),\n          [-Infinity, -1]\n        );\n        const resolution = sampleRate / analyser.fftSize;\n        const freq = resolution * maxIdx;\n        setFreq(freq);\n      };\n      tick();\n      let interval = setInterval(tick, 50);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [on, analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  // TODO - add in a graph of the FFT that's label with pitches and neato log bars.\n  return (\n    <TunerWrapper className=\"box has-text-centered\">\n      <div className=\"is-size-1\">{on ? note + octave : \"Stopped\"}</div>\n\n      <div>\n        {on ? (\n          <>\n            {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n          </>\n        ) : (\n          \"press start to tune\"\n        )}\n      </div>\n      <Buttons className=\"is-right\">\n        <ToggleButton on={on} isDanger offIsPrimary onClick={toggleOn}>\n          <>Stop</>\n          <>Start</>\n        </ToggleButton>\n      </Buttons>\n    </TunerWrapper>\n  );\n});\n\nconst TunerWrapper = styled.section`\n  margin-top: 10px;\n`;\n\nexport default Tuner;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport * as hooks from \"../hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"../types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Inner = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface Props {\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [stateRadians, setRadians] = hooks.useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (Math.PI * 3) / 2\n  );\n  const radiansRef = useRef(Math.PI);\n  useEffect(() => {\n    radiansRef.current = stateRadians;\n  }, [stateRadians]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const mouseDownRef = useRef(false);\n  useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = useState(0);\n  const totalDiffRef = useRef(0);\n  useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const knobContainer = useRef<HTMLDivElement>(null);\n\n  const onMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  }, []);\n\n  const onMouseUp = useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      const { clientX, clientY } = e;\n      const box = knobContainer.current!.getBoundingClientRect();\n\n      const boxCenter = {\n        x: box.left + box.width / 2,\n        y: box.top + box.height / 2\n      };\n      const y = -(boxCenter.y - clientY);\n      const x = -(boxCenter.x - clientX);\n      const newRadians = Math.atan2(y, x);\n      let diff = radiansRef.current - newRadians;\n      if (diff < -Math.PI) {\n        diff = -radiansRef.current - newRadians;\n      } else if (diff > Math.PI) {\n        diff = radiansRef.current - -newRadians;\n      }\n      if (diff !== 0) {\n        addToBuffer(diff);\n      }\n      const same = newRadians === radiansRef.current;\n      if (!same) {\n        setRadians(newRadians);\n      }\n    },\n    [addToBuffer, setRadians]\n  );\n\n  const onMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  const onTouchMove = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      const t = e.changedTouches;\n      const t0 = t[0];\n      moveKnob(t0);\n    },\n    [moveKnob]\n  );\n\n  const top = React.useMemo(\n    () =>\n      size / 2 +\n      Math.sin(stateRadians) * (size / 4) +\n      (Math.sin(stateRadians) * size) / 16 -\n      size / 6,\n    [stateRadians, size]\n  );\n  const left = React.useMemo(\n    () =>\n      size / 2 +\n      Math.cos(stateRadians) * (size / 4) +\n      (Math.cos(stateRadians) * size) / 16 -\n      size / 6,\n    [stateRadians, size]\n  );\n\n  return (\n    <Outer ref={knobContainer} className=\"has-background-primary\">\n      <Inner\n        className=\"has-background-info\"\n        onMouseDown={onMouseDown}\n        onTouchMove={onTouchMove}\n        style={{\n          top,\n          left\n        }}\n      />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = React.memo(styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`);\n\nexport default InfiniKnob;\n","import React, { useEffect } from \"react\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport { usePersistantToggle, useSleepLock } from \"../hooks\";\nimport { Buttons, ToggleButton } from \"./Common\";\nimport useMetronome from \"../metronome\";\nimport * as t from \"../types\";\nimport styled from \"styled-components\";\nimport * as redux from \"../redux\";\n\nconst FullPage = styled.div`\n  margin: 0 !important;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  text-align: center;\n`;\n\ninterface MetronomeProps {\n  audioContext: t.MAudioContext;\n  appSettings: t.AppSettings;\n}\n\ninterface DialSectionProps {\n  addBPM: (bpm: number) => void;\n}\n\nconst BPM = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <div className=\"has-text-centered is-size-1\">{bpm}</div>;\n};\n\nconst DialSection: React.FC<DialSectionProps> = React.memo(({ addBPM }) => {\n  return (\n    <section className=\"section\">\n      <Dial addDiff={addBPM}>\n        <BPM />\n        <TempoMarking />\n      </Dial>\n    </section>\n  );\n});\n\nconst Metronome: React.FC<MetronomeProps> = ({ appSettings, audioContext }) => {\n  const metronome = useMetronome(audioContext);\n\n  const {\n    state: { keepAwake }\n  } = appSettings;\n  const [showTuner, toggleTuner] = usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n    false\n  );\n  const { lock, release } = useSleepLock();\n\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const pending = redux.useSelector(a => a.metronomeState.pending);\n  const addBPM = React.useCallback(metronome.addBPM, [metronome.addBPM]);\n  const setBPM = React.useCallback(metronome.setBPM, [metronome.setBPM]);\n  const toggleStart = React.useCallback(metronome.toggleStart, [\n    metronome.toggleStart\n  ]);\n\n  useEffect(() => {\n    if (keepAwake && playing) {\n      lock();\n    } else {\n      release();\n    }\n  }, [playing, keepAwake, lock, release]);\n\n  return (\n    <>\n      {pending && <FullPage>Tap to enable audio.</FullPage>}\n      {showTuner && <Tuner />}\n      <DialSection addBPM={addBPM} />\n      <TimeSignature metronome={metronome} />\n      <Controls\n        showTuner={showTuner}\n        toggleTuner={toggleTuner}\n        toggleStart={toggleStart}\n        playing={playing}\n        setBPM={setBPM}\n        pending={pending}\n      />\n    </>\n  );\n};\n\ninterface ControlsProps {\n  showTuner: boolean;\n  toggleTuner: () => void;\n  playing: boolean;\n  toggleStart: () => void;\n  setBPM: (bpm: number) => void;\n  pending: boolean;\n}\n\nconst Controls: React.FC<ControlsProps> = React.memo(\n  ({ showTuner, toggleTuner, playing, toggleStart, setBPM, pending }) => {\n    return (\n      <section className=\"section\">\n        <Buttons hasAddons>\n          <ToggleButton\n            isLink\n            offIsOutlined\n            offIsLink\n            on={showTuner}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </ToggleButton>\n          <TapIn setBPM={setBPM} />\n          <ToggleButton\n            on={playing}\n            offIsPrimary\n            grow\n            isOutlined\n            isDanger\n            disabled={pending}\n            onClick={toggleStart}\n          >\n            <>Stop</>\n            <>Start</>\n          </ToggleButton>\n        </Buttons>\n      </section>\n    );\n  }\n);\nexport default Metronome;\n","import React from \"react\";\nimport * as t from \"../types\";\nimport styled from \"styled-components\";\n\ninterface SettingsProps {\n  appSettings: t.AppSettings;\n}\n\nconst SettingsWrapper = styled.section``;\n\nconst Settings: React.FC<SettingsProps> = ({ appSettings }) => {\n  const {\n    state: { keepAwake },\n    toggleKeepAwake\n  } = appSettings;\n  return (\n    <SettingsWrapper>\n      <h2 className=\"is-size-4\">Settings</h2>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              style={{ marginRight: \"5px\" }}\n              type=\"checkbox\"\n              checked={keepAwake}\n              onChange={toggleKeepAwake}\n            />\n            Keep screen on while metronome is running.\n          </label>\n        </div>\n      </div>\n    </SettingsWrapper>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport TimeSignature from \"./TimeSignature\";\nimport * as hooks from \"../hooks\";\nimport * as util from \"../util\";\nimport * as t from \"../types\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport useScales from \"../scales\";\nimport useMetronome from \"../metronome\";\n\nenum ScaleMode {\n  NOT_STARTED = \"not-started\",\n  KNOWN = \"known\",\n  LEARNING = \"learning\"\n}\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: t.Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Buttons>\n        <ToggleButton on={known} isInfo onClick={toggleKnown}>\n          Known\n        </ToggleButton>\n        <ToggleButton on={learning} isLink onClick={toggleLearning}>\n          Learning\n        </ToggleButton>\n      </Buttons>\n    </div>\n  );\n};\n\ninterface LearnScalesProps {\n  scales: t.Scales;\n  metronome: t.Metronome;\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\n\nconst LearnScales: React.FC<LearnScalesProps> = ({\n  scales,\n  reset,\n  scaleMode,\n  metronome\n}) => {\n  const { getScales, getScale, addBPM } = scales;\n  const [scaleKeys, setScales] = React.useState<Array<t.ScaleKey>>(() =>\n    util.shuffle(\n      getScales(s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      })\n        .valueSeq()\n        .map(({ scaleKey }) => scaleKey)\n        .toArray()\n    )\n  );\n\n  const start = React.useCallback(metronome.start, [metronome.start]);\n\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScale(\n    (s: t.Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  React.useEffect(() => {\n    if (maybeScale !== undefined) {\n      start(maybeScale.bpm);\n    }\n  }, [maybeScale, start]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <>\n      <div className=\"box\">\n        <div\n          style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n          className=\"control is-expanded is-size-5\"\n        >\n          {scaleMode}\n        </div>\n        <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n          <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n            {pitch} {mode} @ {bpm}bpm\n          </div>\n          <Buttons grow hasAddons>\n            <Button isDanger isOutlined grow onClick={() => addBPM(scale, -10)}>\n              -10\n            </Button>\n            <Button isDanger isOutlined grow onClick={() => addBPM(scale, -1)}>\n              -\n            </Button>\n            <Button isPrimary isOutlined grow onClick={() => addBPM(scale, 1)}>\n              +\n            </Button>\n            <Button isPrimary isOutlined grow onClick={() => addBPM(scale, 10)}>\n              +10\n            </Button>\n          </Buttons>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button isDanger isOutlined onClick={reset}>\n            Stop\n          </Button>\n          <Button isPrimary onClick={nextScale}>\n            {nextScaleText}\n          </Button>\n        </div>\n      </div>\n      <TimeSignature metronome={metronome} />\n    </>\n  );\n};\n\ninterface ScalesProps {\n  audioContext: t.MAudioContext;\n}\n\n// TODO - Add a button to start learning a new scale. This will be a scale\n// that is know known and is not learning.\nconst Scales: React.FC<ScalesProps> = ({ audioContext }) => {\n  // TODO wrap this in a useCallback.\n  const metronome = useMetronome(audioContext);\n  const { stop: stopMetronome } = metronome;\n\n  const [scaleMode, setScaleMode] = React.useState(ScaleMode.NOT_STARTED);\n  const [showKnown, toggleShowKnown] = hooks.usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  React.useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      stopMetronome();\n    }\n  }, [scaleMode, stopMetronome]);\n\n  const scales = useScales();\n  const { getScale, getScales, toggleLearning, toggleKnown } = scales;\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Buttons>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={getScale(s => s.known) === undefined}\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Button>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={getScale(s => s.learning) === undefined}\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Button>\n            </Buttons>\n          </div>\n          <hr />\n\n          <Buttons>\n            <Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Button>\n          </Buttons>\n          {getScales(\n            s =>\n              s.mode === t.Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScales(\n            s =>\n              s.mode === t.Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          scales={scales}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n          metronome={metronome}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\nimport * as immutable from \"immutable\";\n\nconst initScale = (scaleKey: t.ScaleKey): t.Scale => ({\n  scaleKey,\n  pitch: scaleKey[0],\n  mode: scaleKey[1],\n  known: false,\n  learning: false,\n  bpm: 60\n});\n\nconst addScale = (scalesDB: t.ScalesDB, key: t.ScaleKey): t.ScalesDB => {\n  return scalesDB.add(initScale(key));\n};\n\nconst initScalesDB = (): t.ScalesDB => {\n  return t.scaleKeys.reduce(\n    (scalesDB: t.ScalesDB, scaleKey) => addScale(scalesDB, scaleKey),\n    immutable.Set() as t.ScalesDB\n  );\n};\n\nexport const getScale = (\n  scalesDB: t.ScalesDB,\n  filter: (s: t.Scale) => boolean\n): t.Scale | undefined => {\n  return getScales(scalesDB, filter).first();\n};\n\nconst getScales = (scalesDB: t.ScalesDB, filter: (s: t.Scale) => boolean) => {\n  return scalesDB.filter(filter);\n};\n\nconst useScales = (): t.Scales => {\n  const [scalesDB, setScalesDB] = hooks.useLocalStorage<t.ScalesDB>(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const addScalePublic = React.useCallback(() => {\n    throw new Error(\"not implemented\");\n  }, []);\n\n  const getScalePublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) => getScale(scalesDB, filter),\n    [scalesDB]\n  );\n\n  const getScalesPublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) =>\n      getScales(scalesDB, filter).sort((a, b) =>\n        a.scaleKey[0].localeCompare(b.scaleKey[0])\n      ),\n    [scalesDB]\n  );\n\n  const addBPMPublic = React.useCallback(\n    (s: t.Scale, bpm: number) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, bpm: scale.bpm + bpm })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleLearningPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, learning: !scale.learning })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleKnownPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, known: !scale.known })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n\n  // TODO - these should probably use a ref so they don't change as often.\n  return {\n    addBPM: addBPMPublic,\n    toggleLearning: toggleLearningPublic,\n    toggleKnown: toggleKnownPublic,\n    addScale: addScalePublic,\n    getScale: getScalePublic,\n    getScales: getScalesPublic\n  };\n};\nexport default useScales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport { Buttons, Button, maxWidth } from \"./Common\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n`;\n\nconst UpdateStyle = styled.section`\n  position: absolute;\n  max-width: ${maxWidth};\n  width: 95%;\n  margin-top: 10px;\n  left: 0;\n  right: 0;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  z-index: 10;\n  display: flex !important;\n  justify-content: space-between;\n  animation: ease-in 1s ${rotate};\n`;\n\nlet hasRegistered = false;\nexport default () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  const reload = React.useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const close = React.useCallback(() => {\n    setUpdateAvailable(false);\n  }, []);\n\n  useEffect(() => {\n    if (!hasRegistered) {\n      serviceWorker.register({\n        onUpdate: () => {\n          setUpdateAvailable(true);\n        }\n      });\n    }\n    hasRegistered = true;\n  }, []);\n  return (\n    <>\n      {updateAvailable && (\n        <UpdateStyle className=\"box\">\n          <span>An Update is Available!</span>\n          <Buttons>\n            <Button isPrimary isOutlined onClick={reload}>\n              Refresh\n            </Button>\n            <Button isDanger isOutlined onClick={close}>\n              x\n            </Button>\n          </Buttons>\n        </UpdateStyle>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\n\nconst initSettings = (): t.AppSettings[\"state\"] => ({\n  keepAwake: false\n});\n\nexport const useAppSettings = (): t.AppSettings => {\n  const [state, setState] = hooks.useLocalStorage<t.AppSettings[\"state\"]>(\n    t.LocalStorageKey.AppSettings,\n    initSettings\n  );\n\n  const toggleKeepAwake = React.useCallback(() => {\n    setState(old => ({ ...old, keepAwake: !old.keepAwake }));\n  }, [setState]);\n\n  return {\n    state,\n    toggleKeepAwake\n  };\n};\n","import React from \"react\";\nimport Metronome from \"./Metronome\";\nimport Settings from \"./Settings\";\nimport Scales from \"./Scales\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Update from \"./Update\";\nimport { useAppSettings } from \"../settings\";\nimport styled, { keyframes } from \"styled-components\";\nimport { maxWidth } from \"./Common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars as faCoffee,\n  faHome,\n  faCog as faGear,\n  faMusic\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useToggle } from \"../hooks\";\nimport * as hooks from \"../hooks\";\n\nconst TopBarWrapper = React.memo(styled.section`\n  margin-bottom: 10px;\n  margin-left: 0px !important;\n  margin-right: 0px !important;\n  display: flex;\n  flex-direction: column;\n`);\n\nconst CenterIcon = React.memo(styled.span`\n  align-self: center;\n`);\n\nconst TopNav = React.memo(styled.section`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  justify-content: space-between;\n  > h2 {\n    margin: 0 !important;\n  }\n`);\n\nconst dropDown = keyframes`\n  from {\nfont-size: 0px;\n  }\n`;\n\nconst NavDropDown = React.memo(styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n  align-self: flex-end;\n  > a {\n    animation: ease-in 0.3s ${dropDown};\n    font-size: 1.5rem;\n  }\n`);\n\nconst NavItem = React.memo(styled(Link)``);\n\nconst NavIcon = React.memo(styled(FontAwesomeIcon)`\n  margin-left: 5px;\n`);\n\nconst TopBar = React.memo(() => {\n  const [showNav, toggleNav] = useToggle(false);\n  // TODO - figure out how to animate the nav being hidden.\n  // TODO - make it where clicking outside of this element hides it.\n  // TODO - make it where you can swipe from the right of the screen to show the nav.\n  return (\n    <TopBarWrapper>\n      <TopNav className=\"has-background-primary has-text-light\">\n        <Link to=\"/\" className=\"has-text-white\">\n          <h2 className=\"is-size-4 is-bold\">(mjh)tronome</h2>\n        </Link>\n        <CenterIcon onClick={toggleNav}>\n          <FontAwesomeIcon icon={faCoffee} size=\"2x\" />\n        </CenterIcon>\n      </TopNav>\n      {showNav && (\n        <NavDropDown onClick={toggleNav}>\n          <NavItem to=\"/\">\n            Home\n            <NavIcon icon={faHome} />\n          </NavItem>\n          <NavItem to=\"/scales\">\n            Scales\n            <NavIcon icon={faMusic} />\n          </NavItem>\n          <NavItem to=\"/settings\">\n            Settings\n            <NavIcon icon={faGear} />\n          </NavItem>\n        </NavDropDown>\n      )}\n    </TopBarWrapper>\n  );\n});\n\nconst WrapperStyle = React.memo(styled.div`\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  > * {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`);\n\nconst FooterStyle = React.memo(styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  margin-top: 5px;\n`);\n\nconst Wrapper: React.FC = React.memo(({ children }) => {\n  return (\n    <WrapperStyle>\n      <Update />\n      <TopBar />\n      {children}\n      <FooterStyle>{`v${process.env.REACT_APP_VERSION}`}</FooterStyle>\n    </WrapperStyle>\n  );\n});\n\n// TODO - add a button to the overall exception handler that lets you clear local storage.\n// TODO - add an option to the settings to clear local storage.\n// TODO - update components to use the React.FC type.\nconst App: React.FC = () => {\n  const appSettings = useAppSettings();\n  const audioContext = hooks.useAudioContext();\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Wrapper>\n        {audioContext === \"not-supported\" && (\n          <div>\n            Your browser doesn't support the audioContext api, so this will not\n            work. Sorry :(\n          </div>\n        )}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Metronome audioContext={audioContext} appSettings={appSettings} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/scales\"\n          render={() => <Scales audioContext={audioContext} />}\n        />\n        <Route\n          exact\n          path=\"/settings\"\n          render={() => <Settings appSettings={appSettings} />}\n        />\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./bulma-overrides.sass\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nclass ErrorBoundary extends React.Component<{}, { error: any }> {\n  constructor(props: { error: any }) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Something went wrong</h1>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.name}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.message}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.stack}\n          </code>\n          <hr />\n          <code>{JSON.stringify(this.state.error, undefined, \"  \")}</code>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}