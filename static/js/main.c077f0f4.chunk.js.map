{"version":3,"sources":["click.wav","TempoMarking.tsx","Common.tsx","TimeSignature.tsx","types.ts","TapIn.tsx","polyfill.ts","hooks.ts","Tuner.tsx","Dial.tsx","Metronome.tsx","Settings.tsx","Scales.tsx","serviceWorker.ts","Update.tsx","settings.ts","util.ts","metronome.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","markings","name","range","fromBPM","bpm","filter","_ref3","_ref","test","_ref2","Object","slicedToArray","from","to","inRange","TempoMarking","_ref4","react_default","a","createElement","style","minHeight","map","_ref5","idx","key","className","ToggleButton","props","_useState","useState","_useState2","buttonProps","setButtonProps","on","children","_props$className","useEffect","newProps","R","renderProps","objectWithoutProperties","child","Array","length","Common_Button","Button","isPrimary","isDanger","isLink","isInfo","isSuccess","isOutlined","offIsPrimary","offIsDanger","offIsLink","offIsInfo","offIsSuccess","offIsOutlined","grow","primary","link","danger","info","success","outlined","offprimary","offlink","offdanger","offinfo","offsuccess","offoutlined","propClassName","concat","flexGrow","assign","objectSpread","ButtonsWrapper","styled","div","_templateObject","Buttons","hasAddons","_ref2$className","propsClassName","_ref2$style","ref","addons","classes","LocalStorageKey","Mode","Pitch","Divisions","section","TimeSignature_templateObject","BeatRowItemWrapper","_templateObject2","BeatRowWrapper","_templateObject3","BeatWrapper","_templateObject4","BeatsWrapper","_templateObject5","BeatRowItem","beatRows","React","useMemo","height","marginTop","BeatRow","bools","beatNumber","rowIndex","j","index","itemIndex","TimeSignature_BeatRowItem","Beat","beat","things","entrySeq","_ref6","divisions","TimeSignature_BeatRow","size","Beats","_ref7","activeBeats","TimeSignature_Beat","TimeSignature","metronome","setSignature","state","activeDivisions","numerator","signature","hasChanged","setHasChanged","_useState3","immutable","set","_useState4","uIenabledDivisions","setUiEnabledDivisions","setNumerator","useCallback","old","toggleDivisionOption","divisionOption","oldValue","get","newValue","undefined","clearDivisions","Fragment","Common_Buttons","marginRight","num","Common_ToggleButton","onClick","TimeSignature_Beats","calculateBPM","tapTimes","Math","trunc","TapIn","setBPM","taps","setTaps","now","performance","newTaps","tap","AudioContext","window","webkitAudioContext","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","F_Sharp","Minor","A_Sharp","D_Sharp","G_Sharp","useLocalStorage","initialValue","override","arguments","_useState5","firstValue","fromLocal","localStorage","getItem","Function","JSON","parse","setItem","stringify","_useState6","value","setValue","valueAction","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","useToggle","sideEffect","toggleState","_useState7","_useState8","useDetectChangedValue","_len","values","_key","oldValues","useRef","lastValues","current","newValues","forEach","lastValue","diff","d","console","log","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","base","pow","centsPerOctave","frequency","octave","note","push","TunerWrapper","Tuner_templateObject","Tuner","_useToggle","_useToggle2","toggleOn","analyser","setAnalyser","sampleRate","setSampleRate","freq","setFreq","audioContext","setAudioContext","mediaStream","mediaDevices","navigator","getUserMedia","audio","then","ms","createAnalyser","fftSize","createMediaStreamSource","connect","getAudioTracks","track","stop","tick","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","reduce","b","maxIdx","resolution","interval","setInterval","clearInterval","_freqToPitch","low","high","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","toFixed","Outer","Dial_templateObject","Inner","Dial_templateObject2","ChildContainer","Dial_templateObject3","InfiniKnob","_ref$size","addDiff","_hooks$useLocalStorag","hooks","t","Radians","PI","_hooks$useLocalStorag2","stateRadians","setRadians","radiansRef","mouseDown","setMouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","knobContainer","onMouseDown","e","preventDefault","onMouseUp","_","addToBuffer","abs","oldDiff","moveKnob","clientX","clientY","box","getBoundingClientRect","boxCenter","left","width","y","top","x","newRadians","atan2","onMouseMove","addEventListener","removeEventListener","onTouchMove","t0","changedTouches","sin","cos","FullPage","Metronome_templateObject","Metronome","appSettings","keepAwake","_usePersistantToggle","ShowTuner","_usePersistantToggle2","showTuner","toggleTuner","_useSleepLock","NoSleep","noSleep","lock","enable","release","disable","useSleepLock","playing","ready","addBPM","toggleStart","src_Tuner","Dial","src_TempoMarking","src_TimeSignature","src_TapIn","disabled","ScaleMode","SettingsWrapper","Settings_templateObject","Settings","toggleKeepAwake","type","checked","onChange","getScaleByFilter","scalesDB","getScalesByFilter","scales","entries","lilMap","scale","initScalesDB","addScale","scaleKey","pitch","mode","pitchMap","known","learning","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","ScalesGroup","_ref5$scaleKey","toggleLearning","toggleKnown","LearnScales","reset","scaleMode","start","floor","random","shuffle","s","LEARNING","KNOWN","setScales","currentKey","maybeScale","nextScaleText","_ref8","alignSelf","fontWeight","display","marginBottom","justifyContent","nu","slice","Scales","_ref9","stopMetronome","ScalesDB","setScalesDB","NOT_STARTED","setScaleMode","_ref10","_ref11","ShowKnown","showKnown","toggleShowKnown","Scales_ScalesGroup","Scales_LearnScales","_ref12","n","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","fetch","response","contentType","headers","status","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","rotate","keyframes","Update_templateObject","UpdateStyle","Update_templateObject2","hasRegistered","Update","updateAvailable","setUpdateAvailable","close","initSettings","click","require","scheduleNote","time","gain","buffer","currentBeat","divisionIndex","isOne","sound","createBufferSource","detune","volume","createGain","destination","intervalError","useScheduleAhead","setActiveDivisions","url","_useState9","_useState10","updateBuffer","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","delay","scheduleAhead","stateRef","beatToSchedule","setBeatToSchedule","beatToScheduleRef","nextBeat","setActiveBeat","oldActiveDivisions","getIn","setIn","updateUi","timeToRun","callback","setTimeout","currentTime","runAtTime","beatsQueue","Deque","firstClickTime","beatIdx","min","nextNoteTime","secondsPerBeat","beatsForNextMeasure","startOfBeatTime","beats","noteOffset","divisionLength","sort","beatsFor","apply","toConsumableArray","addBeatsToQueue","intervalLength","scheduleTil","peekFront","first","shift","playBeatsTill","id","resetActiveBeats","enabledDivisions","acc","clampBPM","defaultBeat","useMetronome","hasFixed","_React$useState","_React$useState2","hasRun","setHasRun","fixAudioContext","polyfill","createBuffer","source","polySource","play","noteOn","document","useFixAudioContextForios","setPlaying","_useAdvice","advice","originalT","originalSetter","newSetter","action","oldT","useAdvice","BPM","_useAdvice2","denominator","bpmRef","bpmToAdd","TopBarWrapper","App_templateObject","CenterIcon","span","App_templateObject2","TopNav","App_templateObject3","dropDown","App_templateObject4","NavDropDown","nav","App_templateObject5","NavItem","Link","_templateObject6","NavIcon","FontAwesomeIcon","_templateObject7","TopBar","showNav","toggleNav","react_router_dom","index_es","icon","faCoffee","faHome","faMusic","faGear","WrapperStyle","_templateObject8","FooterStyle","_templateObject9","Wrapper","App_TopBar","App","AppSettings","setState","useAppSettings","_useSingleton","setValueOnce","init","useSingleton","initAudioContext","hasAudioContext","setHasAudioContext","basename","App_Wrapper","react_router","exact","path","render","src_Metronome","src_Scales","src_Settings","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Error","message","stack","Component","ReactDOM","src_ErrorBoundary","src_App","getElementById"],"mappings":"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","file":"static/js/main.c077f0f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\n\ninterface Marking {\n  range: [number, number];\n  name: string;\n}\n\nexport const markings: Array<Marking> = [\n  { name: \"Larghissimo\", range: [0, 24] },\n  { name: \"Grave\", range: [25, 45] },\n  { name: \"Largo\", range: [40, 60] },\n  { name: \"Lento\", range: [45, 60] },\n  { name: \"Larghetto\", range: [60, 66] },\n  { name: \"Adagio\", range: [66, 76] },\n  { name: \"Andante\", range: [76, 108] },\n  { name: \"Marcia moderato\", range: [83, 85] },\n  { name: \"Andante moderato\", range: [92, 112] },\n  { name: \"Moderato\", range: [108, 120] },\n  { name: \"Allegro\", range: [120, 156] },\n  { name: \"Vivace\", range: [156, 176] },\n  { name: \"Vivacissimo\", range: [172, 176] },\n  { name: \"Allegrissimo\", range: [172, 176] },\n  { name: \"Presto\", range: [168, 200] },\n  { name: \"Prestissimo\", range: [200, 250] }\n];\n\nconst inRange = ([from, to]: [number, number], test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = (bpm: number): Array<Marking> => {\n  return markings.filter(({ range }) => inRange(range, bpm));\n};\n\ninterface Props {\n  bpm: number;\n}\n\nconst TempoMarking = ({ bpm }: Props) => {\n  const markings = fromBPM(bpm);\n  return (\n    <div style={{ minHeight: \"6.5em\" }}>\n      {markings.map(({ name, range }, idx) => (\n        <div key={idx} className=\"has-text-centered\">\n          {name} - {range[0]} - {range[1]}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TempoMarking;\n","import React, { useState, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\n\nexport const maxWidth = \"40em\";\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  primary?: true;\n  isPrimary?: true;\n  isLink?: true;\n  isInfo?: true;\n  isSuccess?: true;\n  isDanger?: true;\n  isOutlined?: true;\n  offIsPrimary?: true;\n  offIsLink?: true;\n  offIsInfo?: true;\n  offIsSuccess?: true;\n  offIsDanger?: true;\n  offIsOutlined?: true;\n  grow?: true;\n}\n\ninterface ToggleButtonProps extends ButtonProps {\n  on: boolean;\n}\n\nexport const ToggleButton = (props: ToggleButtonProps) => {\n  const [buttonProps, setButtonProps] = useState(props);\n  const { on, children, className = \"\" } = props;\n  useEffect(() => {\n    let newProps = props;\n    if (!props.on) {\n      newProps = R.dissoc(\"isPrimary\", newProps);\n      newProps = R.dissoc(\"isLink\", newProps);\n      newProps = R.dissoc(\"isDanger\", newProps);\n      newProps = R.dissoc(\"isInfo\", newProps);\n      newProps = R.dissoc(\"isSuccess\", newProps);\n      newProps = R.dissoc(\"isOutlined\", newProps);\n    } else {\n      newProps = R.dissoc(\"offIsPrimary\", newProps);\n      newProps = R.dissoc(\"offIsLink\", newProps);\n      newProps = R.dissoc(\"offIsDanger\", newProps);\n      newProps = R.dissoc(\"offIsInfo\", newProps);\n      newProps = R.dissoc(\"offIsSuccess\", newProps);\n      newProps = R.dissoc(\"offIsOutlined\", newProps);\n    }\n    setButtonProps(newProps);\n  }, [className, props]);\n  const { on: _1, ...renderProps } = buttonProps;\n  const child =\n    children instanceof Array && children.length === 2\n      ? on\n        ? children[0]\n        : children[1]\n      : children;\n  return <Button {...renderProps}>{child}</Button>;\n};\n\nexport const Button = ({\n  isPrimary,\n  isDanger,\n  isLink,\n  isInfo,\n  isSuccess,\n  isOutlined,\n  offIsPrimary,\n  offIsDanger,\n  offIsLink,\n  offIsInfo,\n  offIsSuccess,\n  offIsOutlined,\n  grow,\n  ...props\n}: ButtonProps) => {\n  const primary = isPrimary ? \"is-primary\" : \"\";\n  const link = isLink ? \"is-link\" : \"\";\n  const danger = isDanger ? \"is-danger\" : \"\";\n  const info = isInfo ? \"is-info\" : \"\";\n  const success = isSuccess ? \"is-success\" : \"\";\n  const outlined = isOutlined ? \"is-outlined\" : \"\";\n  const offprimary = offIsPrimary ? \"is-primary\" : \"\";\n  const offlink = offIsLink ? \"is-link\" : \"\";\n  const offdanger = offIsDanger ? \"is-danger\" : \"\";\n  const offinfo = offIsInfo ? \"is-info\" : \"\";\n  const offsuccess = offIsSuccess ? \"is-success\" : \"\";\n  const offoutlined = offIsOutlined ? \"is-outlined\" : \"\";\n  const propClassName = props.className ? props.className : \"\";\n\n  // TODO - switch to the classname thing that used to come with react.\n  const className = `${propClassName} button ${primary} ${link} ${outlined} ${danger} ${info} ${success} ${offprimary} ${offdanger} ${offdanger} ${offinfo} ${offlink} ${offsuccess} ${offoutlined}`;\n\n  const style = grow ? { flexGrow: 1 } : {};\n\n  return (\n    <button style={style} {...{ ...props, className }}>\n      {props.children}\n    </button>\n  );\n};\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hasAddons?: true;\n  grow?: true | undefined;\n}\n\nconst ButtonsWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0 !important;\n  }\n`;\n\nexport const Buttons: React.FC<ButtonsProps> = ({\n  children,\n  hasAddons,\n  className: propsClassName = \"\",\n  // TODO - I might need to pass this down to ButtonsWrapper, but I can't right now without getting a type error.\n  ref,\n  style = {},\n  grow,\n  ...props\n}) => {\n  const addons = hasAddons ? \"has-addons\" : \"\";\n  const classes = `${propsClassName} buttons ${addons}`;\n  return (\n    <ButtonsWrapper\n      style={Object.assign(style, { flexGrow: grow ? 1 : \"unset\" })}\n      {...props}\n      className={classes}\n    >\n      {children}\n    </ButtonsWrapper>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport * as t from \"./types\";\nimport * as immutable from \"immutable\";\n\ninterface Props {\n  metronome: t.Metronome;\n}\n\n// const BeatColumnRow = ({\n//   playing,\n//   activeBeats,\n//   beatIdx,\n//   division,\n//   divisionIdx,\n//   enabledDivisions: beatDivisions\n// }: {\n//   division: string;\n//   playing: boolean;\n//   activeBeats: t.ActiveDivisions[];\n//   divisionIdx: number;\n//   beatIdx: number;\n//   enabledDivisions: t.EnabledDivisions;\n// }) => {\n//   const divisions = parseInt(division, 10);\n//   return (\n//     <SigColumns key={`d${divisions}`}>\n//       {R.range(0, divisions).map(idx => {\n//         const bg =\n//           playing &&\n//           activeBeats[beatIdx] &&\n//           activeBeats[beatIdx][divisions] &&\n//           activeBeats[beatIdx][divisions][idx]\n//             ? beatIdx === 0\n//               ? \"has-background-info\"\n//               : \"has-background-primary\"\n//             : \"has-background-light\";\n//         const marginTop = divisions === 1 ? 0 : 5;\n//         const marginLeft = idx === 0 ? 0 : 10 / divisions;\n//         const marginRight = idx === divisions - 1 ? 0 : 10 / divisions;\n//         return (\n//           <SigColumn\n//             key={`d${divisions}-${idx}`}\n//             className={`${bg} has-text-centered`}\n//             style={{\n//               justifyContent: \"center\",\n//               height:\n//                 70 /\n//                   Object.keys(beatDivisions).filter(\n//                     key => beatDivisions[key as any]\n//                   ).length -\n//                 marginTop,\n//               marginLeft,\n//               marginRight,\n//               marginTop\n//             }}\n//           >\n//             {divisionIdx === 0 && beatIdx + 1}\n//           </SigColumn>\n//         );\n//       })}\n//     </SigColumns>\n//   );\n// };\n\nconst Divisions = styled.section`\n  display: flex;\n  align-items: baseline;\n  > div {\n    margin-right: 10px;\n  }\n`;\n\nconst TimeSignature = ({ metronome }: Props) => {\n  const setSignature = React.useMemo(() => metronome.setSignature, [\n    metronome.setSignature\n  ]);\n  const activeBeats = React.useMemo(() => metronome.state.activeDivisions, [\n    metronome.state.activeDivisions\n  ]);\n  const numerator = React.useMemo(() => metronome.state.signature.numerator, [\n    metronome.state.signature.numerator\n  ]);\n\n  const [hasChanged, setHasChanged] = useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = useState<\n    t.EnabledDivisions\n  >(immutable.Map<t.Division, boolean>().set(1, true));\n  const setNumerator = useCallback(\n    (numerator: number) => {\n      setHasChanged(true);\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, numerator).map(() => uIenabledDivisions)\n        )\n      }));\n    },\n    [uIenabledDivisions, setSignature]\n  );\n\n  useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, old.numerator.size).map(() => uIenabledDivisions)\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old => {\n        const oldValue = old.get(divisionOption);\n        const newValue = oldValue === undefined ? true : !oldValue;\n        return old.set(divisionOption, newValue);\n      });\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = useCallback(() => {\n    setUiEnabledDivisions(immutable.Map<t.Division, boolean>().set(1, true));\n  }, [setUiEnabledDivisions]);\n\n  // TODO - make it where clicking on a division group lets you set the volume & accents for that group.\n  // TODO - add an option to turn on or off the accent at the start of every measure.\n  // TODO - clean up these buttons to not use className.\n  return (\n    <>\n      <section style={{ marginTop: \"10px\" }} className=\"section is-centered\" />\n      <Divisions>\n        <div className=\"is-size-5\">Division</div>\n        <Buttons hasAddons grow style={{ marginRight: \"5px\" }}>\n          {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => {\n            const on = uIenabledDivisions.get(num)!;\n            return (\n              <ToggleButton\n                grow\n                on={on}\n                isPrimary\n                key={`division-options-${num}`}\n                onClick={() => toggleDivisionOption(num)}\n              >\n                {num}\n              </ToggleButton>\n            );\n          })}\n        </Buttons>\n        <Button grow isDanger isOutlined onClick={clearDivisions}>\n          Clear\n        </Button>\n      </Divisions>\n      <Beats activeBeats={activeBeats} />\n\n      <section className=\"section buttons is-centered\">\n        {[1, 2, 3, 4, 5].map(num => {\n          const on = numerator.size === num;\n          return (\n            <ToggleButton\n              key={`numerator-button-${num}`}\n              on={on}\n              isPrimary\n              isOutlined\n              grow\n              onClick={on ? () => {} : () => setNumerator(num)}\n            >\n              <>{num}/4</>\n            </ToggleButton>\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\n// TODO - margin should be calculated based on number of divisions.\nconst BeatRowItemWrapper = styled.div`\n  width: 1px;\n  margin-left: 1px;\n  margin-right: 1px;\n  flex-grow: 1;\n`;\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatRowWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n`;\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`;\n\nconst BeatsWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 10px;\n`;\n\n// TODO - the selected division values should reset when you stop the metronome.\n// TODO - If not playing, this should show the boring gray background.\nconst BeatRowItem: React.FC<{\n  on: boolean;\n  beatRows: number;\n}> = ({ on, beatRows }) => {\n  const className = React.useMemo(() => {\n    return on ? \"has-background-primary\" : \"has-background-link\";\n  }, [on]);\n  const height = React.useMemo(() => {\n    return 70 / beatRows;\n  }, [beatRows]);\n  return (\n    <BeatRowItemWrapper\n      className={className}\n      style={{\n        height,\n        marginTop: 1\n      }}\n    />\n  );\n};\n\nconst BeatRow: React.FC<{\n  bools: immutable.List<boolean>;\n  divisions: t.Division;\n  beatNumber: number;\n  beatRows: number;\n  rowIndex: number;\n}> = ({ bools, beatNumber, rowIndex, beatRows }) => {\n  const j = rowIndex;\n  const index = beatNumber;\n  return (\n    <BeatRowWrapper key={`${index}-${j}`}>\n      {bools.map((on, itemIndex) => (\n        <BeatRowItem\n          beatRows={beatRows}\n          key={`${index}-${rowIndex}-${itemIndex}`}\n          on={on}\n        />\n      ))}\n    </BeatRowWrapper>\n  );\n};\n\nconst Beat: React.FC<{\n  beat: immutable.Map<t.Division, immutable.List<boolean>>;\n  index: number;\n}> = ({ beat, index }) => {\n  const things = beat.entrySeq();\n  return (\n    <BeatWrapper key={`${index}`}>\n      {things.map(([divisions, bools], rowIndex) => (\n        <BeatRow\n          beatRows={things.size || 0}\n          key={`${index}-${rowIndex}`}\n          divisions={divisions}\n          bools={bools}\n          beatNumber={index}\n          rowIndex={rowIndex}\n        />\n      ))}\n    </BeatWrapper>\n  );\n};\n\nconst Beats: React.FC<{\n  activeBeats: t.ActiveDivisonss;\n}> = ({ activeBeats }) => {\n  return (\n    <BeatsWrapper>\n      {activeBeats.map((beat, beatNumber) => (\n        <Beat key={beatNumber} beat={beat} index={beatNumber} />\n      ))}\n    </BeatsWrapper>\n  );\n};\n\nexport default TimeSignature;\n","import React from \"react\";\nimport * as immutable from \"immutable\";\n\nexport enum LocalStorageKey {\n  AppSettings = \"@mjh/k/app-settings-0\",\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db-1\",\n  ActiveBeats = \"@mjh/k/active-beats-2\",\n  TimeSignature = \"@mjh/k/signature-2\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\",\n  WakeLock = \"@mjh/k/wake-lock-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = {\n  [pitch: string]: {\n    [mode: string]: Scale;\n  };\n}; // Map<Pitch, Map<Mode, Scale>>;\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  divisionLength: number;\n  currentBeat: number;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type ActiveDivisions = immutable.Map<Division, immutable.List<boolean>>;\n\n// TODO - these names are sooo bad.\nexport type ActiveDivisonss = immutable.List<ActiveDivisions>;\n\nexport type EnabledDivisions = immutable.Map<Division, boolean>;\n\nexport type Numerator = immutable.List<EnabledDivisions>;\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: Numerator;\n}\n\nexport interface State {\n  ready: boolean;\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n  activeDivisions: ActiveDivisonss;\n}\n\ninterface AppSettingsState {\n  keepAwake: boolean;\n}\n\nexport interface AppSettings {\n  state: AppSettingsState;\n  toggleKeepAwake: () => void;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n  state: State;\n}\n","import React, { useState } from \"react\";\nimport * as R from \"ramda\";\nimport { Button } from \"./Common\";\n\ninterface Props {\n  setBPM: (bpm: number) => void;\n}\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn = ({ setBPM }: Props) => {\n  const [taps, setTaps] = useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return (\n    <Button isLink isOutlined onClick={onTap}>\n      Tap In\n    </Button>\n  );\n};\n\nexport default TapIn;\n","interface Constructable<T> {\n  new (): T;\n}\n\nexport const AudioContext: Constructable<AudioContext> | undefined =\n  (window as any).AudioContext || // Default\n  (window as any).webkitAudioContext || // Safari and old versions of Chrome\n  undefined;\n","import React, {\n  useState,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as polyfill from \"./polyfill\";\nimport * as t from \"./types\";\nimport NoSleep from \"nosleep.js\";\n\nexport const useSingleton = <T>(initialValue?: T) => {\n  const [value, setValue] = useState<T | undefined>(initialValue);\n\n  const setValueOnce = useCallback(\n    (t: T) => {\n      if (!value) {\n        setValue(t);\n      }\n    },\n    [value]\n  );\n\n  return {\n    value: value,\n    init: setValueOnce\n  };\n};\n\nexport const useSleepLock = () => {\n  const [noSleep] = useState(new NoSleep());\n\n  const lock = useCallback(() => {\n    noSleep.enable();\n  }, [noSleep]);\n\n  const release = useCallback(() => {\n    noSleep.disable();\n  }, [noSleep]);\n\n  return {\n    lock,\n    release\n  };\n};\n\n// TODO - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState(() => {\n    let firstValue;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = JSON.parse(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, JSON.stringify(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, JSON.stringify(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = useRef<any[]>(values);\n\n  useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: AudioContext | undefined,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = useState<AudioBuffer>();\n  useEffect(() => {\n    if (audioContext !== undefined) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nexport const useFixAudioContextForios = () => {\n  const [hasRun, setHasRun] = React.useState(false);\n\n  const fixAudioContext = useCallback(() => {\n    console.log(\"i fix\");\n    if (!polyfill.AudioContext) {\n      setHasRun(true);\n      return;\n    }\n    const audioContext = new polyfill.AudioContext();\n\n    // Create empty buffer\n    var buffer = audioContext.createBuffer(1, 1, 22050);\n    var source = audioContext.createBufferSource();\n    source.buffer = buffer;\n    // Connect to output (speakers)\n    source.connect(audioContext.destination);\n    // Play sound\n    const polySource = source as any;\n    if (polySource.start) {\n      polySource.start(0);\n    } else if (polySource.play) {\n      polySource.play(0);\n    } else if (polySource.noteOn) {\n      polySource.noteOn(0);\n    }\n    setHasRun(true);\n  }, [setHasRun]);\n\n  React.useEffect(() => {\n    if (hasRun) {\n      console.log(\"removing the listeners\");\n      document.removeEventListener(\"touchstart\", fixAudioContext);\n      document.removeEventListener(\"click\", fixAudioContext);\n      document.removeEventListener(\"touchend\", fixAudioContext);\n    } else {\n      console.log(\"adding the listeners\");\n      document.addEventListener(\"touchstart\", fixAudioContext);\n      document.addEventListener(\"click\", fixAudioContext);\n      document.addEventListener(\"touchend\", fixAudioContext);\n    }\n  }, [hasRun]);\n\n  return hasRun;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useToggle } from \"./hooks\";\nimport { ToggleButton, Buttons } from \"./Common\";\nimport styled from \"styled-components\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = () => {\n  const [on, toggleOn] = useToggle(false);\n  const [analyser, setAnalyser] = useState<AnalyserNode>();\n  const [sampleRate, setSampleRate] = useState<number>();\n  const [freq, setFreq] = useState<number>(440);\n  const [audioContext, setAudioContext] = useState<AudioContext>();\n\n  // Initailize the AudioContext when user turns on the tuner.\n  useEffect(() => {\n    if (!audioContext) {\n      setAudioContext(new AudioContext());\n    }\n  }, [on, audioContext]);\n\n  // Prompt for microphone when user turns on the tuner.\n  useEffect(() => {\n    if (on && audioContext) {\n      setSampleRate(audioContext.sampleRate);\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices) {\n        let mediaStream: MediaStream;\n        mediaDevices.getUserMedia({ audio: true }).then((ms: MediaStream) => {\n          mediaStream = ms;\n          const analyser = audioContext.createAnalyser();\n          // If this isn't big, I don't have very good frequency accuracy, and I\n          // can't change the sample rate because web audio sucks.\n          analyser.fftSize = 8192;\n          const mic = audioContext.createMediaStreamSource(ms);\n          mic.connect(analyser);\n          setAnalyser(analyser);\n        });\n        return () => {\n          mediaStream.getAudioTracks().forEach(track => track.stop());\n        };\n      }\n    }\n  }, [on, audioContext]);\n\n  useEffect(() => {\n    if (on && analyser && sampleRate) {\n      const tick = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Float32Array(bufferLength);\n        analyser.getFloatFrequencyData(dataArray);\n        const [, maxIdx] = dataArray.reduce(\n          (a, b, i) => (a[0] < b ? [b, i] : a),\n          [-Infinity, -1]\n        );\n        const resolution = sampleRate / analyser.fftSize;\n        const freq = resolution * maxIdx;\n        setFreq(freq);\n      };\n      tick();\n      let interval = setInterval(tick, 50);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [on, analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  // TODO - add in a graph of the FFT that's label with pitches and neato log bars.\n  return (\n    <TunerWrapper className=\"box has-text-centered\">\n      <div className=\"is-size-1\">{on ? note + octave : \"Stopped\"}</div>\n\n      <div>\n        {on ? (\n          <>\n            {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n          </>\n        ) : (\n          \"press start to tune\"\n        )}\n      </div>\n      <Buttons className=\"is-right\">\n        <ToggleButton on={on} isDanger offIsPrimary onClick={toggleOn}>\n          <>Stop</>\n          <>Start</>\n        </ToggleButton>\n      </Buttons>\n    </TunerWrapper>\n  );\n};\n\nconst TunerWrapper = styled.section`\n  margin-top: 10px;\n`;\n\nexport default Tuner;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport * as hooks from \"./hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"./types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Inner = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface Props {\n  initialValue: number;\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  initialValue,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [stateRadians, setRadians] = hooks.useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (initialValue * (Math.PI * 3)) / 2\n  );\n  const radiansRef = useRef(Math.PI);\n  useEffect(() => {\n    radiansRef.current = stateRadians;\n  }, [stateRadians]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const mouseDownRef = useRef(false);\n  useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = useState(0);\n  const totalDiffRef = useRef(0);\n  useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const knobContainer = useRef<HTMLDivElement>(null);\n\n  const onMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  }, []);\n\n  const onMouseUp = useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      const { clientX, clientY } = e;\n      const box = knobContainer.current!.getBoundingClientRect();\n\n      const boxCenter = {\n        x: box.left + box.width / 2,\n        y: box.top + box.height / 2\n      };\n      const y = -(boxCenter.y - clientY);\n      const x = -(boxCenter.x - clientX);\n      const newRadians = Math.atan2(y, x);\n      let diff = radiansRef.current - newRadians;\n      if (diff < -Math.PI) {\n        diff = -radiansRef.current - newRadians;\n      } else if (diff > Math.PI) {\n        diff = radiansRef.current - -newRadians;\n      }\n      if (diff !== 0) {\n        addToBuffer(diff);\n      }\n      const same = newRadians === radiansRef.current;\n      if (!same) {\n        setRadians(newRadians);\n      }\n    },\n    [addToBuffer, setRadians]\n  );\n\n  const onMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  const onTouchMove = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      const t = e.changedTouches;\n      const t0 = t[0];\n      moveKnob(t0);\n    },\n    [moveKnob]\n  );\n\n  const top = React.useMemo(\n    () =>\n      size / 2 +\n      Math.sin(stateRadians) * (size / 4) +\n      (Math.sin(stateRadians) * size) / 16 -\n      size / 6,\n    [stateRadians, size]\n  );\n  const left = React.useMemo(\n    () =>\n      size / 2 +\n      Math.cos(stateRadians) * (size / 4) +\n      (Math.cos(stateRadians) * size) / 16 -\n      size / 6,\n    [stateRadians, size]\n  );\n\n  return (\n    <Outer ref={knobContainer} className=\"has-background-primary\">\n      <Inner\n        className=\"has-background-info\"\n        onMouseDown={onMouseDown}\n        onTouchMove={onTouchMove}\n        style={{\n          top,\n          left\n        }}\n      />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport default InfiniKnob;\n","import React, { useEffect } from \"react\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport { usePersistantToggle, useSleepLock } from \"./hooks\";\nimport { Buttons, ToggleButton } from \"./Common\";\nimport * as t from \"./types\";\nimport styled from \"styled-components\";\n\nconst FullPage = styled.div`\n  margin: 0 !important;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  text-align: center;\n`;\n\ninterface MetronomeProps {\n  metronome: t.Metronome;\n  appSettings: t.AppSettings;\n}\nconst Metronome: React.FC<MetronomeProps> = ({ appSettings, metronome }) => {\n  const {\n    state: { keepAwake }\n  } = appSettings;\n  const [showTuner, toggleTuner] = usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n    false\n  );\n  const { lock, release } = useSleepLock();\n  const playing = React.useMemo(() => metronome.state.playing, [\n    metronome.state.playing\n  ]);\n  // TODO - I don't know if this is actually necessary or not.\n  const bpm = React.useMemo(() => metronome.state.bpm, [metronome.state.bpm]);\n  const ready = React.useMemo(() => metronome.state.ready, [\n    metronome.state.ready\n  ]);\n  const addBPM = React.useMemo(() => {\n    return metronome.addBPM;\n  }, [metronome.addBPM]);\n  const setBPM = React.useMemo(() => metronome.setBPM, [metronome.setBPM]);\n  const toggleStart = React.useMemo(() => metronome.toggleStart, [\n    metronome.toggleStart\n  ]);\n\n  useEffect(() => {\n    if (keepAwake && playing) {\n      lock();\n    } else {\n      release();\n    }\n  }, [playing, keepAwake, lock, release]);\n\n  return (\n    <>\n      {!ready && <FullPage>Tap to enable audio.</FullPage>}\n      {showTuner && <Tuner />}\n      <section className=\"section\">\n        <Dial initialValue={bpm} addDiff={addBPM}>\n          <div className=\"has-text-centered is-size-1\">{bpm}</div>\n          <TempoMarking bpm={bpm} />\n        </Dial>\n      </section>\n      <TimeSignature metronome={metronome} />\n      <section className=\"section\">\n        <Buttons hasAddons>\n          <ToggleButton\n            isLink\n            offIsOutlined\n            offIsLink\n            on={showTuner}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </ToggleButton>\n          <TapIn setBPM={setBPM} />\n          <ToggleButton\n            on={playing}\n            offIsPrimary\n            grow\n            isOutlined\n            isDanger\n            disabled={!ready}\n            onClick={toggleStart}\n          >\n            <>Stop</>\n            <>Start</>\n          </ToggleButton>\n        </Buttons>\n      </section>\n    </>\n  );\n};\nexport default Metronome;\n","import React from \"react\";\nimport * as t from \"./types\";\nimport styled from \"styled-components\";\n\ninterface SettingsProps {\n  appSettings: t.AppSettings;\n}\n\nconst SettingsWrapper = styled.section``;\n\nconst Settings: React.FC<SettingsProps> = ({ appSettings }) => {\n  const {\n    state: { keepAwake },\n    toggleKeepAwake\n  } = appSettings;\n  return (\n    <SettingsWrapper>\n      <h2 className=\"is-size-4\">Settings</h2>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              style={{ marginRight: \"5px\" }}\n              type=\"checkbox\"\n              checked={keepAwake}\n              onChange={toggleKeepAwake}\n            />\n            Keep screen on while metronome is running.\n          </label>\n        </div>\n      </div>\n    </SettingsWrapper>\n  );\n};\n\nexport default Settings;\n","import React, { useEffect, useState } from \"react\";\nimport TimeSignature from \"./TimeSignature\";\nimport { useLocalStorage, usePersistantToggle } from \"./hooks\";\nimport * as R from \"ramda\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport { Scale, Mode, ScalesDB, ScaleKey, scaleKeys } from \"./types\";\nimport * as t from \"./types\";\n\n// TODO make it where I always import * as t for types instead of pulling in the names.\n\nenum ScaleMode {\n  NOT_STARTED = \"Not Started\",\n  LEARNING = \"Learning\",\n  KNOWN = \"Known\"\n}\n\ninterface Props {\n  metronome: t.Metronome;\n}\n\nconst getScaleByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n): Scale | undefined => {\n  return getScalesByFilter(scalesDB, filter)[0];\n};\n\nconst getScalesByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n) => {\n  let scales: Scale[] = [];\n  Object.entries(scalesDB).forEach(([, lilMap]) => {\n    Object.entries(lilMap).forEach(([, scale]) => {\n      if (filter(scale)) {\n        scales.push(scale);\n      }\n    });\n  });\n  return scales;\n};\n\nconst initScalesDB = (): ScalesDB => {\n  const scalesDB: ScalesDB = {};\n  const scaleFor = (scaleKey: ScaleKey): Scale => ({\n    scaleKey,\n    pitch: scaleKey[0],\n    mode: scaleKey[1],\n    known: false,\n    learning: false,\n    bpm: 60\n  });\n\n  const addScale = (key: ScaleKey): void => {\n    const [pitch, mode] = key;\n    let pitchMap = scalesDB[pitch];\n    if (pitchMap === undefined) {\n      pitchMap = {};\n      scalesDB[pitch] = pitchMap;\n    }\n    pitchMap[mode] = scaleFor(key);\n  };\n  // TODO(me) - clean up scale names & add sharps.\n  // Major\n  for (const key of scaleKeys) {\n    addScale(key);\n  }\n  return scalesDB;\n};\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Buttons>\n        <ToggleButton on={known} isInfo onClick={toggleKnown}>\n          Known\n        </ToggleButton>\n        <ToggleButton on={learning} isLink onClick={toggleLearning}>\n          Learning\n        </ToggleButton>\n      </Buttons>\n    </div>\n  );\n};\nfunction shuffle<T>(a: Array<T>) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\ninterface LearnScalesProps {\n  scalesDB: ScalesDB;\n  addBPM: (s: Scale, n: number) => () => void;\n  reset: () => void;\n  scaleMode: ScaleMode;\n  metronome: t.Metronome;\n}\n\nconst LearnScales = ({\n  scalesDB,\n  addBPM,\n  reset,\n  scaleMode,\n  metronome,\n  metronome: { start }\n}: LearnScalesProps) => {\n  const [scaleKeys, setScales] = useState<Array<ScaleKey>>(() =>\n    shuffle(\n      getScalesByFilter(scalesDB, s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      }).map(({ scaleKey }) => scaleKey)\n    )\n  );\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScaleByFilter(\n    scalesDB,\n    (s: Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  useEffect(() => {\n    if (maybeScale !== undefined) {\n      start(maybeScale.bpm);\n    }\n  }, [maybeScale, start]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <>\n      <div className=\"box\">\n        <div\n          style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n          className=\"control is-expanded is-size-5\"\n        >\n          {scaleMode}\n        </div>\n        <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n          <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n            {pitch} {mode} @ {bpm}bpm\n          </div>\n          <Buttons grow hasAddons>\n            <Button isDanger isOutlined grow onClick={addBPM(scale, -10)}>\n              -10\n            </Button>\n            <Button isDanger isOutlined grow onClick={addBPM(scale, -1)}>\n              -\n            </Button>\n            <Button isPrimary isOutlined grow onClick={addBPM(scale, 1)}>\n              +\n            </Button>\n            <Button isPrimary isOutlined grow onClick={addBPM(scale, 10)}>\n              +10\n            </Button>\n          </Buttons>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button isDanger isOutlined onClick={reset}>\n            Stop\n          </Button>\n          <Button isPrimary onClick={nextScale}>\n            {nextScaleText}\n          </Button>\n        </div>\n      </div>\n      <TimeSignature metronome={metronome} />\n    </>\n  );\n};\n\n// TODO - Add a button to start learning a new scale. This will be a scale\n// that is know known and is not learning.\nconst Scales = ({ metronome }: Props) => {\n  const { stop: stopMetronome } = metronome;\n  const [scalesDB, setScalesDB] = useLocalStorage(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const [scaleMode, setScaleMode] = useState(ScaleMode.NOT_STARTED);\n\n  useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      stopMetronome();\n    }\n  }, [scaleMode, stopMetronome]);\n\n  const toggleLearning = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"learning\"]), R.not));\n  };\n\n  const toggleKnown = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"known\"]), R.not));\n  };\n\n  const [showKnown, toggleShowKnown] = usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  const addBPM = ({ pitch, mode }: Scale, n: number) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"bpm\"]), R.add(n)));\n  };\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Buttons>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.known) === undefined\n                }\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Button>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.learning) === undefined\n                }\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Button>\n            </Buttons>\n          </div>\n          <hr />\n\n          <Buttons>\n            <Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Button>\n          </Buttons>\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          addBPM={addBPM}\n          scalesDB={scalesDB}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n          metronome={metronome}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Buttons, Button, maxWidth } from \"./Common\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n`;\n\nconst UpdateStyle = styled.section`\n  position: absolute;\n  max-width: ${maxWidth};\n  width: 95%;\n  margin-top: 10px;\n  left: 0;\n  right: 0;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  z-index: 10;\n  display: flex !important;\n  justify-content: space-between;\n  animation: ease-in 1s ${rotate};\n`;\n\nlet hasRegistered = false;\nexport default () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  const reload = React.useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const close = React.useCallback(() => {\n    setUpdateAvailable(false);\n  }, []);\n\n  useEffect(() => {\n    if (!hasRegistered) {\n      serviceWorker.register({\n        onUpdate: () => {\n          setUpdateAvailable(true);\n        }\n      });\n    }\n    hasRegistered = true;\n  }, []);\n  return (\n    <>\n      {updateAvailable && (\n        <UpdateStyle className=\"box\">\n          <span>An Update is Available!</span>\n          <Buttons>\n            <Button isPrimary isOutlined onClick={reload}>\n              Refresh\n            </Button>\n            <Button isDanger isOutlined onClick={close}>\n              x\n            </Button>\n          </Buttons>\n        </UpdateStyle>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\n\nconst initSettings = (): t.AppSettings[\"state\"] => ({\n  keepAwake: false\n});\n\nexport const useAppSettings = (): t.AppSettings => {\n  const [state, setState] = hooks.useLocalStorage<t.AppSettings[\"state\"]>(\n    t.LocalStorageKey.AppSettings,\n    initSettings\n  );\n\n  const toggleKeepAwake = React.useCallback(() => {\n    setState(old => ({ ...old, keepAwake: !old.keepAwake }));\n  }, [setState]);\n\n  return {\n    state,\n    toggleKeepAwake\n  };\n};\n","export function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  // const now = audioContext.currentTime;\n  // if (timeToRun <= now) {\n  //   callback();\n  // } else {\n  //   const sleepTime = ((timeToRun - now) / 2) * 1000;\n  //   setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  // }\n  setTimeout(callback, (timeToRun - audioContext.currentTime) * 1000);\n};\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport {\n  useLocalStorage,\n  useAdvice,\n  useAudioBuffer,\n  useFixAudioContextForios\n} from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nimport * as immutable from \"immutable\";\nconst click = require(\"./click.wav\");\n\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer, pitch, currentBeat, divisionIndex }: t.Beat\n) => {\n  const isOne = currentBeat === 0 && divisionIndex === 0;\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n  sound.detune.value = isOne ? 0 : -pitch;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = isOne ? 1.0 : gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats: Array<t.Beat> = [];\n  divisions\n    .filter(a => a)\n    .forEach((_, divisionOption) => {\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const divisionLength = noteOffset;\n        const beat: t.Beat = {\n          time,\n          divisionLength,\n          pitch: 220,\n          gain: 1.0 * 0.5,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat\n        };\n        beats.push(beat);\n      }\n    });\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const first = beatsQueue.shift()!;\n    if (first.divisionIndex !== 0 || first.divisions === 1) {\n      scheduleNote(audioContext, first);\n    }\n    updateUi(audioContext, first);\n  }\n};\n\n// TODO - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  state: t.State,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const { bpm } = state;\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useScheduleAhead = (\n  audioContext: AudioContext | undefined,\n  state: t.State,\n  setActiveDivisions: React.Dispatch<\n    React.SetStateAction<immutable.List<t.ActiveDivisions>>\n  >\n) => {\n  const scheduleAhead = 0.3;\n  const { playing } = state;\n  const buffer = useAudioBuffer(audioContext, click);\n  const nextNoteTimeRef = useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  const stateRef = useRef<t.State>(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n\n  const [beatToSchedule, setBeatToSchedule] = useState<number>(0);\n  useEffect(() => {\n    if (!state.playing) {\n      setBeatToSchedule(0);\n    }\n  }, [state.playing]);\n\n  const beatToScheduleRef = useRef(beatToSchedule);\n  useEffect(() => {\n    beatToScheduleRef.current = beatToSchedule;\n  }, [beatToSchedule]);\n\n  const nextBeat = () => {\n    setBeatToSchedule(\n      old => (old + 1) % stateRef.current.signature.numerator.size\n    );\n  };\n\n  // TODO - this is super janky.\n  // TODO - this would be much nicer with an animation.\n  // TODO - switch this to runAtTime to clear the beat it just set.\n  // TODO - If the division changes, we should reset all active beats to false.\n  const setActiveBeat = useCallback(\n    (beat: t.Beat) => {\n      setActiveDivisions(\n        (oldActiveDivisions: immutable.List<t.ActiveDivisions>) => {\n          const old = oldActiveDivisions.getIn([\n            beat.currentBeat,\n            beat.divisions,\n            beat.divisionIndex\n          ]);\n          if (old === undefined) {\n            return oldActiveDivisions;\n          }\n          return oldActiveDivisions.setIn(\n            [beat.currentBeat, beat.divisions, beat.divisionIndex],\n            !old\n          );\n        }\n      );\n    },\n    [setActiveDivisions]\n  );\n\n  // TODO - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = useCallback(\n    (audioContext: AudioContext, beat: t.Beat) => {\n      // We ovewrite activeBeats here because it's definitely changing.\n      runAtTime(audioContext, beat.time, () => {\n        if (stateRef.current.playing) {\n          setActiveBeat(beat);\n        }\n      });\n    },\n    [setActiveBeat]\n  );\n\n  useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const {\n          signature: { numerator }\n        } = stateRef.current;\n        const beatIdx = Math.min(beatToScheduleRef.current, numerator.size - 1);\n        const currentBeat = numerator.get(beatIdx)!;\n\n        addBeatsToQueue(\n          stateRef.current,\n          nextNoteTimeRef,\n          currentBeat,\n          beatToScheduleRef.current,\n          audioContext.currentTime,\n          scheduleAhead,\n          buffer,\n          beatsQueue,\n          nextBeat\n        );\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [\n    delay,\n    buffer,\n    audioContext,\n    setActiveDivisions,\n    setActiveBeat,\n    updateUi\n  ]);\n};\n\nconst resetActiveBeats = (\n  beats: immutable.List<t.EnabledDivisions>\n): immutable.List<t.ActiveDivisions> =>\n  immutable.List(\n    beats.map((enabledDivisions: t.EnabledDivisions) =>\n      enabledDivisions.reduce((acc, b, d) => {\n        return b\n          ? acc.set(d, immutable.List(R.range(0, d).map(() => true)))\n          : acc;\n      }, immutable.Map<t.Division, immutable.List<boolean>>())\n    )\n  );\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\nconst defaultBeat = immutable.Map<t.Division, boolean>().set(1, true);\n\nexport const useMetronome = (\n  audioContext: AudioContext | undefined\n): t.Metronome => {\n  const hasFixed = useFixAudioContextForios();\n  const [playing, setPlaying] = useState(false);\n  const [bpm, setBPM] = useAdvice(\n    useLocalStorage(t.LocalStorageKey.BPM, 90),\n    clampBPM\n  );\n  const [signature, setSignature] = useState<t.TimeSignature>({\n    denominator: 4,\n    numerator: immutable.List([defaultBeat, defaultBeat, defaultBeat])\n  });\n  const [activeDivisions, setActiveDivisions] = useState(\n    resetActiveBeats(signature.numerator)\n  );\n  const state: t.State = {\n    bpm,\n    playing,\n    ready: hasFixed,\n    signature,\n    activeDivisions\n  };\n  const { numerator } = signature;\n\n  const bpmRef = useRef(bpm);\n  useEffect(() => {\n    bpmRef.current = bpm;\n  }, [bpm]);\n\n  // Effects for updating state.\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  useEffect(() => {\n    // TODO - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    setActiveDivisions(resetActiveBeats(numerator));\n  }, [numerator, signature, setActiveDivisions]);\n\n  useEffect(() => {\n    if (!playing) {\n      setActiveDivisions(resetActiveBeats(numerator));\n      setTimeout(() => {\n        setActiveDivisions(resetActiveBeats(numerator));\n      }, 300);\n    }\n  }, [playing, numerator, setActiveDivisions]);\n\n  useScheduleAhead(audioContext, state, setActiveDivisions);\n\n  // External API Things.\n  const addBPM = React.useCallback(\n    (bpmToAdd: number) => {\n      setBPM(R.add(bpmToAdd));\n    },\n    [setBPM]\n  );\n\n  const toggleStart = React.useCallback(() => setPlaying(R.not), [setPlaying]);\n\n  const start = useCallback(\n    (bpm?: number) => {\n      if (bpm !== undefined) {\n        setBPM(bpm);\n      }\n      setPlaying(true);\n    },\n    [setPlaying, setBPM]\n  );\n\n  const stop = useCallback(() => {\n    setPlaying(false);\n  }, [setPlaying]);\n\n  return {\n    toggleStart,\n    setSignature,\n    start,\n    stop,\n    setBPM,\n    addBPM,\n    state\n  };\n};\n","import React from \"react\";\nimport Metronome from \"./Metronome\";\nimport Settings from \"./Settings\";\nimport * as polyfill from \"./polyfill\";\nimport Scales from \"./Scales\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Update from \"./Update\";\nimport { useAppSettings } from \"./settings\";\nimport { useMetronome } from \"./metronome\";\nimport styled, { keyframes } from \"styled-components\";\nimport { maxWidth } from \"./Common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars as faCoffee,\n  faHome,\n  faCog as faGear,\n  faMusic\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useToggle, useSingleton, useFixAudioContextForios } from \"./hooks\";\n\nconst TopBarWrapper = styled.section`\n  margin-bottom: 10px;\n  margin-left: 0px !important;\n  margin-right: 0px !important;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CenterIcon = styled.span`\n  align-self: center;\n`;\n\nconst TopNav = styled.section`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  justify-content: space-between;\n  > h2 {\n    margin: 0 !important;\n  }\n`;\n\nconst dropDown = keyframes`\n  from {\nfont-size: 0px;\n  }\n`;\n\nconst NavDropDown = styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n  align-self: flex-end;\n  > a {\n    animation: ease-in 0.3s ${dropDown};\n    font-size: 1.5rem;\n  }\n`;\n\nconst NavItem = styled(Link)``;\n\nconst NavIcon = styled(FontAwesomeIcon)`\n  margin-left: 5px;\n`;\n\nconst TopBar = () => {\n  const [showNav, toggleNav] = useToggle(false);\n  // TODO - figure out how to animate the nav being hidden.\n  // TODO - make it where clicking outside of this element hides it.\n  // TODO - make it where you can swipe from the right of the screen to show the nav.\n  return (\n    <TopBarWrapper>\n      <TopNav className=\"has-background-primary has-text-light\">\n        <Link to=\"/\" className=\"has-text-white\">\n          <h2 className=\"is-size-4 is-bold\">(mjh)tronome</h2>\n        </Link>\n        <CenterIcon onClick={toggleNav}>\n          <FontAwesomeIcon icon={faCoffee} size=\"2x\" />\n        </CenterIcon>\n      </TopNav>\n      {showNav && (\n        <NavDropDown onClick={toggleNav}>\n          <NavItem to=\"/\">\n            Home\n            <NavIcon icon={faHome} />\n          </NavItem>\n          <NavItem to=\"/scales\">\n            Scales\n            <NavIcon icon={faMusic} />\n          </NavItem>\n          <NavItem to=\"/settings\">\n            Settings\n            <NavIcon icon={faGear} />\n          </NavItem>\n        </NavDropDown>\n      )}\n    </TopBarWrapper>\n  );\n};\n\nconst WrapperStyle = styled.div`\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  > * {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`;\n\nconst FooterStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  margin-top: 5px;\n`;\n\nconst Wrapper: React.FC = ({ children }) => {\n  return (\n    <WrapperStyle>\n      <Update />\n      <TopBar />\n      {children}\n      <FooterStyle>{`v${process.env.REACT_APP_VERSION}`}</FooterStyle>\n    </WrapperStyle>\n  );\n};\n\n// TODO - add an overall exception handler that prints the stacktrace.\n// TODO - add a button to the overall exception handler that lets you clear local storage.\n// TODO - add an option to the settings to clear local storage.\n// TODO - update components to use the React.FC type.\n\nconst App: React.FC = () => {\n  const appSettings = useAppSettings();\n  const { value: audioContext, init: initAudioContext } = useSingleton<\n    AudioContext\n  >();\n  const [hasAudioContext, setHasAudioContext] = React.useState(true);\n  const metronome = useMetronome(audioContext);\n\n  const playing = React.useMemo(() => metronome.state.playing, [\n    metronome.state.playing\n  ]);\n\n  // Initialize AudioContext as a singleton on first start.\n  React.useEffect(() => {\n    if (polyfill.AudioContext === undefined) {\n      setHasAudioContext(false);\n    } else if (playing) {\n      initAudioContext(new polyfill.AudioContext());\n    }\n  }, [playing, initAudioContext]);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Wrapper>\n        {!hasAudioContext && (\n          <div>\n            Your browser doesn't support the audioContext api, so this will not\n            work. Sorry :(\n          </div>\n        )}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Metronome metronome={metronome} appSettings={appSettings} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/scales\"\n          render={() => <Scales metronome={metronome} />}\n        />\n        <Route\n          exact\n          path=\"/settings\"\n          render={() => <Settings appSettings={appSettings} />}\n        />\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bulma-overrides.sass\";\n\nclass ErrorBoundary extends React.Component<{}, { error: any }> {\n  constructor(props: { error: any }) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Something went wrong</h1>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.name}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.message}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.stack}\n          </code>\n          <hr />\n          <code>{JSON.stringify(this.state.error, undefined, \"  \")}</code>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <ErrorBoundary>\n    <App />\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}