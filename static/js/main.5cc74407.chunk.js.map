{"version":3,"sources":["click.wav","types.ts","polyfill.ts","hooks.ts","util.ts","redux.ts","metronome.ts","components/TempoMarking.tsx","components/Common.tsx","components/TimeSignature.tsx","components/TapIn.tsx","components/Tuner.tsx","components/Dial.tsx","components/Metronome.tsx","components/Settings.tsx","components/Scales.tsx","scales.ts","serviceWorker.ts","components/Update.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","Mode","Pitch","defaultDivisionDetails","isActive","isAccented","defaultActiveDivision","immutable","defaultActiveBeat","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","F_Sharp","Minor","A_Sharp","D_Sharp","G_Sharp","AudioContext","window","webkitAudioContext","undefined","useLocalStorage","key","initialValue","override","arguments","length","_React$useState5","React","useState","firstValue","fromLocal","localStorage","getItem","Function","transit","setItem","_React$useState6","Object","slicedToArray","value","setValue","useCallback","valueAction","oldValue","newValue","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","R","useToggle","sideEffect","toggleState","_React$useState7","_React$useState8","old","ActionType","fromLocalStorage","defaultValue","toLocalStorage","click","require","scheduleNote","audioContext","_ref","time","gain","buffer","sound","createBufferSource","volume","createGain","connect","destination","start","lastTime","addBeatsToQueue","bpm","nextNoteTime","currentBeat","beatIdx","currentTime","scheduleAhead","beatsQueue","nextBeat","secondsPerBeat","divisions","current","beatsForNextMeasure","startOfBeatTime","beats","activeDeets","store","getState","activeBeats","filter","a","forEach","_","divisionOption","noteOffset","divisionIndex","get","t","beat","divisionLength","pitch","push","sort","b","beatsFor","apply","toConsumableArray","intervalError","useScheduleAhead","playing","redux","metronomeState","url","_React$useState9","_React$useState10","updateBuffer","useEffect","fetch","then","response","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","useRef","delay","beatToSchedule","signature","numerator","size","updateUi","timeToRun","callback","setTimeout","runAtTime","Deque","firstClickTime","tick","Math","min","intervalLength","scheduleTil","peekFront","first","shift","playBeatsTill","id","setInterval","clearInterval","resetActiveBeats","map","enabledDivisions","reduce","acc","d","set","useMetronome","s","setAccent","division","divisionIdx","action","setActiveBeats","update","dd","objectSpread","applyAction","toggleKeepAwake","setKeepAwake","dispatch","type","SetKeepAwake","setSignature","nextValue","util","TimeSignature","SetSignature","setPending","SetPending","setPlaying","SetPlaying","setBPM","clampBPM","BPM","SetBpm","addBPM","SetActiveBeats","resetActivebeats","metronome","updateActiveBeat","UpdateActiveBeats","toggleStart","stop","defaultBeat","defaultSignature","denominator","defaultStore","settings","AppSettings","keepAwake","ready","pending","getIn","c","startsWith","console","log","useSelector","selector","comparisonFn","reactRedux","markings","name","low","high","fromBPM","to","test","Marking","memo","_ref2","react_default","createElement","className","TempoMarking","_ref3","style","minHeight","_ref4","concat","_ref5","_ref6","nu","equals","Wrap","offProps","onProps","ToggleButton","on","props","objectWithoutProperties","renderProps","useMemo","toRemove","child","children","Array","Common_Button","Button","isPrimary","isDanger","isLink","isInfo","isSuccess","isOutlined","offIsPrimary","offIsDanger","offIsLink","offIsInfo","offIsSuccess","offIsOutlined","grow","propsClassName","classnames","is-primary","is-link","is-danger","is-info","is-success","is-outlined","is-grow","ButtonsWrapper","styled","div","_templateObject","Buttons","hasAddons","ref","has-addons","assign","DivisionsWrapper","section","TimeSignature_templateObject","Divisions","uiEnabledDivisions","toggleDivisionOption","clearDivisions","accentOne","_React$useState","_React$useState2","firstBeat","setFirstBeat","Common_ToggleButton","onClick","Common_Buttons","marginRight","num","Signature","setCurrentNumerator","currentNumerator","Fragment","BeatRowItemWrapper","_templateObject2","BeatRowWrapper","_templateObject3","BeatWrapper","_templateObject4","BeatsWrapper","_templateObject5","BeatRowItem","height","beatIndex","details","marginTop","BeatRow","Beat","keySeq","Beats","_React$useState3","_React$useState4","hasChanged","setHasChanged","_hooks$useLocalStorag","hooks","EnabledDivisions","_hooks$useLocalStorag2","uIenabledDivisions","setUiEnabledDivisions","calculateBPM","tapTimes","trunc","TapIn","taps","setTaps","now","performance","newTaps","tap","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","j","base","pow","centsPerOctave","frequency","octave","note","Tuner","_useToggle","_useToggle2","toggleOn","analyser","setAnalyser","sampleRate","setSampleRate","freq","setFreq","setAudioContext","polyfill","mediaStream","mediaDevices","navigator","getUserMedia","audio","ms","createAnalyser","fftSize","createMediaStreamSource","getAudioTracks","track","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","Infinity","maxIdx","resolution","interval","_freqToPitch","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","TunerWrapper","toFixed","Tuner_templateObject","Outer","Dial_templateObject","InnerWrapper","Dial_templateObject2","Inner","knobContainer","container","addDiff","Radians","PI","stateRadians","setRadians","radiansRef","onMouseDown","e","setMouseDown","preventDefault","mouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","onMouseUp","addToBuffer","diff","abs","oldDiff","moveKnob","clientX","clientY","box","getBoundingClientRect","boxCenter","x","left","width","y","top","newRadians","atan2","onTouchMove","t0","changedTouches","onMouseMove","uiRadians","_React$useState15","_React$useState16","debouncedValue","setDebouncedValue","valueRef","animationFrame","loop","requestAnimationFrame","cancelAnimationFrame","sin","cos","addEventListener","removeEventListener","ChildContainer","Dial_templateObject3","InfiniKnob","_ref2$size","setKnobContainer","Dial_Inner","FullPage","Metronome_templateObject","DialSection","Dial","Metronome_BPM","components_TempoMarking","Controls","showTuner","toggleTuner","components_TapIn","disabled","Metronome","_hooks$usePersistantT","ShowTuner","_hooks$usePersistantT2","components_Tuner","components_TimeSignature","ScaleMode","SettingsWrapper","Settings_templateObject","Settings","checked","onChange","initScalesDB","scalesDB","scaleKey","add","mode","known","learning","addScale","getScales","useScales","ScalesDB","setScalesDB","addScalePublic","Error","getScalePublic","getScale","getScalesPublic","localeCompare","scale","remove","toggleLearning","toggleKnown","ScalesGroup","_ref$scaleKey","LearnScales","scales","reset","scaleMode","floor","random","LEARNING","KNOWN","valueSeq","toArray","setScales","currentKey","maybeScale","nextScaleText","alignSelf","fontWeight","display","marginBottom","justifyContent","slice","Scales","NOT_STARTED","setScaleMode","ShowKnown","showKnown","toggleShowKnown","Scales_ScalesGroup","Scales_LearnScales","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","status","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","rotate","keyframes","Update_templateObject","UpdateStyle","Update_templateObject2","hasRegistered","Update","updateAvailable","setUpdateAvailable","close","TopBarWrapper","App_templateObject","CenterIcon","span","App_templateObject2","TopNav","App_templateObject3","dropDown","App_templateObject4","NavDropDown","nav","App_templateObject5","NavItem","Link","_templateObject6","NavIcon","FontAwesomeIcon","_templateObject7","TopBar","_hooks$useToggle","_hooks$useToggle2","showNav","toggleNav","react_router_dom","index_es","icon","faCoffee","faHome","faMusic","faGear","WrapperStyle","_templateObject8","FooterStyle","_templateObject9","Wrapper","App","_React$useState11","_React$useState12","audioContextRef","_React$useState13","_React$useState14","hasFixed","setHasFixed","fixAudioContext","resume","document","context","shouldSleep","NoSleep","noSleep","enable","disable","basename","react_router","exact","path","render","components_Metronome","components_Scales","components_Settings","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","message","stack","JSON","stringify","Component","ReactDOM","es","src_ErrorBoundary","components_App","getElementById"],"mappings":"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","file":"static/js/main.5cc74407.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\nimport * as immutable from \"immutable\";\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  divisionLength: number;\n  currentBeat: number;\n  isAccented: boolean;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\nexport interface DivisionDetails {\n  isActive: boolean;\n  isAccented: boolean;\n}\nexport const defaultDivisionDetails: DivisionDetails = {\n  isActive: false,\n  isAccented: false\n};\n\nexport type ActiveDivision = immutable.List<DivisionDetails>;\nexport const defaultActiveDivision: ActiveDivision = immutable.List();\n\nexport type ActiveBeat = immutable.Map<Division, ActiveDivision>;\nexport const defaultActiveBeat: ActiveBeat = immutable.Map();\n\nexport type ActiveBeats = immutable.List<ActiveBeat>;\nexport const defaultActiveBeats: ActiveBeats = immutable.List();\n\nexport type EnabledDivisions = immutable.Map<Division, boolean>;\n\nexport type Numerator = immutable.List<EnabledDivisions>;\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: Numerator;\n}\n\nexport interface MetronomeState {\n  ready: boolean;\n  pending: boolean;\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n}\n\nexport interface AppSettingsState {\n  keepAwake: boolean;\n}\n\nexport interface AppSettings {\n  state: AppSettingsState;\n  toggleKeepAwake: () => void;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n}\n\nexport type MAudioContext =\n  | AudioContext\n  | \"pending\"\n  | \"not-supported\"\n  | undefined;\n\nexport enum LocalStorageKey {\n  EnabledDivisions = \"@mjh/k/enabled-divisions-0\",\n  AppSettings = \"@mjh/k/app-settings-0\",\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db-2\",\n  ActiveBeats = \"@mjh/k/active-beats-2\",\n  TimeSignature = \"@mjh/k/signature-3\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\",\n  WakeLock = \"@mjh/k/wake-lock-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO: - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = immutable.Set<Scale>;\n\nexport interface Scales {\n  getScale: (filter: (s: Scale) => boolean) => Scale | undefined;\n  getScales: (filter: (s: Scale) => boolean) => ScalesDB;\n  addScale: (s: Scale) => void;\n  toggleLearning: (s: Scale) => void;\n  toggleKnown: (s: Scale) => void;\n  addBPM: (s: Scale, bpm: number) => void;\n}\n","interface Constructable<T> {\n  new (): T;\n}\n\nexport const AudioContext: Constructable<AudioContext> | undefined =\n  (window as any).AudioContext || // Default\n  (window as any).webkitAudioContext || // Safari and old versions of Chrome\n  undefined;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as polyfill from \"./polyfill\";\nimport * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\nimport NoSleep from \"nosleep.js\";\n\nexport const useSingleton = <T>(initialValue?: T) => {\n  const [value, setValue] = React.useState<T | undefined>(initialValue);\n\n  const setValueOnce = React.useCallback(\n    (t: T) => {\n      if (!value) {\n        setValue(t);\n      }\n    },\n    [value]\n  );\n\n  return {\n    value: value,\n    init: setValueOnce\n  };\n};\n\nexport const useSleepLock = (shouldSleep: boolean) => {\n  const [noSleep] = React.useState(new NoSleep());\n\n  React.useEffect(() => {\n    if (shouldSleep) {\n      noSleep.enable();\n    } else {\n      noSleep.disable();\n    }\n  }, [shouldSleep, noSleep]);\n};\n\n// TODO: - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = React.useState(() => {\n    let firstValue: T;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = transit.fromJSON(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, transit.toJSON(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = React.useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, transit.toJSON(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = React.useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = React.useState(initialValue);\n  const toggle = React.useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = React.useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = React.useRef<any[]>(values);\n\n  React.useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: t.MAudioContext,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = React.useState<AudioBuffer>();\n  React.useEffect(() => {\n    if (\n      // TODO: - refactor this out into a helper method if possible.\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\"\n    ) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nexport const useAudioContext = ():\n  | AudioContext\n  | undefined\n  | \"pending\"\n  | \"not-supported\" => {\n  const [audioContext, setAudioContext] = React.useState<\n    AudioContext | \"not-supported\" | \"pending\" | undefined\n  >();\n  const audioContextRef = React.useRef<AudioContext>();\n  const [hasFixed, setHasFixed] = React.useState(false);\n\n  const fixAudioContext = React.useCallback(() => {\n    if (!hasFixed) {\n      if (audioContextRef.current !== undefined) {\n        setAudioContext(\"pending\");\n        audioContextRef.current.resume().then(() => {\n          setHasFixed(true);\n          setAudioContext(audioContextRef.current);\n          document.removeEventListener(\"touchstart\", fixAudioContext);\n          document.removeEventListener(\"click\", fixAudioContext);\n          document.removeEventListener(\"touchend\", fixAudioContext);\n        });\n      }\n    }\n  }, [hasFixed, setHasFixed]);\n\n  React.useEffect(() => {\n    if (polyfill.AudioContext === undefined) {\n      setAudioContext(\"not-supported\");\n    } else {\n      const context = new polyfill.AudioContext();\n      audioContextRef.current = context;\n      if (context.state === \"suspended\") {\n        document.addEventListener(\"touchstart\", fixAudioContext);\n        document.addEventListener(\"click\", fixAudioContext);\n        document.addEventListener(\"touchend\", fixAudioContext);\n      } else {\n        setAudioContext(context);\n      }\n    }\n  }, [fixAudioContext]);\n\n  return audioContext;\n};\n\nexport const useAnimationFrameDebounce = <T>(value: T) => {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n  const valueRef = React.useRef<T>(value);\n\n  React.useEffect(() => {\n    valueRef.current = value;\n  }, [value]);\n\n  React.useEffect(() => {\n    let animationFrame = -1;\n\n    const tick = () => {\n      loop();\n      setDebouncedValue(valueRef.current);\n    };\n\n    const loop = () => {\n      animationFrame = requestAnimationFrame(tick);\n    };\n    loop();\n\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, []);\n\n  return debouncedValue;\n};\n","import * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\n\nexport function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\n// TODO: - I might be able to overload this so it's actually typesafe by making\n// the return type dependant on a key literal.\nexport const fromLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  defaultValue: T\n): T => {\n  const fromLocal = localStorage.getItem(key);\n  if (fromLocal === null) {\n    return defaultValue;\n  } else {\n    return transit.fromJSON(fromLocal);\n  }\n};\n\nexport const toLocalStorage = <T>(key: t.LocalStorageKey, value: T) => {\n  localStorage.setItem(key, transit.toJSON(value));\n};\n\nexport const shuffle = <T>(a: Array<T>) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n};\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  // const now = audioContext.currentTime;\n  // if (timeToRun <= now) {\n  //   callback();\n  // } else {\n  //   const sleepTime = ((timeToRun - now) / 2) * 1000;\n  //   setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  // }\n  setTimeout(callback, (timeToRun - audioContext.currentTime) * 1000);\n};\n","import * as redux from \"redux\";\nimport * as t from \"./types\";\nimport * as immutable from \"immutable\";\nimport * as reactRedux from \"react-redux\";\nimport * as R from \"ramda\";\nimport * as metronome from \"./metronome\";\nimport * as util from \"./util\";\n\n// TODO: these should live in types.\nexport enum ActionType {\n  UpdateActiveBeats,\n  SetActiveBeats,\n  SetSignature,\n  SetPending,\n  SetPlaying,\n  SetKeepAwake,\n  SetBpm\n}\n\ntype RSA<T> = React.SetStateAction<T>;\nexport type Action =\n  // TODO: update the other types to use action & RSA\n  | { type: ActionType.UpdateActiveBeats; value: t.Beat }\n  | { type: ActionType.SetActiveBeats; action: RSA<t.ActiveBeats> }\n  | { type: ActionType.SetPending; action: RSA<boolean> }\n  | { type: ActionType.SetPlaying; action: RSA<boolean> }\n  | { type: ActionType.SetBpm; action: RSA<number> }\n  | { type: ActionType.SetKeepAwake; action: RSA<boolean> }\n  | { type: ActionType.SetSignature; action: RSA<t.TimeSignature> };\n\nexport interface ReduxState {\n  activeBeats: t.ActiveBeats;\n  metronomeState: t.MetronomeState;\n  settings: t.AppSettingsState;\n}\n\nexport const setAccent = (\n  beatIdx: number,\n  division: t.Division,\n  divisionIdx: number,\n  action: RSA<boolean>\n) => {\n  setActiveBeats(old =>\n    old.update(beatIdx, a => {\n      return a.update(division, d => {\n        return d.update(divisionIdx, dd => {\n          return { ...dd, isAccented: applyAction(action, dd.isAccented) };\n        });\n      });\n    })\n  );\n};\n\nexport const toggleAccent = (\n  beatIdx: number,\n  division: t.Division,\n  divisionIdx: number\n) => {\n  setAccent(beatIdx, division, divisionIdx, a => !a);\n};\n\nexport const toggleKeepAwake = () => {\n  setKeepAwake(old => !old);\n};\n\nconst setKeepAwake = (action: React.SetStateAction<boolean>) => {\n  store.dispatch({ type: ActionType.SetKeepAwake, action });\n};\n\nexport const setSignature = (action: React.SetStateAction<t.TimeSignature>) => {\n  // TODO: - figure out a cleaner way to manage this.\n  const nextValue =\n    action instanceof Function\n      ? action(store.getState().metronomeState.signature)\n      : action;\n  util.toLocalStorage(t.LocalStorageKey.TimeSignature, nextValue);\n  store.dispatch({ type: ActionType.SetSignature, action: nextValue });\n};\n\nexport const setPending = (action: RSA<boolean>) => {\n  store.dispatch({ type: ActionType.SetPending, action });\n};\n\nexport const setPlaying = (action: React.SetStateAction<boolean>) => {\n  store.dispatch({ type: ActionType.SetPlaying, action });\n};\n\nexport const setBPM = (action: React.SetStateAction<number>) => {\n  // TODO: - figure out a cleaner way to manage this.\n  const nextValue = clampBPM(\n    action instanceof Function\n      ? action(store.getState().metronomeState.bpm)\n      : action\n  );\n  util.toLocalStorage(t.LocalStorageKey.BPM, nextValue);\n  store.dispatch({ type: ActionType.SetBpm, action: nextValue });\n};\n\nexport const addBPM = (action: number) => {\n  setBPM(old => old + action);\n};\n\nexport const setActiveBeats = (action: RSA<t.ActiveBeats>) => {\n  store.dispatch({\n    type: ActionType.SetActiveBeats,\n    action\n  });\n};\n\nexport const resetActivebeats = () => {\n  setActiveBeats(\n    metronome.resetActiveBeats(\n      store.getState().metronomeState.signature.numerator\n    )\n  );\n};\n\nexport const updateActiveBeat = (beat: t.Beat) => {\n  store.dispatch({\n    type: ActionType.UpdateActiveBeats,\n    value: beat\n  });\n};\n\nexport const toggleStart = () => {\n  setPlaying(a => !a);\n};\n\nexport const start = (bpm?: number) => {\n  if (bpm !== undefined) {\n    setBPM(bpm);\n  }\n  setPlaying(true);\n};\nexport const stop = () => {\n  setPlaying(false);\n};\n\nconst defaultBeat = immutable.Map<t.Division, boolean>().set(1, true);\n\nconst defaultSignature = util.fromLocalStorage(\n  t.LocalStorageKey.TimeSignature,\n  {\n    denominator: 4,\n    numerator: immutable.List([\n      defaultBeat,\n      defaultBeat,\n      defaultBeat,\n      defaultBeat\n    ])\n  }\n);\n\nconst defaultStore = {\n  activeBeats: metronome.resetActiveBeats(defaultSignature.numerator),\n  settings: util.fromLocalStorage(t.LocalStorageKey.AppSettings, {\n    keepAwake: false\n  }),\n  metronomeState: {\n    ready: false,\n    pending: true,\n    bpm: util.fromLocalStorage(t.LocalStorageKey.BPM, 60),\n    playing: false,\n    signature: defaultSignature\n  }\n};\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\nconst applyAction = <T>(action: RSA<T>, current: T) => {\n  return action instanceof Function ? action(current) : action;\n};\n\n// TODO: - figure out how to add a local storage thing for hydration???\n// TODO: use applyAction for the rest of these.\nconst rootReducer = (\n  store: ReduxState = defaultStore,\n  action: Action\n): ReduxState => {\n  switch (action.type) {\n    case ActionType.SetActiveBeats:\n      return {\n        ...store,\n        activeBeats: applyAction(action.action, store.activeBeats)\n      };\n    case ActionType.SetKeepAwake:\n      return {\n        ...store,\n        settings: {\n          ...store.settings,\n          keepAwake: applyAction(action.action, store.settings.keepAwake)\n        }\n      };\n    case ActionType.UpdateActiveBeats:\n      const beat = action.value;\n      const old = store.activeBeats.getIn([\n        beat.currentBeat,\n        beat.divisions,\n        beat.divisionIndex\n      ]);\n      if (old === undefined) {\n        return store;\n      }\n      return {\n        ...store,\n        activeBeats: store.activeBeats.update(beat.currentBeat, a => {\n          return a.update(beat.divisions, b => {\n            return b.update(beat.divisionIndex, c => {\n              return { ...c, isActive: !c.isActive };\n            });\n          });\n        })\n      };\n    case ActionType.SetSignature:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          signature:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.signature)\n              : action.action\n        }\n      };\n    case ActionType.SetPending:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          pending:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.pending)\n              : action.action\n        }\n      };\n    case ActionType.SetPlaying:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          playing:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.playing)\n              : action.action\n        }\n      };\n    case ActionType.SetBpm:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          bpm:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.bpm)\n              : action.action\n        }\n      };\n    default:\n      // @ts-ignore - It's too smart for us here, but this is safe.\n      if (!(action.type as any).startsWith(\"@@redux\")) {\n        console.log(action, \"was not handled\");\n      }\n      return store;\n  }\n};\n\nexport const store = redux.createStore(rootReducer);\n\n// TODO: - once this hook is standardized, update to use it directly.\nexport const useSelector = <T>(\n  selector: (state: ReduxState) => T,\n  comparisonFn?: (t1: T, t2: T) => boolean\n): T => {\n  return (reactRedux as any).useSelector(selector, comparisonFn);\n};\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport { useAudioBuffer } from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"./redux\";\nimport { store } from \"./redux\";\n\nconst click = require(\"./click.wav\");\n\n// TODO - instead of scheduling a t.Beat, I think I should schedule a\n// t.DivisionDetails\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer }: t.Beat\n) => {\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats: Array<t.Beat> = [];\n  const activeDeets: t.ActiveBeats = store.getState().activeBeats;\n  divisions\n    .filter(a => a)\n    .forEach((_, divisionOption) => {\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const { isAccented } = activeDeets\n          .get(currentBeat, t.defaultActiveBeat)\n          .get(divisionOption, t.defaultActiveDivision)\n          .get(divisionIndex, t.defaultDivisionDetails);\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const divisionLength = noteOffset;\n        const gain = isAccented ? 1.0 : 0.1 * 1.0;\n        const beat: t.Beat = {\n          time,\n          divisionLength,\n          pitch: 220,\n          gain,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat,\n          isAccented\n        };\n        beats.push(beat);\n      }\n    });\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nlet lastTime = -1;\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const first = beatsQueue.shift()!;\n    // Since the beats are sorted by time in the queue, we can use this trick to\n    // only schedule one for each click.\n    // TODO:: This does mean that if we have a custotm sound for each division, it could be messy on one.\n    if (first.time !== lastTime || first.isAccented) {\n      scheduleNote(audioContext, first);\n    }\n    lastTime = first.time;\n    updateUi(audioContext, first);\n  }\n};\n\n// TODO: - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  bpm: number,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useScheduleAhead = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const buffer = useAudioBuffer(audioContext, click);\n\n  const scheduleAhead = 0.3;\n  const nextNoteTimeRef = React.useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  // TODO: this should probably be updated when the numerator changes.\n  const beatToSchedule = React.useRef(0);\n  React.useEffect(() => {\n    if (!playing) {\n      beatToSchedule.current = 0;\n    }\n  }, [playing]);\n\n  const nextBeat = React.useCallback(() => {\n    let old = beatToSchedule.current;\n    beatToSchedule.current =\n      (old + 1) % store.getState().metronomeState.signature.numerator.size;\n  }, []);\n\n  // TODO: - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = React.useCallback(\n    (audioContext: AudioContext, beat: t.Beat) => {\n      // We ovewrite activeBeats here because it's definitely changing.\n      runAtTime(audioContext, beat.time, () => {\n        if (store.getState().metronomeState.playing) {\n          // TODO: - this is super janky.\n          // TODO: - this would be much nicer with an animation.\n          // TODO: - switch this to runAtTime to clear the beat it just set.\n          // TODO: - If the division changes, we should reset all active beats to false.\n          redux.updateActiveBeat(beat);\n        }\n      });\n    },\n    []\n  );\n\n  React.useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\" &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const numerator = store.getState().metronomeState.signature.numerator;\n        const beatIdx = Math.min(beatToSchedule.current, numerator.size - 1);\n        const currentBeat = numerator.get(beatIdx);\n        if (currentBeat !== undefined) {\n          addBeatsToQueue(\n            store.getState().metronomeState.bpm,\n            nextNoteTimeRef,\n            currentBeat,\n            beatToSchedule.current,\n            audioContext.currentTime,\n            scheduleAhead,\n            buffer,\n            beatsQueue,\n            nextBeat\n          );\n        }\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay, buffer, audioContext, updateUi, nextBeat]);\n};\n\nexport const resetActiveBeats = (\n  beats: immutable.List<t.EnabledDivisions>\n): immutable.List<t.ActiveBeat> =>\n  immutable.List(\n    beats.map((enabledDivisions: t.EnabledDivisions) =>\n      enabledDivisions.reduce((acc, b, d) => {\n        return b\n          ? acc.set(\n              d,\n              immutable.List(\n                R.range(0, d).map(() => ({ isActive: true, isAccented: false }))\n              )\n            )\n          : acc;\n      }, immutable.Map<t.Division, t.ActiveDivision>())\n    )\n  );\n\nconst useMetronome = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(s => s.metronomeState.playing);\n\n  // If the component using this hook unmounts, we need to stop the metronome.\n  React.useEffect(() => {\n    if (playing) {\n      return () => {\n        redux.stop();\n      };\n    }\n  }, [playing]);\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  const numerator = redux.useSelector(\n    s => s.metronomeState.signature.numerator\n  );\n  React.useEffect(() => {\n    // TODO: - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    redux.resetActivebeats();\n  }, [numerator]);\n\n  // If the metronome stops playing, we should reset the active beats.\n  React.useEffect(() => {\n    if (!playing) {\n      redux.resetActivebeats();\n    }\n  }, [playing]);\n\n  // Once the audio context is ready, set pending to false.\n  React.useEffect(() => {\n    if (audioContext !== \"pending\" && audioContext !== undefined) {\n      redux.setPending(false);\n    }\n  }, [audioContext]);\n\n  useScheduleAhead(audioContext);\n};\nexport default useMetronome;\n","import React from \"react\";\nimport * as immutable from \"immutable\";\nimport * as R from \"ramda\";\nimport * as redux from \"../redux\";\n\ninterface Marking {\n  high: number;\n  low: number;\n  name: string;\n}\n\nexport const markings: immutable.List<Marking> = immutable.List([\n  { name: \"Larghissimo\", low: 0, high: 24 },\n  { name: \"Grave\", low: 25, high: 45 },\n  { name: \"Largo\", low: 40, high: 60 },\n  { name: \"Lento\", low: 45, high: 60 },\n  { name: \"Larghetto\", low: 60, high: 66 },\n  { name: \"Adagio\", low: 66, high: 76 },\n  { name: \"Andante\", low: 76, high: 108 },\n  { name: \"Marcia moderato\", low: 83, high: 85 },\n  { name: \"Andante moderato\", low: 92, high: 112 },\n  { name: \"Moderato\", low: 108, high: 120 },\n  { name: \"Allegro\", low: 120, high: 156 },\n  { name: \"Vivace\", low: 156, high: 176 },\n  { name: \"Vivacissimo\", low: 172, high: 176 },\n  { name: \"Allegrissimo\", low: 172, high: 176 },\n  { name: \"Presto\", low: 168, high: 200 },\n  { name: \"Prestissimo\", low: 200, high: 250 }\n]);\n\nconst inRange = (to: number, from: number, test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = R.memoizeWith(\n  a => \"\" + a,\n  (bpm: number): immutable.List<Marking> =>\n    markings.filter(({ high, low }) => inRange(high, low, bpm))\n);\n\ninterface MarkingProps {\n  name: string;\n  low: number;\n  high: number;\n}\n\nconst Marking: React.FC<MarkingProps> = React.memo(({ name, low, high }) => {\n  return (\n    <div className=\"has-text-centered\">\n      {name} - {low} - {high}\n    </div>\n  );\n});\n\nconst TempoMarking = React.memo(\n  ({ bpm }: { bpm: number }) => {\n    const markings = fromBPM(bpm);\n    return (\n      <div style={{ minHeight: \"6.5em\" }}>\n        {markings.map(({ name, high, low }) => (\n          <Marking key={`marking-${name}`} name={name} high={high} low={low} />\n        ))}\n      </div>\n    );\n  },\n  ({ bpm: old }, { bpm: nu }) => fromBPM(old).equals(fromBPM(nu))\n);\n\nconst Wrap = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <TempoMarking bpm={bpm} />;\n};\n\nexport default Wrap;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\n\nexport const maxWidth = \"40em\";\n\ntype ReactButton = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\ninterface ButtonProps extends ReactButton {\n  primary?: true;\n  isPrimary?: true;\n  isLink?: true;\n  isInfo?: true;\n  isSuccess?: true;\n  isDanger?: true;\n  isOutlined?: true;\n  offIsPrimary?: true;\n  offIsLink?: true;\n  offIsInfo?: true;\n  offIsSuccess?: true;\n  offIsDanger?: true;\n  offIsOutlined?: true;\n  grow?: true;\n}\n\ninterface ToggleButtonProps extends ButtonProps {\n  on: boolean;\n}\n\nconst offProps = [\n  \"offIsPrimary\",\n  \"offIsLink\",\n  \"offIsDanger\",\n  \"offIsInfo\",\n  \"offIsSuccess\",\n  \"offIsOutlined\"\n];\nconst onProps = [\n  \"isPrimary\",\n  \"isLink\",\n  \"isDanger\",\n  \"isInfo\",\n  \"isSuccess\",\n  \"isOutlined\"\n];\n\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({ on, ...props }) => {\n  const renderProps = React.useMemo(() => {\n    const toRemove = on ? offProps : onProps;\n    return R.omit(toRemove, props);\n  }, [on, props]);\n\n  const child = React.useMemo(\n    () =>\n      props.children instanceof Array && props.children.length === 2\n        ? on\n          ? props.children[0]\n          : props.children[1]\n        : props.children,\n    [props, on]\n  );\n  return <Button {...renderProps}>{child}</Button>;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  isPrimary,\n  isDanger,\n  isLink,\n  isInfo,\n  isSuccess,\n  isOutlined,\n  offIsPrimary,\n  offIsDanger,\n  offIsLink,\n  offIsInfo,\n  offIsSuccess,\n  offIsOutlined,\n  grow,\n  className: propsClassName,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(\"button\", propsClassName, {\n        \"is-primary\": isPrimary || offIsPrimary,\n        \"is-link\": isLink || offIsLink,\n        \"is-danger\": isDanger || offIsDanger,\n        \"is-info\": isInfo || offIsInfo,\n        \"is-success\": isSuccess || offIsSuccess,\n        \"is-outlined\": isOutlined || offIsOutlined,\n        \"is-grow\": grow\n      }),\n    [\n      propsClassName,\n      grow,\n      isPrimary,\n      offIsPrimary,\n      isLink,\n      offIsLink,\n      isDanger,\n      offIsDanger,\n      isInfo,\n      offIsInfo,\n      isOutlined,\n      offIsOutlined,\n      isSuccess,\n      offIsSuccess\n    ]\n  );\n  const renderProps = React.useMemo(() => {\n    return { ...props, className };\n  }, [props, className]);\n\n  return <button {...renderProps}>{props.children}</button>;\n};\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hasAddons?: true;\n  grow?: true | undefined;\n}\n\nconst ButtonsWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0 !important;\n  }\n`;\n\nexport const Buttons: React.FC<ButtonsProps> = ({\n  children,\n  hasAddons,\n  ref,\n  className: propsClassName,\n  grow,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(propsClassName, \"buttons\", {\n        \"has-addons\": hasAddons,\n        \"is-grow\": grow\n      }),\n    [hasAddons, grow, propsClassName]\n  );\n  return (\n    <ButtonsWrapper ref={ref as any} {...props} className={className}>\n      {children}\n    </ButtonsWrapper>\n  );\n};\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport * as Common from \"./Common\";\nimport * as hooks from \"../hooks\";\nimport * as t from \"../types\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"../redux\";\n\ninterface DivisionsProps {\n  uiEnabledDivisions: t.EnabledDivisions;\n  toggleDivisionOption: (option: t.Division) => void;\n  clearDivisions: () => void;\n}\n\nconst DivisionsWrapper = React.memo(styled.section`\n  display: flex;\n  align-items: baseline;\n  > button {\n    margin-right: 5px;\n  }\n  > div {\n    margin-right: 5px;\n  }\n`);\n\nconst Divisions: React.FC<DivisionsProps> = React.memo(\n  ({ uiEnabledDivisions, toggleDivisionOption, clearDivisions }) => {\n    // TODO: I could write typed helpers for trying to navigate down the\n    // a.activeBeats.\n    const accentOne = redux.useSelector(\n      a =>\n        (a.activeBeats.getIn(\n          // This should really always work since there should always beat a 1 division, and at least 1 beat.\n          [0, 1, 0],\n          t.defaultDivisionDetails\n        ) as t.DivisionDetails).isAccented\n    );\n    const [firstBeat, setFirstBeat] = React.useState(accentOne);\n\n    // Keep the activeDivision state & this button in sync.\n    React.useEffect(() => {\n      if (accentOne !== firstBeat) {\n        setFirstBeat(accentOne);\n      }\n    }, [accentOne]);\n    React.useEffect(() => {\n      redux.setAccent(0, 1, 0, firstBeat);\n    }, [firstBeat]);\n\n    return (\n      <DivisionsWrapper>\n        <div className=\"is-size-5\">Division</div>\n        <Common.ToggleButton\n          isLink\n          on={firstBeat}\n          onClick={() => setFirstBeat(a => !a)}\n        >\n          {\">\"}\n        </Common.ToggleButton>\n        <Common.Buttons hasAddons grow style={{ marginRight: \"5px\" }}>\n          {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => {\n            const on = uiEnabledDivisions.get(num)!;\n            return (\n              <Common.ToggleButton\n                grow\n                on={on}\n                isPrimary\n                key={`division-options-${num}`}\n                onClick={() => toggleDivisionOption(num)}\n              >\n                {num}\n              </Common.ToggleButton>\n            );\n          })}\n        </Common.Buttons>\n        <Common.Button grow isDanger isOutlined onClick={clearDivisions}>\n          Clear\n        </Common.Button>\n      </DivisionsWrapper>\n    );\n  }\n);\n\nconst TimeSignature = () => {\n  const setSignature = redux.setSignature;\n  const numerator = redux.useSelector(\n    a => a.metronomeState.signature.numerator\n  );\n\n  const [hasChanged, setHasChanged] = React.useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = hooks.useLocalStorage<\n    t.EnabledDivisions\n  >(\n    t.LocalStorageKey.EnabledDivisions,\n    immutable.Map<t.Division, boolean>().set(1, true)\n  );\n\n  React.useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, old.numerator.size).map(() => uIenabledDivisions)\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = React.useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old => {\n        const oldValue = old.get(divisionOption);\n        const newValue = oldValue === undefined ? true : !oldValue;\n        return old.set(divisionOption, newValue);\n      });\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = React.useCallback(() => {\n    setUiEnabledDivisions(immutable.Map<t.Division, boolean>().set(1, true));\n  }, [setUiEnabledDivisions]);\n\n  // TODO: - make it where clicking on a division group lets you set the volume & accents for that group.\n  // TODO: - add an option to turn on or off the accent at the start of every measure.\n  // TODO: - clean up these buttons to not use className.\n\n  const [currentNumerator, setCurrentNumerator] = React.useState(\n    numerator.size\n  );\n\n  React.useEffect(() => {\n    setSignature(old => ({\n      ...old,\n      numerator: immutable.List(\n        R.range(0, currentNumerator).map(() => uIenabledDivisions)\n      )\n    }));\n  }, [currentNumerator, setSignature, uIenabledDivisions]);\n\n  return (\n    <>\n      <Beats />\n      <Divisions\n        uiEnabledDivisions={uIenabledDivisions}\n        toggleDivisionOption={toggleDivisionOption}\n        clearDivisions={clearDivisions}\n      />\n      <Signature\n        currentNumerator={numerator.size}\n        setCurrentNumerator={setCurrentNumerator}\n      />\n    </>\n  );\n};\n\ninterface SignatureProps {\n  setCurrentNumerator: (numerator: number) => void;\n  currentNumerator: number;\n}\n\nconst Signature: React.FC<SignatureProps> = React.memo(\n  ({ setCurrentNumerator, currentNumerator }) => {\n    return (\n      <section className=\"section buttons is-centered\">\n        {[1, 2, 3, 4, 5].map(num => {\n          const on = currentNumerator === num;\n          return (\n            <Common.ToggleButton\n              key={`numerator-button-${num}`}\n              on={on}\n              isPrimary\n              isOutlined\n              grow\n              onClick={on ? () => {} : () => setCurrentNumerator(num)}\n            >\n              <>{num}/4</>\n            </Common.ToggleButton>\n          );\n        })}\n      </section>\n    );\n  }\n);\n\nconst BeatRowItemWrapper = React.memo(styled.div`\n  width: 1px;\n  margin-left: 1px;\n  margin-right: 1px;\n  flex-grow: 1;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`);\n\nconst BeatRowWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n`);\n\nconst BeatWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`);\n\nconst BeatsWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 10px;\n`);\n\n// TODO: - the selected division values should reset when you stop the metronome.\n// TODO: - If not playing, this should show the boring gray background.\n// TODO: - Resetting the beats should not reset the chosen accents.\nconst BeatRowItem: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  divisionIndex: number;\n  height: number;\n}> = React.memo(({ height, beatIndex, division, divisionIndex }) => {\n  const details = redux.useSelector(\n    a =>\n      a.activeBeats\n        .get(beatIndex)!\n        .get(division)!\n        .get(divisionIndex)!\n  );\n  const className = React.useMemo(() => {\n    return details.isActive ? \"has-background-primary\" : \"has-background-link\";\n  }, [details.isActive]);\n  return (\n    <BeatRowItemWrapper\n      className={className}\n      onClick={() => redux.toggleAccent(beatIndex, division, divisionIndex)}\n      style={{\n        height,\n        marginTop: 1\n      }}\n    >\n      <div>{details.isAccented && \">\"}</div>\n    </BeatRowItemWrapper>\n  );\n});\n\nconst BeatRow: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  height: number;\n}> = React.memo(({ height, beatIndex, division }) => {\n  return (\n    <BeatRowWrapper>\n      {R.range(0, division).map(divisionIndex => (\n        <BeatRowItem\n          key={`${beatIndex}-${division}-${divisionIndex}`}\n          height={height}\n          beatIndex={beatIndex}\n          division={division}\n          divisionIndex={divisionIndex}\n        />\n      ))}\n    </BeatRowWrapper>\n  );\n});\n\nconst Beat: React.FC<{\n  beatIndex: number;\n}> = React.memo(({ beatIndex }) => {\n  const divisions = redux.useSelector(\n    a => a.activeBeats.get(beatIndex)!.keySeq(),\n    (a, b) => a.equals(b)\n  );\n  return (\n    <BeatWrapper key={`${beatIndex}`}>\n      {divisions.map(division => (\n        <BeatRow\n          height={70 / divisions.size!}\n          key={`${beatIndex}-${division}`}\n          beatIndex={beatIndex}\n          division={division}\n        />\n      ))}\n    </BeatWrapper>\n  );\n});\n\n// TODO: - make it where you can click and drag on the visual subdivision to\n// change the volume and double tap to change it's color and also make it an\n// accent?\nconst Beats: React.FC = React.memo(() => {\n  const activeBeats = redux.useSelector(a => a.activeBeats.size);\n  return (\n    <BeatsWrapper>\n      {R.range(0, activeBeats).map(beatIndex => (\n        <Beat key={beatIndex} beatIndex={beatIndex} />\n      ))}\n    </BeatsWrapper>\n  );\n});\n\nexport default TimeSignature;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport * as Common from \"./Common\";\nimport * as redux from \"../redux\";\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn: React.FC = () => {\n  const [taps, setTaps] = React.useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      redux.setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return (\n    <Common.Button isLink isOutlined onClick={onTap}>\n      Tap In\n    </Common.Button>\n  );\n};\n\nexport default TapIn;\n","import React from \"react\";\nimport { useToggle } from \"../hooks\";\nimport * as Common from \"./Common\";\nimport styled from \"styled-components\";\nimport * as polyfill from \"../polyfill\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = React.memo(() => {\n  const [on, toggleOn] = useToggle(false);\n  const [analyser, setAnalyser] = React.useState<AnalyserNode>();\n  const [sampleRate, setSampleRate] = React.useState<number>();\n  const [freq, setFreq] = React.useState<number>(440);\n  const [audioContext, setAudioContext] = React.useState<AudioContext>();\n\n  // Initailize the AudioContext when user turns on the tuner.\n  React.useEffect(() => {\n    if (on && !audioContext && polyfill.AudioContext !== undefined) {\n      setAudioContext(new polyfill.AudioContext());\n    }\n  }, [on, audioContext]);\n\n  // Prompt for microphone when user turns on the tuner.\n  React.useEffect(() => {\n    if (on && audioContext) {\n      setSampleRate(audioContext.sampleRate);\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices) {\n        let mediaStream: MediaStream;\n        mediaDevices.getUserMedia({ audio: true }).then((ms: MediaStream) => {\n          mediaStream = ms;\n          const analyser = audioContext.createAnalyser();\n          // If this isn't big, I don't have very good frequency accuracy, and I\n          // can't change the sample rate because web audio sucks.\n          analyser.fftSize = 8192;\n          const mic = audioContext.createMediaStreamSource(ms);\n          mic.connect(analyser);\n          setAnalyser(analyser);\n        });\n        return () => {\n          mediaStream.getAudioTracks().forEach(track => track.stop());\n        };\n      }\n    }\n  }, [on, audioContext]);\n\n  React.useEffect(() => {\n    if (on && analyser && sampleRate) {\n      const tick = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Float32Array(bufferLength);\n        analyser.getFloatFrequencyData(dataArray);\n        const [, maxIdx] = dataArray.reduce(\n          (a, b, i) => (a[0] < b ? [b, i] : a),\n          [-Infinity, -1]\n        );\n        const resolution = sampleRate / analyser.fftSize;\n        const freq = resolution * maxIdx;\n        setFreq(freq);\n      };\n      tick();\n      let interval = setInterval(tick, 50);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [on, analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  // TODO: - add in a graph of the FFT that's label with pitches and neato log bars.\n  return (\n    <TunerWrapper className=\"box has-text-centered\">\n      <div className=\"is-size-1\">{on ? note + octave : \"Stopped\"}</div>\n\n      <div>\n        {on ? (\n          <>\n            {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n          </>\n        ) : (\n          \"press start to tune\"\n        )}\n      </div>\n      <Common.Buttons className=\"is-right\">\n        <Common.ToggleButton on={on} isDanger offIsPrimary onClick={toggleOn}>\n          <>Stop</>\n          <>Start</>\n        </Common.ToggleButton>\n      </Common.Buttons>\n    </TunerWrapper>\n  );\n});\n\nconst TunerWrapper = styled.section`\n  margin-top: 10px;\n`;\n\nexport default Tuner;\n","import React from \"react\";\nimport * as hooks from \"../hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"../types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst InnerWrapper = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface InnerProps {\n  container: HTMLDivElement | null;\n  addDiff: (value: number) => void;\n  size: number;\n}\n\nconst Inner: React.FC<InnerProps> = ({\n  container: knobContainer,\n  addDiff,\n  size\n}) => {\n  const [stateRadians, setRadians] = hooks.useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (Math.PI * 3) / 2\n  );\n  const radiansRef = React.useRef(Math.PI);\n  React.useEffect(() => {\n    radiansRef.current = stateRadians;\n  }, [stateRadians]);\n  const onMouseDown = React.useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  }, []);\n\n  const [mouseDown, setMouseDown] = React.useState(false);\n  const mouseDownRef = React.useRef(false);\n  React.useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = React.useState(0);\n  const totalDiffRef = React.useRef(0);\n  React.useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const onMouseUp = React.useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = React.useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = React.useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      if (knobContainer !== null) {\n        const { clientX, clientY } = e;\n        const box = knobContainer.getBoundingClientRect();\n\n        const boxCenter = {\n          x: box.left + box.width / 2,\n          y: box.top + box.height / 2\n        };\n        const y = -(boxCenter.y - clientY);\n        const x = -(boxCenter.x - clientX);\n        const newRadians = Math.atan2(y, x);\n        let diff = radiansRef.current - newRadians;\n        if (diff < -Math.PI) {\n          diff = -radiansRef.current - newRadians;\n        } else if (diff > Math.PI) {\n          diff = radiansRef.current - -newRadians;\n        }\n        if (diff !== 0) {\n          addToBuffer(diff);\n        }\n        const same = newRadians === radiansRef.current;\n        if (!same) {\n          setRadians(newRadians);\n        }\n      }\n    },\n    [addToBuffer, setRadians, knobContainer]\n  );\n\n  const onTouchMove = React.useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      const t = e.changedTouches;\n      const t0 = t[0];\n      moveKnob(t0);\n    },\n    [moveKnob]\n  );\n\n  const onMouseMove = React.useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  const uiRadians = hooks.useAnimationFrameDebounce(stateRadians);\n\n  const top = React.useMemo(\n    () =>\n      size / 2 +\n      Math.sin(uiRadians) * (size / 4) +\n      (Math.sin(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n  const left = React.useMemo(\n    () =>\n      size / 2 +\n      Math.cos(uiRadians) * (size / 4) +\n      (Math.cos(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  return (\n    <InnerWrapper\n      className=\"has-background-info\"\n      onMouseDown={onMouseDown}\n      onTouchMove={onTouchMove}\n      style={{\n        top,\n        left\n      }}\n    />\n  );\n};\n\ninterface Props {\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [knobContainer, setKnobContainer] = React.useState<HTMLDivElement | null>(\n    null\n  );\n\n  return (\n    <Outer ref={setKnobContainer} className=\"has-background-primary\">\n      <Inner addDiff={addDiff} container={knobContainer} size={size} />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = React.memo(styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`);\n\nexport default InfiniKnob;\n","import React from \"react\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport * as Common from \"./Common\";\nimport useMetronome from \"../metronome\";\nimport * as t from \"../types\";\nimport * as hooks from \"../hooks\";\nimport styled from \"styled-components\";\nimport * as redux from \"../redux\";\n\nconst FullPage = styled.div`\n  margin: 0 !important;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  text-align: center;\n`;\n\ninterface MetronomeProps {\n  audioContext: t.MAudioContext;\n}\n\nconst BPM = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <div className=\"has-text-centered is-size-1\">{bpm}</div>;\n};\n\nconst DialSection: React.FC = React.memo(() => {\n  return (\n    <section className=\"section\">\n      <Dial addDiff={redux.addBPM}>\n        <BPM />\n        <TempoMarking />\n      </Dial>\n    </section>\n  );\n});\n\nconst Metronome: React.FC<MetronomeProps> = ({ audioContext }) => {\n  const pending = redux.useSelector(a => a.metronomeState.pending);\n\n  useMetronome(audioContext);\n\n  // TODO: - this should be saved in appSettings.\n  const [showTuner, toggleTuner] = hooks.usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n    false\n  );\n\n  return (\n    <>\n      {pending && <FullPage>Tap to enable audio.</FullPage>}\n      {showTuner && <Tuner />}\n      <DialSection />\n      <TimeSignature />\n      <Controls showTuner={showTuner} toggleTuner={toggleTuner} />\n    </>\n  );\n};\n\ninterface ControlsProps {\n  showTuner: boolean;\n  toggleTuner: () => void;\n}\n\nconst Controls: React.FC<ControlsProps> = React.memo(\n  ({ showTuner, toggleTuner }) => {\n    const playing = redux.useSelector(a => a.metronomeState.playing);\n    const pending = redux.useSelector(a => a.metronomeState.pending);\n    return (\n      <section className=\"section\">\n        <Common.Buttons hasAddons>\n          <Common.ToggleButton\n            isLink\n            offIsOutlined\n            offIsLink\n            on={showTuner}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </Common.ToggleButton>\n          <TapIn />\n          <Common.ToggleButton\n            on={playing}\n            offIsPrimary\n            grow\n            isOutlined\n            isDanger\n            disabled={pending}\n            onClick={redux.toggleStart}\n          >\n            <>Stop</>\n            <>Start</>\n          </Common.ToggleButton>\n        </Common.Buttons>\n      </section>\n    );\n  }\n);\nexport default Metronome;\n","import React from \"react\";\nimport * as redux from \"../redux\";\nimport styled from \"styled-components\";\n\nconst SettingsWrapper = styled.section``;\n\nconst Settings: React.FC = () => {\n  const keepAwake = redux.useSelector(s => s.settings.keepAwake);\n  return (\n    <SettingsWrapper>\n      <h2 className=\"is-size-4\">Settings</h2>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              style={{ marginRight: \"5px\" }}\n              type=\"checkbox\"\n              checked={keepAwake}\n              onChange={redux.toggleKeepAwake}\n            />\n            Keep screen on while metronome is running.\n          </label>\n        </div>\n      </div>\n    </SettingsWrapper>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport TimeSignature from \"./TimeSignature\";\nimport * as hooks from \"../hooks\";\nimport * as util from \"../util\";\nimport * as t from \"../types\";\nimport * as redux from \"../redux\";\nimport * as Common from \"./Common\";\nimport useScales from \"../scales\";\nimport useMetronome from \"../metronome\";\n\n// TODO: - clean up the rendering here. It redraws way too much on a change.\n// TODO: - store the scales as a sorted set instead of a set that gets sorted\n// every time.\n\nenum ScaleMode {\n  NOT_STARTED = \"not-started\",\n  KNOWN = \"known\",\n  LEARNING = \"learning\"\n}\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: t.Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Common.Buttons>\n        <Common.ToggleButton on={known} isInfo onClick={toggleKnown}>\n          Known\n        </Common.ToggleButton>\n        <Common.ToggleButton on={learning} isLink onClick={toggleLearning}>\n          Learning\n        </Common.ToggleButton>\n      </Common.Buttons>\n    </div>\n  );\n};\n\ninterface LearnScalesProps {\n  scales: t.Scales;\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\n\nconst LearnScales: React.FC<LearnScalesProps> = ({\n  scales,\n  reset,\n  scaleMode\n}) => {\n  const { getScales, getScale, addBPM } = scales;\n  const [scaleKeys, setScales] = React.useState<Array<t.ScaleKey>>(() =>\n    util.shuffle(\n      getScales(s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      })\n        .valueSeq()\n        .map(({ scaleKey }) => scaleKey)\n        .toArray()\n    )\n  );\n\n  const start = redux.start();\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScale(\n    (s: t.Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  React.useEffect(() => {\n    if (maybeScale !== undefined) {\n      redux.start(maybeScale.bpm);\n    }\n  }, [maybeScale, start]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO: - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <>\n      <div className=\"box\">\n        <div\n          style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n          className=\"control is-expanded is-size-5\"\n        >\n          {scaleMode}\n        </div>\n        <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n          <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n            {pitch} {mode} @ {bpm}bpm\n          </div>\n          <Common.Buttons grow hasAddons>\n            <Common.Button\n              isDanger\n              isOutlined\n              grow\n              onClick={() => addBPM(scale, -10)}\n            >\n              -10\n            </Common.Button>\n            <Common.Button\n              isDanger\n              isOutlined\n              grow\n              onClick={() => addBPM(scale, -1)}\n            >\n              -\n            </Common.Button>\n            <Common.Button\n              isPrimary\n              isOutlined\n              grow\n              onClick={() => addBPM(scale, 1)}\n            >\n              +\n            </Common.Button>\n            <Common.Button\n              isPrimary\n              isOutlined\n              grow\n              onClick={() => addBPM(scale, 10)}\n            >\n              +10\n            </Common.Button>\n          </Common.Buttons>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Common.Button isDanger isOutlined onClick={reset}>\n            Stop\n          </Common.Button>\n          <Common.Button isPrimary onClick={nextScale}>\n            {nextScaleText}\n          </Common.Button>\n        </div>\n      </div>\n      <TimeSignature />\n    </>\n  );\n};\n\ninterface ScalesProps {\n  audioContext: t.MAudioContext;\n}\n\n// TODO: - Add a button to start learning a new scale. This will be a scale\n// that is know known and is not learning.\n// TODO: - use my piano keyboard component from my blog to show 3 octaves of the\n// current scale.\nconst Scales: React.FC<ScalesProps> = ({ audioContext }) => {\n  useMetronome(audioContext);\n\n  const [scaleMode, setScaleMode] = React.useState(ScaleMode.NOT_STARTED);\n  const [showKnown, toggleShowKnown] = hooks.usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  React.useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      redux.stop();\n    }\n  }, [scaleMode]);\n\n  const scales = useScales();\n  const { getScale, getScales, toggleLearning, toggleKnown } = scales;\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Common.Buttons>\n              <Common.Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={getScale(s => s.known) === undefined}\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Common.Button>\n              <Common.Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={getScale(s => s.learning) === undefined}\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Common.Button>\n            </Common.Buttons>\n          </div>\n          <hr />\n\n          <Common.Buttons>\n            <Common.Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Common.Button>\n          </Common.Buttons>\n          {getScales(\n            s =>\n              s.mode === t.Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScales(\n            s =>\n              s.mode === t.Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          scales={scales}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\nimport * as immutable from \"immutable\";\n\nconst initScale = (scaleKey: t.ScaleKey): t.Scale => ({\n  scaleKey,\n  pitch: scaleKey[0],\n  mode: scaleKey[1],\n  known: false,\n  learning: false,\n  bpm: 60\n});\n\nconst addScale = (scalesDB: t.ScalesDB, key: t.ScaleKey): t.ScalesDB => {\n  return scalesDB.add(initScale(key));\n};\n\nconst initScalesDB = (): t.ScalesDB => {\n  return t.scaleKeys.reduce(\n    (scalesDB: t.ScalesDB, scaleKey) => addScale(scalesDB, scaleKey),\n    immutable.Set() as t.ScalesDB\n  );\n};\n\nexport const getScale = (\n  scalesDB: t.ScalesDB,\n  filter: (s: t.Scale) => boolean\n): t.Scale | undefined => {\n  return getScales(scalesDB, filter).first();\n};\n\nconst getScales = (scalesDB: t.ScalesDB, filter: (s: t.Scale) => boolean) => {\n  return scalesDB.filter(filter);\n};\n\n// TODO: - store scales in redux.\nconst useScales = (): t.Scales => {\n  const [scalesDB, setScalesDB] = hooks.useLocalStorage<t.ScalesDB>(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const addScalePublic = React.useCallback(() => {\n    throw new Error(\"not implemented\");\n  }, []);\n\n  const getScalePublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) => getScale(scalesDB, filter),\n    [scalesDB]\n  );\n\n  const getScalesPublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) =>\n      getScales(scalesDB, filter).sort((a, b) =>\n        a.scaleKey[0].localeCompare(b.scaleKey[0])\n      ),\n    [scalesDB]\n  );\n\n  const addBPMPublic = React.useCallback(\n    (s: t.Scale, bpm: number) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, bpm: scale.bpm + bpm })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleLearningPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, learning: !scale.learning })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleKnownPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, known: !scale.known })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n\n  // TODO: - these should probably use a ref so they don't change as often.\n  return {\n    addBPM: addBPMPublic,\n    toggleLearning: toggleLearningPublic,\n    toggleKnown: toggleKnownPublic,\n    addScale: addScalePublic,\n    getScale: getScalePublic,\n    getScales: getScalesPublic\n  };\n};\nexport default useScales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport * as Common from \"./Common\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n`;\n\nconst UpdateStyle = styled.section`\n  position: absolute;\n  max-width: ${Common.maxWidth};\n  width: 95%;\n  margin-top: 10px;\n  left: 0;\n  right: 0;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  z-index: 10;\n  display: flex !important;\n  justify-content: space-between;\n  animation: ease-in 1s ${rotate};\n`;\n\nlet hasRegistered = false;\nexport default () => {\n  const [updateAvailable, setUpdateAvailable] = React.useState(false);\n\n  const reload = React.useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const close = React.useCallback(() => {\n    setUpdateAvailable(false);\n  }, []);\n\n  React.useEffect(() => {\n    if (!hasRegistered) {\n      serviceWorker.register({\n        onUpdate: () => {\n          setUpdateAvailable(true);\n        }\n      });\n    }\n    hasRegistered = true;\n  }, []);\n  return (\n    <>\n      {updateAvailable && (\n        <UpdateStyle className=\"box\">\n          <span>An Update is Available!</span>\n          <Common.Buttons>\n            <Common.Button isPrimary isOutlined onClick={reload}>\n              Refresh\n            </Common.Button>\n            <Common.Button isDanger isOutlined onClick={close}>\n              x\n            </Common.Button>\n          </Common.Buttons>\n        </UpdateStyle>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport Metronome from \"./Metronome\";\nimport Settings from \"./Settings\";\nimport Scales from \"./Scales\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Update from \"./Update\";\nimport * as redux from \"../redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport { maxWidth } from \"./Common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars as faCoffee,\n  faHome,\n  faCog as faGear,\n  faMusic\n} from \"@fortawesome/free-solid-svg-icons\";\nimport * as hooks from \"../hooks\";\n\nconst TopBarWrapper = React.memo(styled.section`\n  margin-bottom: 10px;\n  margin-left: 0px !important;\n  margin-right: 0px !important;\n  display: flex;\n  flex-direction: column;\n`);\n\nconst CenterIcon = React.memo(styled.span`\n  align-self: center;\n`);\n\nconst TopNav = React.memo(styled.section`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  justify-content: space-between;\n  > h2 {\n    margin: 0 !important;\n  }\n`);\n\nconst dropDown = keyframes`\n  from {\nfont-size: 0px;\n  }\n`;\n\nconst NavDropDown = React.memo(styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n  align-self: flex-end;\n  > a {\n    animation: ease-in 0.3s ${dropDown};\n    font-size: 1.5rem;\n  }\n`);\n\nconst NavItem = React.memo(styled(Link)``);\n\nconst NavIcon = React.memo(styled(FontAwesomeIcon)`\n  margin-left: 5px;\n`);\n\nconst TopBar = React.memo(() => {\n  const [showNav, toggleNav] = hooks.useToggle(false);\n  // TODO: - figure out how to animate the nav being hidden.\n  // TODO: - make it where clicking outside of this element hides it.\n  // TODO: - make it where you can swipe from the right of the screen to show the nav.\n  return (\n    <TopBarWrapper>\n      <TopNav className=\"has-background-primary has-text-light\">\n        <Link to=\"/\" className=\"has-text-white\">\n          <h2 className=\"is-size-4 is-bold\">(mjh)tronome</h2>\n        </Link>\n        <CenterIcon onClick={toggleNav}>\n          <FontAwesomeIcon icon={faCoffee} size=\"2x\" />\n        </CenterIcon>\n      </TopNav>\n      {showNav && (\n        <NavDropDown onClick={toggleNav}>\n          <NavItem to=\"/\">\n            Home\n            <NavIcon icon={faHome} />\n          </NavItem>\n          <NavItem to=\"/scales\">\n            Scales\n            <NavIcon icon={faMusic} />\n          </NavItem>\n          <NavItem to=\"/settings\">\n            Settings\n            <NavIcon icon={faGear} />\n          </NavItem>\n        </NavDropDown>\n      )}\n    </TopBarWrapper>\n  );\n});\n\nconst WrapperStyle = React.memo(styled.div`\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  > * {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`);\n\nconst FooterStyle = React.memo(styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  margin-top: 5px;\n`);\n\nconst Wrapper: React.FC = React.memo(({ children }) => {\n  return (\n    <WrapperStyle>\n      <Update />\n      <TopBar />\n      {children}\n      <FooterStyle>{`v${process.env.REACT_APP_VERSION}`}</FooterStyle>\n    </WrapperStyle>\n  );\n});\n\n// TODO: - add a button to the overall exception handler that lets you clear local storage.\n// TODO: - add an option to the settings to clear local storage.\n// TODO: - update components to use the React.FC type.\nconst App: React.FC = () => {\n  const audioContext = hooks.useAudioContext();\n  const keepAwake = redux.useSelector(a => a.settings.keepAwake);\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  hooks.useSleepLock(keepAwake && playing);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Wrapper>\n        {audioContext === \"not-supported\" && (\n          <div>\n            Your browser doesn't support the audioContext api, so this will not\n            work. Sorry :(\n          </div>\n        )}\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Metronome audioContext={audioContext} />}\n        />\n        <Route\n          exact\n          path=\"/scales\"\n          render={() => <Scales audioContext={audioContext} />}\n        />\n        <Route exact path=\"/settings\" render={() => <Settings />} />\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./bulma-overrides.sass\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nclass ErrorBoundary extends React.Component<{}, { error: any }> {\n  constructor(props: { error: any }) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Something went wrong</h1>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.name}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.message}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.stack}\n          </code>\n          <hr />\n          <code>{JSON.stringify(this.state.error, undefined, \"  \")}</code>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}