{"version":3,"sources":["click.wav","types.ts","polyfill.ts","hooks.ts","util.ts","redux.ts","metronome.ts","components/TempoMarking.tsx","components/Common.tsx","components/TimeSignature.tsx","components/TapIn.tsx","components/Tuner.tsx","components/Dial.tsx","components/Metronome.tsx","components/Settings.tsx","components/Scales.tsx","scales.ts","serviceWorker.ts","components/Update.tsx","settings.ts","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","Mode","Pitch","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","F_Sharp","Minor","A_Sharp","D_Sharp","G_Sharp","AudioContext","window","webkitAudioContext","undefined","useLocalStorage","key","initialValue","override","arguments","length","_useState5","useState","firstValue","fromLocal","localStorage","getItem","Function","transit","setItem","_useState6","Object","slicedToArray","value","setValue","useCallback","valueAction","oldValue","newValue","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","R","useToggle","sideEffect","toggleState","_useState7","_useState8","old","ActionType","fromLocalStorage","defaultValue","toLocalStorage","click","require","scheduleNote","audioContext","_ref","time","gain","buffer","pitch","currentBeat","divisionIndex","isOne","sound","createBufferSource","detune","volume","createGain","connect","destination","start","lastTime","intervalError","useScheduleAhead","playing","redux","a","metronomeState","url","_useState9","_useState10","updateBuffer","useEffect","fetch","then","response","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","useRef","delay","scheduleAhead","beatToSchedule","current","nextBeat","React","store","getState","signature","numerator","size","updateUi","beat","timeToRun","callback","setTimeout","currentTime","runAtTime","beatsQueue","Deque","firstClickTime","tick","beatIdx","Math","min","get","bpm","nextNoteTime","secondsPerBeat","divisions","beatsForNextMeasure","startOfBeatTime","beats","filter","forEach","_","divisionOption","noteOffset","divisionLength","push","sort","b","beatsFor","apply","toConsumableArray","addBeatsToQueue","intervalLength","scheduleTil","peekFront","first","shift","playBeatsTill","id","setInterval","clearInterval","useMetronome","s","setSignature","action","nextValue","util","t","TimeSignature","dispatch","type","SetSignature","setPending","SetPending","setPlaying","SetPlaying","setBPM","BPM","SetBpm","addBPM","resetActivebeats","activeBeats","immutable","map","enabledDivisions","reduce","acc","d","set","SetActiveBeats","updateActiveBeat","UpdateActiveBeats","toggleStart","stop","defaultBeat","defaultSignature","denominator","defaultStore","ready","pending","objectSpread","getIn","setIn","startsWith","console","log","useSelector","selector","comparisonFn","reactRedux","markings","name","low","high","fromBPM","to","test","Marking","memo","_ref2","react_default","createElement","className","TempoMarking","_ref3","style","minHeight","_ref4","concat","_ref5","_ref6","nu","equals","Wrap","offProps","onProps","ToggleButton","on","props","objectWithoutProperties","renderProps","useMemo","toRemove","child","children","Array","Common_Button","Button","isPrimary","isDanger","isLink","isInfo","isSuccess","isOutlined","offIsPrimary","offIsDanger","offIsLink","offIsInfo","offIsSuccess","offIsOutlined","grow","propsClassName","classnames","is-primary","is-link","is-danger","is-info","is-success","is-outlined","is-grow","ButtonsWrapper","styled","div","_templateObject","Buttons","hasAddons","ref","has-addons","assign","DivisionsWrapper","section","TimeSignature_templateObject","Divisions","uiEnabledDivisions","toggleDivisionOption","clearDivisions","Common_Buttons","marginRight","num","Common_ToggleButton","onClick","Signature","setCurrentNumerator","currentNumerator","Fragment","BeatRowItemWrapper","_templateObject2","BeatRowWrapper","_templateObject3","BeatWrapper","_templateObject4","BeatsWrapper","_templateObject5","BeatRowItem","height","beatIndex","division","marginTop","BeatRow","Beat","keySeq","Beats","_useState","_useState2","hasChanged","setHasChanged","_hooks$useLocalStorag","hooks","EnabledDivisions","_hooks$useLocalStorag2","uIenabledDivisions","setUiEnabledDivisions","_React$useState","_React$useState2","calculateBPM","tapTimes","trunc","TapIn","taps","setTaps","now","performance","newTaps","tap","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","j","base","pow","centsPerOctave","frequency","octave","note","Tuner","_useToggle","_useToggle2","toggleOn","analyser","setAnalyser","_useState3","_useState4","sampleRate","setSampleRate","freq","setFreq","setAudioContext","polyfill","mediaStream","mediaDevices","navigator","getUserMedia","audio","ms","createAnalyser","fftSize","createMediaStreamSource","getAudioTracks","track","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","Infinity","maxIdx","resolution","interval","_freqToPitch","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","TunerWrapper","toFixed","Tuner_templateObject","Outer","Dial_templateObject","InnerWrapper","Dial_templateObject2","Inner","knobContainer","container","addDiff","Radians","PI","stateRadians","setRadians","radiansRef","onMouseDown","e","setMouseDown","preventDefault","mouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","onMouseUp","addToBuffer","diff","abs","oldDiff","moveKnob","clientX","clientY","box","getBoundingClientRect","boxCenter","x","left","width","y","top","newRadians","atan2","onTouchMove","t0","changedTouches","onMouseMove","uiRadians","_React$useState5","_React$useState6","debouncedValue","setDebouncedValue","valueRef","animationFrame","loop","requestAnimationFrame","cancelAnimationFrame","sin","cos","addEventListener","removeEventListener","ChildContainer","Dial_templateObject3","InfiniKnob","_ref2$size","setKnobContainer","Dial_Inner","FullPage","Metronome_templateObject","DialSection","Dial","Metronome_BPM","components_TempoMarking","Controls","showTuner","toggleTuner","components_TapIn","disabled","Metronome","appSettings","keepAwake","state","shouldSleep","NoSleep","noSleep","enable","disable","useSleepLock","_usePersistantToggle","ShowTuner","_usePersistantToggle2","components_Tuner","components_TimeSignature","ScaleMode","SettingsWrapper","Settings_templateObject","Settings","toggleKeepAwake","checked","onChange","initScalesDB","scalesDB","scaleKey","add","mode","known","learning","addScale","getScales","useScales","ScalesDB","setScalesDB","addScalePublic","Error","getScalePublic","getScale","getScalesPublic","localeCompare","scale","remove","toggleLearning","toggleKnown","ScalesGroup","_ref$scaleKey","LearnScales","scales","reset","scaleMode","floor","random","LEARNING","KNOWN","valueSeq","toArray","setScales","currentKey","maybeScale","nextScaleText","alignSelf","fontWeight","display","marginBottom","justifyContent","slice","Scales","_React$useState3","NOT_STARTED","_React$useState4","setScaleMode","_hooks$usePersistantT","ShowKnown","_hooks$usePersistantT2","showKnown","toggleShowKnown","Scales_ScalesGroup","Scales_LearnScales","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","status","indexOf","serviceWorker","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","rotate","keyframes","Update_templateObject","UpdateStyle","Update_templateObject2","hasRegistered","Update","updateAvailable","setUpdateAvailable","close","initSettings","TopBarWrapper","App_templateObject","CenterIcon","span","App_templateObject2","TopNav","App_templateObject3","dropDown","App_templateObject4","NavDropDown","nav","App_templateObject5","NavItem","Link","_templateObject6","NavIcon","FontAwesomeIcon","_templateObject7","TopBar","showNav","toggleNav","react_router_dom","index_es","icon","faCoffee","faHome","faMusic","faGear","WrapperStyle","_templateObject8","FooterStyle","_templateObject9","Wrapper","App","AppSettings","setState","useAppSettings","audioContextRef","hasFixed","setHasFixed","fixAudioContext","resume","document","context","basename","react_router","exact","path","render","components_Metronome","components_Scales","components_Settings","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","message","stack","JSON","stringify","Component","ReactDOM","es","src_ErrorBoundary","components_App","getElementById"],"mappings":"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","file":"static/js/main.85eca4a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\nimport * as immutable from \"immutable\";\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: Division;\n  divisionIndex: number;\n  divisionLength: number;\n  currentBeat: number;\n}\n\nexport type Division = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport type ActiveDivision = immutable.List<boolean>;\nexport type ActiveBeat = immutable.Map<Division, ActiveDivision>;\nexport type ActiveBeats = immutable.List<ActiveBeat>;\n\nexport type EnabledDivisions = immutable.Map<Division, boolean>;\n\nexport type Numerator = immutable.List<EnabledDivisions>;\n\nexport interface TimeSignature {\n  denominator: number;\n  numerator: Numerator;\n}\n\nexport interface MetronomeState {\n  ready: boolean;\n  pending: boolean;\n  bpm: number;\n  playing: boolean;\n  signature: TimeSignature;\n}\n\ninterface AppSettingsState {\n  keepAwake: boolean;\n}\n\nexport interface AppSettings {\n  state: AppSettingsState;\n  toggleKeepAwake: () => void;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<TimeSignature>>;\n  addBPM: (bpmToAdd: number) => void;\n}\n\nexport type MAudioContext =\n  | AudioContext\n  | \"pending\"\n  | \"not-supported\"\n  | undefined;\n\nexport enum LocalStorageKey {\n  EnabledDivisions = \"@mjh/k/enabled-divisions-0\",\n  AppSettings = \"@mjh/k/app-settings-0\",\n  SignatureDivisions = \"@mjh/k/signature-divisions-3\",\n  ShowKnown = \"@mjh/k/show-known-2\",\n  ScalesDB = \"@mjh/k/scales-db-2\",\n  ActiveBeats = \"@mjh/k/active-beats-2\",\n  TimeSignature = \"@mjh/k/signature-3\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\",\n  WakeLock = \"@mjh/k/wake-lock-0\"\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = immutable.Set<Scale>;\n\nexport interface Scales {\n  getScale: (filter: (s: Scale) => boolean) => Scale | undefined;\n  getScales: (filter: (s: Scale) => boolean) => ScalesDB;\n  addScale: (s: Scale) => void;\n  toggleLearning: (s: Scale) => void;\n  toggleKnown: (s: Scale) => void;\n  addBPM: (s: Scale, bpm: number) => void;\n}\n","interface Constructable<T> {\n  new (): T;\n}\n\nexport const AudioContext: Constructable<AudioContext> | undefined =\n  (window as any).AudioContext || // Default\n  (window as any).webkitAudioContext || // Safari and old versions of Chrome\n  undefined;\n","import React, {\n  useState,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as polyfill from \"./polyfill\";\nimport * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\nimport NoSleep from \"nosleep.js\";\n\nexport const useSingleton = <T>(initialValue?: T) => {\n  const [value, setValue] = useState<T | undefined>(initialValue);\n\n  const setValueOnce = useCallback(\n    (t: T) => {\n      if (!value) {\n        setValue(t);\n      }\n    },\n    [value]\n  );\n\n  return {\n    value: value,\n    init: setValueOnce\n  };\n};\n\nexport const useSleepLock = (shouldSleep: boolean) => {\n  const [noSleep] = useState(new NoSleep());\n\n  React.useEffect(() => {\n    if (shouldSleep) {\n      noSleep.enable();\n    } else {\n      noSleep.disable();\n    }\n  }, [shouldSleep, noSleep]);\n};\n\n// TODO - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState(() => {\n    let firstValue: T;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = transit.fromJSON(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, transit.toJSON(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, transit.toJSON(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  useDetectChangedValue(advice, originalSetter);\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = useRef<any[]>(values);\n\n  useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n\nexport const useAudioBuffer = (\n  audioContext: t.MAudioContext,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = useState<AudioBuffer>();\n  useEffect(() => {\n    if (\n      // TODO - refactor this out into a helper method if possible.\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\"\n    ) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nexport const useAudioContext = ():\n  | AudioContext\n  | undefined\n  | \"pending\"\n  | \"not-supported\" => {\n  const [audioContext, setAudioContext] = React.useState<\n    AudioContext | \"not-supported\" | \"pending\" | undefined\n  >();\n  const audioContextRef = React.useRef<AudioContext>();\n  const [hasFixed, setHasFixed] = React.useState(false);\n\n  const fixAudioContext = useCallback(() => {\n    if (!hasFixed) {\n      if (audioContextRef.current !== undefined) {\n        setAudioContext(\"pending\");\n        audioContextRef.current.resume().then(() => {\n          setHasFixed(true);\n          setAudioContext(audioContextRef.current);\n          document.removeEventListener(\"touchstart\", fixAudioContext);\n          document.removeEventListener(\"click\", fixAudioContext);\n          document.removeEventListener(\"touchend\", fixAudioContext);\n        });\n      }\n    }\n  }, [hasFixed, setHasFixed]);\n\n  React.useEffect(() => {\n    if (polyfill.AudioContext === undefined) {\n      setAudioContext(\"not-supported\");\n    } else {\n      const context = new polyfill.AudioContext();\n      audioContextRef.current = context;\n      if (context.state === \"suspended\") {\n        document.addEventListener(\"touchstart\", fixAudioContext);\n        document.addEventListener(\"click\", fixAudioContext);\n        document.addEventListener(\"touchend\", fixAudioContext);\n      } else {\n        setAudioContext(context);\n      }\n    }\n  }, [fixAudioContext]);\n\n  return audioContext;\n};\n\nexport const useAnimationFrameDebounce = <T>(value: T) => {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n  const valueRef = React.useRef<T>(value);\n\n  React.useEffect(() => {\n    valueRef.current = value;\n  }, [value]);\n\n  React.useEffect(() => {\n    let animationFrame = -1;\n\n    const tick = () => {\n      loop();\n      setDebouncedValue(valueRef.current);\n    };\n\n    const loop = () => {\n      animationFrame = requestAnimationFrame(tick);\n    };\n    loop();\n\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, []);\n\n  return debouncedValue;\n};\n","import * as t from \"./types\";\nimport * as transit from \"transit-immutable-js\";\n\nexport function assertNever(value: never): never {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n}\n\n// TODO - I might be able to overload this so it's actually typesafe by making\n// the return type dependant on a key literal.\nexport const fromLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  defaultValue: T\n): T => {\n  const fromLocal = localStorage.getItem(key);\n  if (fromLocal === null) {\n    return defaultValue;\n  } else {\n    return transit.fromJSON(fromLocal);\n  }\n};\n\nexport const toLocalStorage = <T>(key: t.LocalStorageKey, value: T) => {\n  localStorage.setItem(key, transit.toJSON(value));\n};\n\nexport const shuffle = <T>(a: Array<T>) => {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n};\n\nexport const runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  // const now = audioContext.currentTime;\n  // if (timeToRun <= now) {\n  //   callback();\n  // } else {\n  //   const sleepTime = ((timeToRun - now) / 2) * 1000;\n  //   setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  // }\n  setTimeout(callback, (timeToRun - audioContext.currentTime) * 1000);\n};\n","import * as redux from \"redux\";\nimport * as t from \"./types\";\nimport * as immutable from \"immutable\";\nimport * as reactRedux from \"react-redux\";\nimport * as R from \"ramda\";\nimport * as metronome from \"./metronome\";\nimport * as util from \"./util\";\n\n// TODO these should live in types.\nexport enum ActionType {\n  UpdateActiveBeats,\n  SetActiveBeats,\n  SetSignature,\n  SetPending,\n  SetPlaying,\n  SetBpm\n}\n\ntype RSA<T> = React.SetStateAction<T>;\nexport type Action =\n  // TODO update the other types to use action & RSA\n  | { type: ActionType.UpdateActiveBeats; value: t.Beat }\n  | { type: ActionType.SetActiveBeats; value: t.ActiveBeats }\n  | { type: ActionType.SetPending; action: RSA<boolean> }\n  | { type: ActionType.SetPlaying; action: RSA<boolean> }\n  | { type: ActionType.SetBpm; action: RSA<number> }\n  | { type: ActionType.SetSignature; action: RSA<t.TimeSignature> };\n\nexport interface ReduxState {\n  activeBeats: t.ActiveBeats;\n  metronomeState: t.MetronomeState;\n}\n\nexport const setSignature = (action: React.SetStateAction<t.TimeSignature>) => {\n  // TODO - figure out a cleaner way to manage this.\n  const nextValue =\n    action instanceof Function\n      ? action(store.getState().metronomeState.signature)\n      : action;\n  util.toLocalStorage(t.LocalStorageKey.TimeSignature, nextValue);\n  store.dispatch({ type: ActionType.SetSignature, action: nextValue });\n};\n\nexport const setPending = (action: RSA<boolean>) => {\n  store.dispatch({ type: ActionType.SetPending, action });\n};\n\nexport const setPlaying = (action: React.SetStateAction<boolean>) => {\n  store.dispatch({ type: ActionType.SetPlaying, action });\n};\n\nexport const setBPM = (action: React.SetStateAction<number>) => {\n  // TODO - figure out a cleaner way to manage this.\n  const nextValue =\n    action instanceof Function\n      ? action(store.getState().metronomeState.bpm)\n      : action;\n  util.toLocalStorage(t.LocalStorageKey.BPM, nextValue);\n  store.dispatch({ type: ActionType.SetBpm, action: nextValue });\n};\n\nexport const addBPM = (action: number) => {\n  setBPM(old => old + action);\n};\n\nexport const setActiveBeats = (activeBeats: t.ActiveBeats) => {\n  store.dispatch({\n    type: ActionType.SetActiveBeats,\n    value: activeBeats\n  });\n};\n\nexport const resetActivebeats = () => {\n  setActiveBeats(\n    metronome.resetActiveBeats(\n      store.getState().metronomeState.signature.numerator\n    )\n  );\n};\n\nexport const updateActiveBeat = (beat: t.Beat) => {\n  store.dispatch({\n    type: ActionType.UpdateActiveBeats,\n    value: beat\n  });\n};\n\nexport const toggleStart = () => {\n  setPlaying(a => !a);\n};\n\nexport const start = (bpm?: number) => {\n  if (bpm !== undefined) {\n    setBPM(bpm);\n  }\n  setPlaying(true);\n};\nexport const stop = () => {\n  setPlaying(false);\n};\n\nconst defaultBeat = immutable.Map<t.Division, boolean>().set(1, true);\n\nconst defaultSignature = {\n  denominator: 4,\n  numerator: immutable.List([\n    defaultBeat,\n    defaultBeat,\n    defaultBeat,\n    defaultBeat\n  ])\n};\nconst defaultStore = {\n  activeBeats: immutable.List(),\n  metronomeState: {\n    ready: false,\n    pending: true,\n    bpm: util.fromLocalStorage(t.LocalStorageKey.BPM, 60),\n    playing: false,\n    signature: util.fromLocalStorage(\n      t.LocalStorageKey.TimeSignature,\n      defaultSignature\n    )\n  }\n};\n\nconst clampBPM = (bpm: number) => R.clamp(10, 250, bpm);\n\n// TODO - figure out how to add a local storage thing for hydration???\nconst rootReducer = (\n  store: ReduxState = defaultStore,\n  action: Action\n): ReduxState => {\n  switch (action.type) {\n    case ActionType.SetActiveBeats:\n      return { ...store, activeBeats: action.value };\n    case ActionType.UpdateActiveBeats:\n      const beat = action.value;\n      const old = store.activeBeats.getIn([\n        beat.currentBeat,\n        beat.divisions,\n        beat.divisionIndex\n      ]);\n      if (old === undefined) {\n        return store;\n      }\n      return {\n        ...store,\n        activeBeats: store.activeBeats.setIn(\n          [beat.currentBeat, beat.divisions, beat.divisionIndex],\n          !old\n        )\n      };\n    case ActionType.SetSignature:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          signature:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.signature)\n              : action.action\n        }\n      };\n    case ActionType.SetPending:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          pending:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.pending)\n              : action.action\n        }\n      };\n    case ActionType.SetPlaying:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          playing:\n            action.action instanceof Function\n              ? action.action(store.metronomeState.playing)\n              : action.action\n        }\n      };\n    case ActionType.SetBpm:\n      return {\n        ...store,\n        metronomeState: {\n          ...store.metronomeState,\n          bpm: clampBPM(\n            action.action instanceof Function\n              ? action.action(store.metronomeState.bpm)\n              : action.action\n          )\n        }\n      };\n    default:\n      // @ts-ignore - It's too smart for us here, but this is safe.\n      if (!(action.type as any).startsWith(\"@@redux\")) {\n        console.log(action, \"was not handled\");\n      }\n      return store;\n  }\n};\n\nexport const store = redux.createStore(rootReducer);\n\n// TODO - once this hook is standardized, update to use it directly.\nexport const useSelector = <T>(\n  selector: (state: ReduxState) => T,\n  comparisonFn?: (t1: T, t2: T) => boolean\n): T => {\n  return (reactRedux as any).useSelector(selector, comparisonFn);\n};\n","import React, { useEffect, useCallback, useRef } from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport { useAudioBuffer } from \"./hooks\";\nimport Deque from \"double-ended-queue\";\nimport { runAtTime } from \"./util\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"./redux\";\nimport { store } from \"./redux\";\n\nconst click = require(\"./click.wav\");\n\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer, pitch, currentBeat, divisionIndex }: t.Beat\n) => {\n  const isOne = currentBeat === 0 && divisionIndex === 0;\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n  sound.detune.value = isOne ? 0 : -pitch;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = isOne ? 1.0 : gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.EnabledDivisions,\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  const beats: Array<t.Beat> = [];\n  divisions\n    .filter(a => a)\n    .forEach((_, divisionOption) => {\n      const noteOffset = secondsPerBeat / divisionOption;\n      for (\n        let divisionIndex = 0;\n        divisionIndex < divisionOption;\n        divisionIndex++\n      ) {\n        const time = startOfBeatTime + divisionIndex * noteOffset;\n        const divisionLength = noteOffset;\n        const beat: t.Beat = {\n          time,\n          divisionLength,\n          pitch: 220,\n          gain: 1.0 * 0.5,\n          buffer,\n          divisions: divisionOption,\n          divisionIndex,\n          currentBeat\n        };\n        beats.push(beat);\n      }\n    });\n  beats.sort((a, b) => a.time - b.time);\n  return beats;\n};\n\nlet lastTime = -1;\nconst playBeatsTill = (\n  beatsQueue: Deque<t.Beat>,\n  intervalLength: number,\n  audioContext: AudioContext,\n  updateUi: (audioContext: AudioContext, beat: t.Beat) => void\n) => {\n  const now = audioContext.currentTime;\n  const scheduleTil = now + intervalLength + intervalError;\n  while (beatsQueue.peekFront() && beatsQueue.peekFront()!.time < scheduleTil) {\n    const first = beatsQueue.shift()!;\n    // Since the beats are sorted by time in the queue, we can use this trick to\n    // only schedule one for each click.\n    // TODO - This does mean that if we have a custotm sound for each division, it could be messy on one.\n    if (first.time !== lastTime) {\n      scheduleNote(audioContext, first);\n    }\n    lastTime = first.time;\n    updateUi(audioContext, first);\n  }\n};\n\n// TODO - I should clean this up if possible. It takes way too many arguments.\nconst addBeatsToQueue = (\n  bpm: number,\n  nextNoteTime: React.MutableRefObject<number>,\n  currentBeat: t.EnabledDivisions,\n  beatIdx: number,\n  currentTime: number,\n  scheduleAhead: number,\n  buffer: AudioBuffer,\n  beatsQueue: Deque<t.Beat>,\n  nextBeat: () => void\n) => {\n  const secondsPerBeat = 60.0 / bpm;\n  const divisions = currentBeat;\n  if (nextNoteTime.current < currentTime + scheduleAhead) {\n    const beatsForNextMeasure = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    beatsQueue.push(...beatsForNextMeasure);\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst intervalError = 0.1;\n\nconst useScheduleAhead = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const buffer = useAudioBuffer(audioContext, click);\n\n  const scheduleAhead = 0.3;\n  const nextNoteTimeRef = useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  // TODO this should probably be updated when the numerator changes.\n  const beatToSchedule = useRef(0);\n  useEffect(() => {\n    if (!playing) {\n      beatToSchedule.current = 0;\n    }\n  }, [playing]);\n\n  const nextBeat = React.useCallback(() => {\n    let old = beatToSchedule.current;\n    beatToSchedule.current =\n      (old + 1) % store.getState().metronomeState.signature.numerator.size;\n  }, []);\n\n  // TODO - because the ui callbacks run in the future, I can get in a weird\n  // spot state-wise. I should figure out a way to either cancel them running\n  // when the number of divisions changes.\n  const updateUi = useCallback((audioContext: AudioContext, beat: t.Beat) => {\n    // We ovewrite activeBeats here because it's definitely changing.\n    runAtTime(audioContext, beat.time, () => {\n      if (store.getState().metronomeState.playing) {\n        // TODO - this is super janky.\n        // TODO - this would be much nicer with an animation.\n        // TODO - switch this to runAtTime to clear the beat it just set.\n        // TODO - If the division changes, we should reset all active beats to false.\n        redux.updateActiveBeat(beat);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      audioContext !== \"not-supported\" &&\n      audioContext !== \"pending\" &&\n      buffer !== undefined\n    ) {\n      const beatsQueue = new Deque<t.Beat>();\n      const firstClickTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = firstClickTime;\n      const tick = () => {\n        const numerator = store.getState().metronomeState.signature.numerator;\n        const beatIdx = Math.min(beatToSchedule.current, numerator.size - 1);\n        const currentBeat = numerator.get(beatIdx);\n        if (currentBeat !== undefined) {\n          addBeatsToQueue(\n            store.getState().metronomeState.bpm,\n            nextNoteTimeRef,\n            currentBeat,\n            beatToSchedule.current,\n            audioContext.currentTime,\n            scheduleAhead,\n            buffer,\n            beatsQueue,\n            nextBeat\n          );\n        }\n        playBeatsTill(beatsQueue, delay / 1000, audioContext, updateUi);\n      };\n      tick();\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay, buffer, audioContext, updateUi, nextBeat]);\n};\n\nexport const resetActiveBeats = (\n  beats: immutable.List<t.EnabledDivisions>\n): immutable.List<t.ActiveBeat> =>\n  immutable.List(\n    beats.map((enabledDivisions: t.EnabledDivisions) =>\n      enabledDivisions.reduce((acc, b, d) => {\n        return b\n          ? acc.set(d, immutable.List(R.range(0, d).map(() => true)))\n          : acc;\n      }, immutable.Map<t.Division, immutable.List<boolean>>())\n    )\n  );\n\nconst useMetronome = (audioContext: t.MAudioContext) => {\n  const playing = redux.useSelector(s => s.metronomeState.playing);\n\n  // If the component using this hook unmounts, we need to stop the metronome.\n  React.useEffect(() => {\n    if (playing) {\n      return () => {\n        redux.stop();\n      };\n    }\n  }, [playing]);\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  const numerator = redux.useSelector(\n    s => s.metronomeState.signature.numerator\n  );\n  useEffect(() => {\n    // TODO - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    redux.resetActivebeats();\n  }, [numerator]);\n\n  // If the metronome stops playing, we should reset the active beats.\n  useEffect(() => {\n    if (!playing) {\n      redux.resetActivebeats();\n    }\n  }, [playing]);\n\n  // Once the audio context is ready, set pending to false.\n  React.useEffect(() => {\n    if (audioContext !== \"pending\" && audioContext !== undefined) {\n      redux.setPending(false);\n    }\n  }, [audioContext]);\n\n  useScheduleAhead(audioContext);\n};\nexport default useMetronome;\n","import React from \"react\";\nimport * as immutable from \"immutable\";\nimport * as R from \"ramda\";\nimport * as redux from \"../redux\";\n\ninterface Marking {\n  high: number;\n  low: number;\n  name: string;\n}\n\nexport const markings: immutable.List<Marking> = immutable.List([\n  { name: \"Larghissimo\", low: 0, high: 24 },\n  { name: \"Grave\", low: 25, high: 45 },\n  { name: \"Largo\", low: 40, high: 60 },\n  { name: \"Lento\", low: 45, high: 60 },\n  { name: \"Larghetto\", low: 60, high: 66 },\n  { name: \"Adagio\", low: 66, high: 76 },\n  { name: \"Andante\", low: 76, high: 108 },\n  { name: \"Marcia moderato\", low: 83, high: 85 },\n  { name: \"Andante moderato\", low: 92, high: 112 },\n  { name: \"Moderato\", low: 108, high: 120 },\n  { name: \"Allegro\", low: 120, high: 156 },\n  { name: \"Vivace\", low: 156, high: 176 },\n  { name: \"Vivacissimo\", low: 172, high: 176 },\n  { name: \"Allegrissimo\", low: 172, high: 176 },\n  { name: \"Presto\", low: 168, high: 200 },\n  { name: \"Prestissimo\", low: 200, high: 250 }\n]);\n\nconst inRange = (to: number, from: number, test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = R.memoizeWith(\n  a => \"\" + a,\n  (bpm: number): immutable.List<Marking> =>\n    markings.filter(({ high, low }) => inRange(high, low, bpm))\n);\n\ninterface MarkingProps {\n  name: string;\n  low: number;\n  high: number;\n}\n\nconst Marking: React.FC<MarkingProps> = React.memo(({ name, low, high }) => {\n  return (\n    <div className=\"has-text-centered\">\n      {name} - {low} - {high}\n    </div>\n  );\n});\n\nconst TempoMarking = React.memo(\n  ({ bpm }: { bpm: number }) => {\n    const markings = fromBPM(bpm);\n    return (\n      <div style={{ minHeight: \"6.5em\" }}>\n        {markings.map(({ name, high, low }) => (\n          <Marking key={`marking-${name}`} name={name} high={high} low={low} />\n        ))}\n      </div>\n    );\n  },\n  ({ bpm: old }, { bpm: nu }) => fromBPM(old).equals(fromBPM(nu))\n);\n\nconst Wrap = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <TempoMarking bpm={bpm} />;\n};\n\nexport default Wrap;\n","import React from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\n\nexport const maxWidth = \"40em\";\n\ntype ReactButton = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\ninterface ButtonProps extends ReactButton {\n  primary?: true;\n  isPrimary?: true;\n  isLink?: true;\n  isInfo?: true;\n  isSuccess?: true;\n  isDanger?: true;\n  isOutlined?: true;\n  offIsPrimary?: true;\n  offIsLink?: true;\n  offIsInfo?: true;\n  offIsSuccess?: true;\n  offIsDanger?: true;\n  offIsOutlined?: true;\n  grow?: true;\n}\n\ninterface ToggleButtonProps extends ButtonProps {\n  on: boolean;\n}\n\nconst offProps = [\n  \"offIsPrimary\",\n  \"offIsLink\",\n  \"offIsDanger\",\n  \"offIsInfo\",\n  \"offIsSuccess\",\n  \"offIsOutlined\"\n];\nconst onProps = [\n  \"isPrimary\",\n  \"isLink\",\n  \"isDanger\",\n  \"isInfo\",\n  \"isSuccess\",\n  \"isOutlined\"\n];\n\nexport const ToggleButton: React.FC<ToggleButtonProps> = ({ on, ...props }) => {\n  const renderProps = React.useMemo(() => {\n    const toRemove = on ? offProps : onProps;\n    return R.omit(toRemove, props);\n  }, [on, props]);\n\n  const child = React.useMemo(\n    () =>\n      props.children instanceof Array && props.children.length === 2\n        ? on\n          ? props.children[0]\n          : props.children[1]\n        : props.children,\n    [props, on]\n  );\n  return <Button {...renderProps}>{child}</Button>;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  isPrimary,\n  isDanger,\n  isLink,\n  isInfo,\n  isSuccess,\n  isOutlined,\n  offIsPrimary,\n  offIsDanger,\n  offIsLink,\n  offIsInfo,\n  offIsSuccess,\n  offIsOutlined,\n  grow,\n  className: propsClassName,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(\"button\", propsClassName, {\n        \"is-primary\": isPrimary || offIsPrimary,\n        \"is-link\": isLink || offIsLink,\n        \"is-danger\": isDanger || offIsDanger,\n        \"is-info\": isInfo || offIsInfo,\n        \"is-success\": isSuccess || offIsSuccess,\n        \"is-outlined\": isOutlined || offIsOutlined,\n        \"is-grow\": grow\n      }),\n    [\n      propsClassName,\n      grow,\n      isPrimary,\n      offIsPrimary,\n      isLink,\n      offIsLink,\n      isDanger,\n      offIsDanger,\n      isInfo,\n      offIsInfo,\n      isOutlined,\n      offIsOutlined,\n      isSuccess,\n      offIsSuccess\n    ]\n  );\n  const renderProps = React.useMemo(() => {\n    return { ...props, className };\n  }, [props, className]);\n\n  return <button {...renderProps}>{props.children}</button>;\n};\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hasAddons?: true;\n  grow?: true | undefined;\n}\n\nconst ButtonsWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0 !important;\n  }\n`;\n\nexport const Buttons: React.FC<ButtonsProps> = ({\n  children,\n  hasAddons,\n  ref,\n  className: propsClassName,\n  grow,\n  ...props\n}) => {\n  const className = React.useMemo(\n    () =>\n      classnames(propsClassName, \"buttons\", {\n        \"has-addons\": hasAddons,\n        \"is-grow\": grow\n      }),\n    [hasAddons, grow, propsClassName]\n  );\n  return (\n    <ButtonsWrapper ref={ref as any} {...props} className={className}>\n      {children}\n    </ButtonsWrapper>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport * as hooks from \"../hooks\";\nimport * as t from \"../types\";\nimport * as immutable from \"immutable\";\nimport * as redux from \"../redux\";\n\ninterface Props {\n  metronome: t.Metronome;\n}\n\ninterface DivisionsProps {\n  uiEnabledDivisions: t.EnabledDivisions;\n  toggleDivisionOption: (option: t.Division) => void;\n  clearDivisions: () => void;\n}\n\nconst DivisionsWrapper = React.memo(styled.section`\n  display: flex;\n  align-items: baseline;\n  > div {\n    margin-right: 10px;\n  }\n`);\n\nconst Divisions: React.FC<DivisionsProps> = React.memo(\n  ({ uiEnabledDivisions, toggleDivisionOption, clearDivisions }) => {\n    return (\n      <DivisionsWrapper>\n        <div className=\"is-size-5\">Division</div>\n        <Buttons hasAddons grow style={{ marginRight: \"5px\" }}>\n          {([2, 3, 4, 5, 6] as t.Division[]).map((num: t.Division) => {\n            const on = uiEnabledDivisions.get(num)!;\n            return (\n              <ToggleButton\n                grow\n                on={on}\n                isPrimary\n                key={`division-options-${num}`}\n                onClick={() => toggleDivisionOption(num)}\n              >\n                {num}\n              </ToggleButton>\n            );\n          })}\n        </Buttons>\n        <Button grow isDanger isOutlined onClick={clearDivisions}>\n          Clear\n        </Button>\n      </DivisionsWrapper>\n    );\n  }\n);\n\nconst TimeSignature = () => {\n  const setSignature = redux.setSignature;\n  const numerator = redux.useSelector(\n    a => a.metronomeState.signature.numerator\n  );\n\n  const [hasChanged, setHasChanged] = useState(false);\n  const [uIenabledDivisions, setUiEnabledDivisions] = hooks.useLocalStorage<\n    t.EnabledDivisions\n  >(\n    t.LocalStorageKey.EnabledDivisions,\n    immutable.Map<t.Division, boolean>().set(1, true)\n  );\n\n  useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        numerator: immutable.List(\n          R.range(0, old.numerator.size).map(() => uIenabledDivisions)\n        )\n      }));\n    }\n  }, [uIenabledDivisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = useCallback(\n    (divisionOption: t.Division) => {\n      setHasChanged(true);\n      setUiEnabledDivisions(old => {\n        const oldValue = old.get(divisionOption);\n        const newValue = oldValue === undefined ? true : !oldValue;\n        return old.set(divisionOption, newValue);\n      });\n    },\n    [setUiEnabledDivisions]\n  );\n\n  const clearDivisions = useCallback(() => {\n    setUiEnabledDivisions(immutable.Map<t.Division, boolean>().set(1, true));\n  }, [setUiEnabledDivisions]);\n\n  // TODO - make it where clicking on a division group lets you set the volume & accents for that group.\n  // TODO - add an option to turn on or off the accent at the start of every measure.\n  // TODO - clean up these buttons to not use className.\n\n  const [currentNumerator, setCurrentNumerator] = React.useState(\n    numerator.size\n  );\n\n  React.useEffect(() => {\n    setSignature(old => ({\n      ...old,\n      numerator: immutable.List(\n        R.range(0, currentNumerator).map(() => uIenabledDivisions)\n      )\n    }));\n  }, [currentNumerator, setSignature, uIenabledDivisions]);\n\n  return (\n    <>\n      <Beats />\n      <Divisions\n        uiEnabledDivisions={uIenabledDivisions}\n        toggleDivisionOption={toggleDivisionOption}\n        clearDivisions={clearDivisions}\n      />\n      <Signature\n        currentNumerator={numerator.size}\n        setCurrentNumerator={setCurrentNumerator}\n      />\n    </>\n  );\n};\n\ninterface SignatureProps {\n  setCurrentNumerator: (numerator: number) => void;\n  currentNumerator: number;\n}\n\nconst Signature: React.FC<SignatureProps> = React.memo(\n  ({ setCurrentNumerator, currentNumerator }) => {\n    return (\n      <section className=\"section buttons is-centered\">\n        {[1, 2, 3, 4, 5].map(num => {\n          const on = currentNumerator === num;\n          return (\n            <ToggleButton\n              key={`numerator-button-${num}`}\n              on={on}\n              isPrimary\n              isOutlined\n              grow\n              onClick={on ? () => {} : () => setCurrentNumerator(num)}\n            >\n              <>{num}/4</>\n            </ToggleButton>\n          );\n        })}\n      </section>\n    );\n  }\n);\n\n// TODO - margin should be calculated based on number of divisions.\nconst BeatRowItemWrapper = React.memo(styled.div`\n  width: 1px;\n  margin-left: 1px;\n  margin-right: 1px;\n  flex-grow: 1;\n`);\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatRowWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n`);\n\n// TODO - margin should be calculated based on number of beats.\nconst BeatWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`);\n\nconst BeatsWrapper = React.memo(styled.div`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: 10px;\n`);\n\n// TODO - the selected division values should reset when you stop the metronome.\n// TODO - If not playing, this should show the boring gray background.\nconst BeatRowItem: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  divisionIndex: number;\n  height: number;\n}> = React.memo(({ height, beatIndex, division, divisionIndex }) => {\n  const on = redux.useSelector(\n    a =>\n      a.activeBeats\n        .get(beatIndex)!\n        .get(division)!\n        .get(divisionIndex)!\n  );\n  const className = React.useMemo(() => {\n    return on ? \"has-background-primary\" : \"has-background-link\";\n  }, [on]);\n  return (\n    <BeatRowItemWrapper\n      className={className}\n      style={{\n        height,\n        marginTop: 1\n      }}\n    />\n  );\n});\n\nconst BeatRow: React.FC<{\n  beatIndex: number;\n  division: t.Division;\n  height: number;\n}> = React.memo(({ height, beatIndex, division }) => {\n  return (\n    <BeatRowWrapper>\n      {R.range(0, division).map(divisionIndex => (\n        <BeatRowItem\n          key={`${beatIndex}-${division}-${divisionIndex}`}\n          height={height}\n          beatIndex={beatIndex}\n          division={division}\n          divisionIndex={divisionIndex}\n        />\n      ))}\n    </BeatRowWrapper>\n  );\n});\n\nconst Beat: React.FC<{\n  beatIndex: number;\n}> = React.memo(({ beatIndex }) => {\n  const divisions = redux.useSelector(\n    a => a.activeBeats.get(beatIndex)!.keySeq(),\n    (a, b) => a.equals(b)\n  );\n  return (\n    <BeatWrapper key={`${beatIndex}`}>\n      {divisions.map(division => (\n        <BeatRow\n          height={70 / divisions.size!}\n          key={`${beatIndex}-${division}`}\n          beatIndex={beatIndex}\n          division={division}\n        />\n      ))}\n    </BeatWrapper>\n  );\n});\n\n// TODO - make it where you can click and drag on the visual subdivision to\n// change the volume and double tap to change it's color and also make it an\n// accent?\nconst Beats: React.FC = React.memo(() => {\n  const activeBeats = redux.useSelector(a => a.activeBeats.size);\n  return (\n    <BeatsWrapper>\n      {R.range(0, activeBeats).map(beatIndex => (\n        <Beat key={beatIndex} beatIndex={beatIndex} />\n      ))}\n    </BeatsWrapper>\n  );\n});\n\nexport default TimeSignature;\n","import React, { useState } from \"react\";\nimport * as R from \"ramda\";\nimport { Button } from \"./Common\";\nimport * as redux from \"../redux\";\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn: React.FC = () => {\n  const [taps, setTaps] = useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      redux.setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return (\n    <Button isLink isOutlined onClick={onTap}>\n      Tap In\n    </Button>\n  );\n};\n\nexport default TapIn;\n","import React, { useEffect, useState } from \"react\";\nimport { useToggle } from \"../hooks\";\nimport { ToggleButton, Buttons } from \"./Common\";\nimport styled from \"styled-components\";\nimport * as polyfill from \"../polyfill\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = React.memo(() => {\n  const [on, toggleOn] = useToggle(false);\n  const [analyser, setAnalyser] = useState<AnalyserNode>();\n  const [sampleRate, setSampleRate] = useState<number>();\n  const [freq, setFreq] = useState<number>(440);\n  const [audioContext, setAudioContext] = useState<AudioContext>();\n\n  // Initailize the AudioContext when user turns on the tuner.\n  useEffect(() => {\n    if (on && !audioContext && polyfill.AudioContext !== undefined) {\n      setAudioContext(new polyfill.AudioContext());\n    }\n  }, [on, audioContext]);\n\n  // Prompt for microphone when user turns on the tuner.\n  useEffect(() => {\n    if (on && audioContext) {\n      setSampleRate(audioContext.sampleRate);\n      const mediaDevices = navigator.mediaDevices;\n      if (mediaDevices) {\n        let mediaStream: MediaStream;\n        mediaDevices.getUserMedia({ audio: true }).then((ms: MediaStream) => {\n          mediaStream = ms;\n          const analyser = audioContext.createAnalyser();\n          // If this isn't big, I don't have very good frequency accuracy, and I\n          // can't change the sample rate because web audio sucks.\n          analyser.fftSize = 8192;\n          const mic = audioContext.createMediaStreamSource(ms);\n          mic.connect(analyser);\n          setAnalyser(analyser);\n        });\n        return () => {\n          mediaStream.getAudioTracks().forEach(track => track.stop());\n        };\n      }\n    }\n  }, [on, audioContext]);\n\n  useEffect(() => {\n    if (on && analyser && sampleRate) {\n      const tick = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Float32Array(bufferLength);\n        analyser.getFloatFrequencyData(dataArray);\n        const [, maxIdx] = dataArray.reduce(\n          (a, b, i) => (a[0] < b ? [b, i] : a),\n          [-Infinity, -1]\n        );\n        const resolution = sampleRate / analyser.fftSize;\n        const freq = resolution * maxIdx;\n        setFreq(freq);\n      };\n      tick();\n      let interval = setInterval(tick, 50);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [on, analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  // TODO - add in a graph of the FFT that's label with pitches and neato log bars.\n  return (\n    <TunerWrapper className=\"box has-text-centered\">\n      <div className=\"is-size-1\">{on ? note + octave : \"Stopped\"}</div>\n\n      <div>\n        {on ? (\n          <>\n            {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n          </>\n        ) : (\n          \"press start to tune\"\n        )}\n      </div>\n      <Buttons className=\"is-right\">\n        <ToggleButton on={on} isDanger offIsPrimary onClick={toggleOn}>\n          <>Stop</>\n          <>Start</>\n        </ToggleButton>\n      </Buttons>\n    </TunerWrapper>\n  );\n});\n\nconst TunerWrapper = styled.section`\n  margin-top: 10px;\n`;\n\nexport default Tuner;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport * as hooks from \"../hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"../types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst InnerWrapper = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface InnerProps {\n  container: HTMLDivElement | null;\n  addDiff: (value: number) => void;\n  size: number;\n}\n\nconst Inner: React.FC<InnerProps> = ({\n  container: knobContainer,\n  addDiff,\n  size\n}) => {\n  const [stateRadians, setRadians] = hooks.useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (Math.PI * 3) / 2\n  );\n  const radiansRef = useRef(Math.PI);\n  useEffect(() => {\n    radiansRef.current = stateRadians;\n  }, [stateRadians]);\n  const onMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  }, []);\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const mouseDownRef = useRef(false);\n  useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = useState(0);\n  const totalDiffRef = useRef(0);\n  useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const onMouseUp = useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      if (knobContainer !== null) {\n        const { clientX, clientY } = e;\n        const box = knobContainer.getBoundingClientRect();\n\n        const boxCenter = {\n          x: box.left + box.width / 2,\n          y: box.top + box.height / 2\n        };\n        const y = -(boxCenter.y - clientY);\n        const x = -(boxCenter.x - clientX);\n        const newRadians = Math.atan2(y, x);\n        let diff = radiansRef.current - newRadians;\n        if (diff < -Math.PI) {\n          diff = -radiansRef.current - newRadians;\n        } else if (diff > Math.PI) {\n          diff = radiansRef.current - -newRadians;\n        }\n        if (diff !== 0) {\n          addToBuffer(diff);\n        }\n        const same = newRadians === radiansRef.current;\n        if (!same) {\n          setRadians(newRadians);\n        }\n      }\n    },\n    [addToBuffer, setRadians, knobContainer]\n  );\n\n  const onTouchMove = useCallback(\n    (e: React.TouchEvent<HTMLDivElement>) => {\n      const t = e.changedTouches;\n      const t0 = t[0];\n      moveKnob(t0);\n    },\n    [moveKnob]\n  );\n\n  const onMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  const uiRadians = hooks.useAnimationFrameDebounce(stateRadians);\n\n  const top = React.useMemo(\n    () =>\n      size / 2 +\n      Math.sin(uiRadians) * (size / 4) +\n      (Math.sin(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n  const left = React.useMemo(\n    () =>\n      size / 2 +\n      Math.cos(uiRadians) * (size / 4) +\n      (Math.cos(uiRadians) * size) / 16 -\n      size / 6,\n    [uiRadians, size]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  return (\n    <InnerWrapper\n      className=\"has-background-info\"\n      onMouseDown={onMouseDown}\n      onTouchMove={onTouchMove}\n      style={{\n        top,\n        left\n      }}\n    />\n  );\n};\n\ninterface Props {\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [knobContainer, setKnobContainer] = useState<HTMLDivElement | null>(\n    null\n  );\n\n  return (\n    <Outer ref={setKnobContainer} className=\"has-background-primary\">\n      <Inner addDiff={addDiff} container={knobContainer} size={size} />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = React.memo(styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`);\n\nexport default InfiniKnob;\n","import React from \"react\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport { usePersistantToggle, useSleepLock } from \"../hooks\";\nimport { Buttons, ToggleButton } from \"./Common\";\nimport useMetronome from \"../metronome\";\nimport * as t from \"../types\";\nimport styled from \"styled-components\";\nimport * as redux from \"../redux\";\n\nconst FullPage = styled.div`\n  margin: 0 !important;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: white;\n  text-align: center;\n`;\n\ninterface MetronomeProps {\n  audioContext: t.MAudioContext;\n  appSettings: t.AppSettings;\n}\n\nconst BPM = () => {\n  const bpm = redux.useSelector(a => a.metronomeState.bpm);\n  return <div className=\"has-text-centered is-size-1\">{bpm}</div>;\n};\n\nconst DialSection: React.FC = React.memo(() => {\n  return (\n    <section className=\"section\">\n      <Dial addDiff={redux.addBPM}>\n        <BPM />\n        <TempoMarking />\n      </Dial>\n    </section>\n  );\n});\n\nconst Metronome: React.FC<MetronomeProps> = ({ appSettings, audioContext }) => {\n  const playing = redux.useSelector(a => a.metronomeState.playing);\n  const pending = redux.useSelector(a => a.metronomeState.pending);\n  // TODO app settings should just be in redux too.\n  const {\n    state: { keepAwake }\n  } = appSettings;\n\n  useMetronome(audioContext);\n  useSleepLock(keepAwake && playing);\n\n  // TODO - this should be saved in appSettings.\n  const [showTuner, toggleTuner] = usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n    false\n  );\n\n  return (\n    <>\n      {pending && <FullPage>Tap to enable audio.</FullPage>}\n      {showTuner && <Tuner />}\n      <DialSection />\n      <TimeSignature />\n      <Controls showTuner={showTuner} toggleTuner={toggleTuner} />\n    </>\n  );\n};\n\ninterface ControlsProps {\n  showTuner: boolean;\n  toggleTuner: () => void;\n}\n\nconst Controls: React.FC<ControlsProps> = React.memo(\n  ({ showTuner, toggleTuner }) => {\n    const playing = redux.useSelector(a => a.metronomeState.playing);\n    const pending = redux.useSelector(a => a.metronomeState.pending);\n    return (\n      <section className=\"section\">\n        <Buttons hasAddons>\n          <ToggleButton\n            isLink\n            offIsOutlined\n            offIsLink\n            on={showTuner}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </ToggleButton>\n          <TapIn />\n          <ToggleButton\n            on={playing}\n            offIsPrimary\n            grow\n            isOutlined\n            isDanger\n            disabled={pending}\n            onClick={redux.toggleStart}\n          >\n            <>Stop</>\n            <>Start</>\n          </ToggleButton>\n        </Buttons>\n      </section>\n    );\n  }\n);\nexport default Metronome;\n","import React from \"react\";\nimport * as t from \"../types\";\nimport styled from \"styled-components\";\n\ninterface SettingsProps {\n  appSettings: t.AppSettings;\n}\n\nconst SettingsWrapper = styled.section``;\n\nconst Settings: React.FC<SettingsProps> = ({ appSettings }) => {\n  const {\n    state: { keepAwake },\n    toggleKeepAwake\n  } = appSettings;\n  return (\n    <SettingsWrapper>\n      <h2 className=\"is-size-4\">Settings</h2>\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"checkbox\">\n            <input\n              style={{ marginRight: \"5px\" }}\n              type=\"checkbox\"\n              checked={keepAwake}\n              onChange={toggleKeepAwake}\n            />\n            Keep screen on while metronome is running.\n          </label>\n        </div>\n      </div>\n    </SettingsWrapper>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport TimeSignature from \"./TimeSignature\";\nimport * as hooks from \"../hooks\";\nimport * as util from \"../util\";\nimport * as t from \"../types\";\nimport * as redux from \"../redux\";\nimport { Button, Buttons, ToggleButton } from \"./Common\";\nimport useScales from \"../scales\";\nimport useMetronome from \"../metronome\";\n\n// TODO - clean up the rendering here. It redraws way too much on a change.\n// TODO - store the scales as a sorted set instead of a set that gets sorted\n// every time.\n\nenum ScaleMode {\n  NOT_STARTED = \"not-started\",\n  KNOWN = \"known\",\n  LEARNING = \"learning\"\n}\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: t.Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Buttons>\n        <ToggleButton on={known} isInfo onClick={toggleKnown}>\n          Known\n        </ToggleButton>\n        <ToggleButton on={learning} isLink onClick={toggleLearning}>\n          Learning\n        </ToggleButton>\n      </Buttons>\n    </div>\n  );\n};\n\ninterface LearnScalesProps {\n  scales: t.Scales;\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\n\nconst LearnScales: React.FC<LearnScalesProps> = ({\n  scales,\n  reset,\n  scaleMode\n}) => {\n  const { getScales, getScale, addBPM } = scales;\n  const [scaleKeys, setScales] = React.useState<Array<t.ScaleKey>>(() =>\n    util.shuffle(\n      getScales(s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      })\n        .valueSeq()\n        .map(({ scaleKey }) => scaleKey)\n        .toArray()\n    )\n  );\n\n  const start = redux.start();\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScale(\n    (s: t.Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  React.useEffect(() => {\n    if (maybeScale !== undefined) {\n      redux.start(maybeScale.bpm);\n    }\n  }, [maybeScale, start]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <>\n      <div className=\"box\">\n        <div\n          style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n          className=\"control is-expanded is-size-5\"\n        >\n          {scaleMode}\n        </div>\n        <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n          <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n            {pitch} {mode} @ {bpm}bpm\n          </div>\n          <Buttons grow hasAddons>\n            <Button isDanger isOutlined grow onClick={() => addBPM(scale, -10)}>\n              -10\n            </Button>\n            <Button isDanger isOutlined grow onClick={() => addBPM(scale, -1)}>\n              -\n            </Button>\n            <Button isPrimary isOutlined grow onClick={() => addBPM(scale, 1)}>\n              +\n            </Button>\n            <Button isPrimary isOutlined grow onClick={() => addBPM(scale, 10)}>\n              +10\n            </Button>\n          </Buttons>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button isDanger isOutlined onClick={reset}>\n            Stop\n          </Button>\n          <Button isPrimary onClick={nextScale}>\n            {nextScaleText}\n          </Button>\n        </div>\n      </div>\n      <TimeSignature />\n    </>\n  );\n};\n\ninterface ScalesProps {\n  audioContext: t.MAudioContext;\n}\n\n// TODO - Add a button to start learning a new scale. This will be a scale\n// that is know known and is not learning.\nconst Scales: React.FC<ScalesProps> = ({ audioContext }) => {\n  useMetronome(audioContext);\n\n  const [scaleMode, setScaleMode] = React.useState(ScaleMode.NOT_STARTED);\n  const [showKnown, toggleShowKnown] = hooks.usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  React.useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      redux.stop();\n    }\n  }, [scaleMode]);\n\n  const scales = useScales();\n  const { getScale, getScales, toggleLearning, toggleKnown } = scales;\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Buttons>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={getScale(s => s.known) === undefined}\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Button>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={getScale(s => s.learning) === undefined}\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Button>\n            </Buttons>\n          </div>\n          <hr />\n\n          <Buttons>\n            <Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Button>\n          </Buttons>\n          {getScales(\n            s =>\n              s.mode === t.Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScales(\n            s =>\n              s.mode === t.Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: t.Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={() => toggleLearning(scale)}\n              toggleKnown={() => toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          scales={scales}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\nimport * as immutable from \"immutable\";\n\nconst initScale = (scaleKey: t.ScaleKey): t.Scale => ({\n  scaleKey,\n  pitch: scaleKey[0],\n  mode: scaleKey[1],\n  known: false,\n  learning: false,\n  bpm: 60\n});\n\nconst addScale = (scalesDB: t.ScalesDB, key: t.ScaleKey): t.ScalesDB => {\n  return scalesDB.add(initScale(key));\n};\n\nconst initScalesDB = (): t.ScalesDB => {\n  return t.scaleKeys.reduce(\n    (scalesDB: t.ScalesDB, scaleKey) => addScale(scalesDB, scaleKey),\n    immutable.Set() as t.ScalesDB\n  );\n};\n\nexport const getScale = (\n  scalesDB: t.ScalesDB,\n  filter: (s: t.Scale) => boolean\n): t.Scale | undefined => {\n  return getScales(scalesDB, filter).first();\n};\n\nconst getScales = (scalesDB: t.ScalesDB, filter: (s: t.Scale) => boolean) => {\n  return scalesDB.filter(filter);\n};\n\nconst useScales = (): t.Scales => {\n  const [scalesDB, setScalesDB] = hooks.useLocalStorage<t.ScalesDB>(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const addScalePublic = React.useCallback(() => {\n    throw new Error(\"not implemented\");\n  }, []);\n\n  const getScalePublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) => getScale(scalesDB, filter),\n    [scalesDB]\n  );\n\n  const getScalesPublic = React.useCallback(\n    (filter: (s: t.Scale) => boolean) =>\n      getScales(scalesDB, filter).sort((a, b) =>\n        a.scaleKey[0].localeCompare(b.scaleKey[0])\n      ),\n    [scalesDB]\n  );\n\n  const addBPMPublic = React.useCallback(\n    (s: t.Scale, bpm: number) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, bpm: scale.bpm + bpm })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleLearningPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, learning: !scale.learning })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n  const toggleKnownPublic = React.useCallback(\n    (s: t.Scale) => {\n      const scale = scalesDB.get(s);\n      if (scale) {\n        setScalesDB(\n          scalesDB.remove(scale).add({ ...scale, known: !scale.known })\n        );\n      }\n    },\n    [scalesDB, setScalesDB]\n  );\n\n  // TODO - these should probably use a ref so they don't change as often.\n  return {\n    addBPM: addBPMPublic,\n    toggleLearning: toggleLearningPublic,\n    toggleKnown: toggleKnownPublic,\n    addScale: addScalePublic,\n    getScale: getScalePublic,\n    getScales: getScalesPublic\n  };\n};\nexport default useScales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as serviceWorker from \"../serviceWorker\";\nimport { Buttons, Button, maxWidth } from \"./Common\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n`;\n\nconst UpdateStyle = styled.section`\n  position: absolute;\n  max-width: ${maxWidth};\n  width: 95%;\n  margin-top: 10px;\n  left: 0;\n  right: 0;\n  margin-left: auto !important;\n  margin-right: auto !important;\n  z-index: 10;\n  display: flex !important;\n  justify-content: space-between;\n  animation: ease-in 1s ${rotate};\n`;\n\nlet hasRegistered = false;\nexport default () => {\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n\n  const reload = React.useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const close = React.useCallback(() => {\n    setUpdateAvailable(false);\n  }, []);\n\n  useEffect(() => {\n    if (!hasRegistered) {\n      serviceWorker.register({\n        onUpdate: () => {\n          setUpdateAvailable(true);\n        }\n      });\n    }\n    hasRegistered = true;\n  }, []);\n  return (\n    <>\n      {updateAvailable && (\n        <UpdateStyle className=\"box\">\n          <span>An Update is Available!</span>\n          <Buttons>\n            <Button isPrimary isOutlined onClick={reload}>\n              Refresh\n            </Button>\n            <Button isDanger isOutlined onClick={close}>\n              x\n            </Button>\n          </Buttons>\n        </UpdateStyle>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as t from \"./types\";\nimport * as hooks from \"./hooks\";\n\nconst initSettings = (): t.AppSettings[\"state\"] => ({\n  keepAwake: false\n});\n\nexport const useAppSettings = (): t.AppSettings => {\n  const [state, setState] = hooks.useLocalStorage<t.AppSettings[\"state\"]>(\n    t.LocalStorageKey.AppSettings,\n    initSettings\n  );\n\n  const toggleKeepAwake = React.useCallback(() => {\n    setState(old => ({ ...old, keepAwake: !old.keepAwake }));\n  }, [setState]);\n\n  return {\n    state,\n    toggleKeepAwake\n  };\n};\n","import React from \"react\";\nimport Metronome from \"./Metronome\";\nimport Settings from \"./Settings\";\nimport Scales from \"./Scales\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Update from \"./Update\";\nimport { useAppSettings } from \"../settings\";\nimport styled, { keyframes } from \"styled-components\";\nimport { maxWidth } from \"./Common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars as faCoffee,\n  faHome,\n  faCog as faGear,\n  faMusic\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useToggle } from \"../hooks\";\nimport * as hooks from \"../hooks\";\n\nconst TopBarWrapper = React.memo(styled.section`\n  margin-bottom: 10px;\n  margin-left: 0px !important;\n  margin-right: 0px !important;\n  display: flex;\n  flex-direction: column;\n`);\n\nconst CenterIcon = React.memo(styled.span`\n  align-self: center;\n`);\n\nconst TopNav = React.memo(styled.section`\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  justify-content: space-between;\n  > h2 {\n    margin: 0 !important;\n  }\n`);\n\nconst dropDown = keyframes`\n  from {\nfont-size: 0px;\n  }\n`;\n\nconst NavDropDown = React.memo(styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n  align-self: flex-end;\n  > a {\n    animation: ease-in 0.3s ${dropDown};\n    font-size: 1.5rem;\n  }\n`);\n\nconst NavItem = React.memo(styled(Link)``);\n\nconst NavIcon = React.memo(styled(FontAwesomeIcon)`\n  margin-left: 5px;\n`);\n\nconst TopBar = React.memo(() => {\n  const [showNav, toggleNav] = useToggle(false);\n  // TODO - figure out how to animate the nav being hidden.\n  // TODO - make it where clicking outside of this element hides it.\n  // TODO - make it where you can swipe from the right of the screen to show the nav.\n  return (\n    <TopBarWrapper>\n      <TopNav className=\"has-background-primary has-text-light\">\n        <Link to=\"/\" className=\"has-text-white\">\n          <h2 className=\"is-size-4 is-bold\">(mjh)tronome</h2>\n        </Link>\n        <CenterIcon onClick={toggleNav}>\n          <FontAwesomeIcon icon={faCoffee} size=\"2x\" />\n        </CenterIcon>\n      </TopNav>\n      {showNav && (\n        <NavDropDown onClick={toggleNav}>\n          <NavItem to=\"/\">\n            Home\n            <NavIcon icon={faHome} />\n          </NavItem>\n          <NavItem to=\"/scales\">\n            Scales\n            <NavIcon icon={faMusic} />\n          </NavItem>\n          <NavItem to=\"/settings\">\n            Settings\n            <NavIcon icon={faGear} />\n          </NavItem>\n        </NavDropDown>\n      )}\n    </TopBarWrapper>\n  );\n});\n\nconst WrapperStyle = React.memo(styled.div`\n  max-width: ${maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  > * {\n    margin-left: 10px;\n    margin-right: 10px;\n  }\n`);\n\nconst FooterStyle = React.memo(styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  margin-top: 5px;\n`);\n\nconst Wrapper: React.FC = React.memo(({ children }) => {\n  return (\n    <WrapperStyle>\n      <Update />\n      <TopBar />\n      {children}\n      <FooterStyle>{`v${process.env.REACT_APP_VERSION}`}</FooterStyle>\n    </WrapperStyle>\n  );\n});\n\n// TODO - add a button to the overall exception handler that lets you clear local storage.\n// TODO - add an option to the settings to clear local storage.\n// TODO - update components to use the React.FC type.\nconst App: React.FC = () => {\n  const appSettings = useAppSettings();\n  const audioContext = hooks.useAudioContext();\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Wrapper>\n        {audioContext === \"not-supported\" && (\n          <div>\n            Your browser doesn't support the audioContext api, so this will not\n            work. Sorry :(\n          </div>\n        )}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Metronome audioContext={audioContext} appSettings={appSettings} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/scales\"\n          render={() => <Scales audioContext={audioContext} />}\n        />\n        <Route\n          exact\n          path=\"/settings\"\n          render={() => <Settings appSettings={appSettings} />}\n        />\n      </Wrapper>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./bulma-overrides.sass\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nclass ErrorBoundary extends React.Component<{}, { error: any }> {\n  constructor(props: { error: any }) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div>\n          <h1>Something went wrong</h1>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.name}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.message}\n          </code>\n          <hr />\n          <code>\n            {this.state.error instanceof Error && this.state.error.stack}\n          </code>\n          <hr />\n          <code>{JSON.stringify(this.state.error, undefined, \"  \")}</code>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}