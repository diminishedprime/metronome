{"version":3,"sources":["click.wav","types.ts","TempoMarking.tsx","hooks.ts","Common.tsx","Tuner.tsx","TimeSignature.tsx","metronome.ts","TapIn.tsx","Dial.tsx","Scales.tsx","serviceWorker.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","LocalStorageKey","Mode","Pitch","markings","name","range","fromBPM","bpm","filter","_ref3","_ref","test","_ref2","Object","slicedToArray","from","to","inRange","TempoMarking","_ref4","react_default","a","createElement","style","minHeight","map","_ref5","idx","key","className","scaleKeys","A","Major","B","C","D","E","F","G","A_Flat","B_Flat","C_Flat","D_Flat","E_Flat","G_Flat","C_Sharp","D_Sharp","E_Sharp","F_Sharp","Minor","A_Sharp","G_Sharp","useLocalStorage","initialValue","override","arguments","length","undefined","_useState","useState","firstValue","fromLocal","localStorage","getItem","Function","JSON","parse","window","setItem","stringify","_useState2","value","setValue","useCallback","valueAction","oldValue","newValue","usePersistantToggle","_useLocalStorage","_useLocalStorage2","storageValue","setStorageValue","R","Button","children","props","objectWithoutProperties","classes","concat","allProps","assign","GrowButton","styled","_templateObject","Buttons","SigColumn","div","TimeSignature_templateObject","SigColumns","_templateObject2","TimeSignature","playing","setSignature","signature","beats","activeSubDivisions","_useToggle","sideEffect","toggleState","_useState3","_useState4","old","useToggle","_useToggle2","edit","toggleEdit","hasChanged","setHasChanged","t","SignatureDivisions","divisions","setDivisions","setNumerator","numerator","objectSpread","classesForDivisions","division","indexOf","useEffect","toggleDivisionOption","divisionOption","sort","clearDivisions","Fragment","paddingLeft","marginBottom","marginTop","num","onClick","subDivisions","beat","beatIdx","current","d","bg","marginLeft","marginRight","justifyContent","height","Common_Button","click","require","scheduleNote","audioContext","time","gain","buffer","pitch","sound","createBufferSource","detune","volume","createGain","connect","destination","start","beatsFor","startOfBeatTime","secondsPerBeat","currentBeat","reduce","acc","noteOffset","newBeats","divisionIndex","useScheduleAhead","state","beatToSchedule","nextBeat","url","updateBuffer","fetch","then","response","arrayBuffer","decodeAudioData","useAudioBuffer","nextNoteTimeRef","useRef","delay","scheduleAhead","stateRef","beatToScheduleRef","initialTime","currentTime","id","setInterval","nextNoteTime","_state$current","beatData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","runAtTime","oldDivisions","newDivisions","resetActiveSubDivisions","thing","find","_iterator","Symbol","iterator","next","done","err","return","scheduleGroup","clearInterval","timeToRun","callback","now","setTimeout","currentBeatIndex","useMetronome","clampBPM","setPlaying","_useAdvice","advice","originalT","originalSetter","action","oldT","useAdvice","BPM","_useAdvice2","setBPM","_useState5","_useState6","setBeatToSchedule","Signature","denominator","_useLocalStorage3","Divisions","_useLocalStorage4","numeratorRef","bpmRef","stop","toggleStart","addBPM","bpmToAdd","calculateBPM","tapTimes","Math","trunc","TapIn","taps","setTaps","performance","newTaps","tap","noteIdx","0","1","2","3","4","5","6","7","8","9","10","11","notes","i","j","base","pow","centsPerOctave","frequency","octave","note","push","Tuner","analyser","setAnalyser","setDataArray","sampleRate","setSampleRate","_useState7","_useState8","freq","setFreq","AudioContext","mediaDevices","navigator","getUserMedia","audio","createAnalyser","fftSize","createMediaStreamSource","close","useLayoutEffect","animationFrame","tick","bufferLength","frequencyBinCount","dataArray","Float32Array","getFloatFrequencyData","_dataArray$reduce","b","maxIdx","resolution","loop","requestAnimationFrame","cancelAnimationFrame","_freqToPitch","low","high","lowPitch","highPitch","average","difference","cents","originalFrequency","freqToPitch","toFixed","ScaleMode","Outer","Dial_templateObject","Inner","Dial_templateObject2","ChildContainer","_templateObject3","InfiniKnob","_ref$size","size","addDiff","Radians","PI","radians","setRadians","radiansRef","mouseDown","setMouseDown","mouseDownRef","totalDiff","setTotalDiff","totalDiffRef","knobContainer","onMouseUp","_","addToBuffer","diff","abs","oldDiff","moveKnob","e","clientX","clientY","box","getBoundingClientRect","boxCenter","left","width","y","top","x","newRadians","atan2","onMouseMove","addEventListener","removeEventListener","sin","cos","ref","onMouseDown","preventDefault","onTouchMove","t0","changedTouches","getScaleByFilter","scalesDB","getScalesByFilter","scales","entries","forEach","lilMap","scale","initScalesDB","addScale","scaleKey","_key","mode","pitchMap","known","learning","ScalesGroup","_ref5$scaleKey","toggleLearning","toggleKnown","Common_Buttons","LearnScales","_ref6","reset","scaleMode","startMetronome","floor","random","shuffle","s","LEARNING","KNOWN","_ref7","setScales","currentKey","maybeScale","nextScaleText","_ref8","alignSelf","fontWeight","display","flexGrow","nu","slice","Scales","_ref9","stopMetronome","ScalesDB","setScalesDB","NOT_STARTED","setScaleMode","_ref10","_ref11","_usePersistantToggle","ShowKnown","_usePersistantToggle2","showKnown","toggleShowKnown","disabled","Scales_ScalesGroup","Scales_LearnScales","_ref12","n","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","swUrl","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Metronome","setAudioContext","_useMetronome","_useMetronome$state","ShowScales","showScales","toggleScales","_usePersistantToggle3","ShowTuner","_usePersistantToggle4","showTuner","toggleTuner","_usePersistantToggle5","ShowDial","_usePersistantToggle6","showDial","toggleDial","updateAvailable","setUpdateAvailable","InnerBody","Dial","src_TempoMarking","src_TimeSignature","src_TapIn","src_Scales","src_Tuner","App_templateObject","App","App_Metronome","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.06f7edd3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click.b48ed3e5.wav\";","import React from \"react\";\n\nexport enum LocalStorageKey {\n  SignatureDivisions = \"@mjh/k/signature-divisions\",\n  ShowKnown = \"@mjh/k/show-known-0\",\n  ScalesDB = \"@mjh/k/scales-db\",\n  Divisions = \"@mjh/k/divisions-0\",\n  Signature = \"@mjh/k/signature-0\",\n  BPM = \"@mjh/k/bpm-0\",\n  KnownScales = \"@mjh/k/known-scales-0\",\n  ShowScales = \"@mjh/k/show-scales-0\",\n  ShowTuner = \"@mjh/k/show-tuner-0\",\n  ShowDial = \"@mjh/k/show-dial-0\",\n  Radians = \"@mjh/k/radians-0\"\n}\n\n// TODO - figure out a better way to manage this.\nexport interface SubDivision {\n  on: boolean;\n  pitch: number;\n  divisions: number;\n  label: string;\n  gain: number;\n}\n\nexport enum Mode {\n  Major = \"Major\",\n  Minor = \"Minor\"\n}\n\nexport enum Pitch {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n\n  A_Flat = \"Ab\",\n  B_Flat = \"Bb\",\n  C_Flat = \"Cb\",\n  D_Flat = \"Db\",\n  E_Flat = \"Eb\",\n  F_Flat = \"Fb\",\n  G_Flat = \"Gb\",\n\n  A_Sharp = \"A#\",\n  B_Sharp = \"B#\",\n  C_Sharp = \"C#\",\n  D_Sharp = \"D#\",\n  E_Sharp = \"E#\",\n  F_Sharp = \"F#\",\n  G_Sharp = \"G#\"\n}\n\n// TODO - this seems promising to be able to iterate through all options, just need to add them all in.\nexport type ScaleKey =\n  // First The naturals\n  | [Pitch.A, Mode.Major]\n  | [Pitch.B, Mode.Major]\n  | [Pitch.C, Mode.Major]\n  | [Pitch.D, Mode.Major]\n  | [Pitch.E, Mode.Major]\n  | [Pitch.F, Mode.Major]\n  | [Pitch.G, Mode.Major]\n  // Now The Flats\n  | [Pitch.A_Flat, Mode.Major]\n  | [Pitch.B_Flat, Mode.Major]\n  | [Pitch.C_Flat, Mode.Major]\n  | [Pitch.D_Flat, Mode.Major]\n  | [Pitch.E_Flat, Mode.Major]\n  | [Pitch.G_Flat, Mode.Major]\n  // The sharps\n  | [Pitch.C_Sharp, Mode.Major]\n  | [Pitch.D_Sharp, Mode.Major]\n  | [Pitch.E_Sharp, Mode.Major]\n  | [Pitch.F_Sharp, Mode.Major]\n  // Now The Minors\n  | [Pitch.A, Mode.Minor]\n  | [Pitch.B, Mode.Minor]\n  | [Pitch.C, Mode.Minor]\n  | [Pitch.D, Mode.Minor]\n  | [Pitch.E, Mode.Minor]\n  | [Pitch.F, Mode.Minor]\n  | [Pitch.G, Mode.Minor]\n  // Flat\n  | [Pitch.A_Flat, Mode.Minor]\n  | [Pitch.B_Flat, Mode.Minor]\n  | [Pitch.E_Flat, Mode.Minor]\n  // Sharp\n  | [Pitch.A_Sharp, Mode.Minor]\n  | [Pitch.C_Sharp, Mode.Minor]\n  | [Pitch.D_Sharp, Mode.Minor]\n  | [Pitch.F_Sharp, Mode.Minor]\n  | [Pitch.G_Sharp, Mode.Minor];\n\n// It's easy to forget one of these, so be careful, I guess. I couldn't figure\n// out a good way to do this, but this definitely works. I just copy the thing at the top and replace | with ,\nexport const scaleKeys: ScaleKey[] = [\n  // First The naturals\n  [Pitch.A, Mode.Major],\n  [Pitch.B, Mode.Major],\n  [Pitch.C, Mode.Major],\n  [Pitch.D, Mode.Major],\n  [Pitch.E, Mode.Major],\n  [Pitch.F, Mode.Major],\n  [Pitch.G, Mode.Major],\n  // Now The Flats\n  [Pitch.A_Flat, Mode.Major],\n  [Pitch.B_Flat, Mode.Major],\n  [Pitch.C_Flat, Mode.Major],\n  [Pitch.D_Flat, Mode.Major],\n  [Pitch.E_Flat, Mode.Major],\n  [Pitch.G_Flat, Mode.Major],\n  // The sharps\n  [Pitch.C_Sharp, Mode.Major],\n  [Pitch.D_Sharp, Mode.Major],\n  [Pitch.E_Sharp, Mode.Major],\n  [Pitch.F_Sharp, Mode.Major],\n  // Now The Minors\n  [Pitch.A, Mode.Minor],\n  [Pitch.B, Mode.Minor],\n  [Pitch.C, Mode.Minor],\n  [Pitch.D, Mode.Minor],\n  [Pitch.E, Mode.Minor],\n  [Pitch.F, Mode.Minor],\n  [Pitch.G, Mode.Minor],\n  // Flat\n  [Pitch.A_Flat, Mode.Minor],\n  [Pitch.B_Flat, Mode.Minor],\n  [Pitch.E_Flat, Mode.Minor],\n  // Sharp\n  [Pitch.A_Sharp, Mode.Minor],\n  [Pitch.C_Sharp, Mode.Minor],\n  [Pitch.D_Sharp, Mode.Minor],\n  [Pitch.F_Sharp, Mode.Minor],\n  [Pitch.G_Sharp, Mode.Minor]\n];\n\nexport interface Scale {\n  scaleKey: ScaleKey;\n  mode: Mode;\n  pitch: Pitch;\n  known: boolean;\n  learning: boolean;\n  bpm: number;\n}\n\nexport type ScalesDB = {\n  [pitch: string]: {\n    [mode: string]: Scale;\n  };\n}; // Map<Pitch, Map<Mode, Scale>>;\n\nexport interface Beat {\n  time: number;\n  pitch: number;\n  gain: number;\n  buffer: AudioBuffer;\n  divisions: DivisionOptions;\n  divisionIndex: number;\n  currentBeat: number;\n}\n\nexport interface SignatureBeat {\n  divisions: Array<DivisionOptions>;\n}\n\nexport interface Signature {\n  denominator: number;\n  beats: Array<SignatureBeat>;\n}\n\nexport type DivisionOptions = 1 | 2 | 3 | 4 | 5 | 6;\n\nexport interface Division {\n  gain: number;\n  pitch: number;\n  divisions: DivisionOptions;\n  current: number | undefined;\n}\n\nexport type Divisions = Division[][];\n\nexport interface State {\n  bpm: number;\n  playing: boolean;\n  signature: Signature;\n  // The first index of divisions is always { divisions: 1 }, so it will either\n  // be current: 0, or current: undefined depending on whether or not it is the\n  // current beat.\n  // TODO - I should add an actual assert on this somewhere. It's bound to bite\n  // me eventually.\n  divisions: Divisions;\n}\n\nexport interface Metronome {\n  toggleStart: () => void;\n  start: (bpm?: number) => void;\n  stop: () => void;\n  setBPM: React.Dispatch<React.SetStateAction<number>>;\n  setSignature: React.Dispatch<React.SetStateAction<Signature>>;\n  addBPM: (bpmToAdd: number) => void;\n  state: State;\n}\n","import React from \"react\";\n\ninterface Marking {\n  range: [number, number];\n  name: string;\n}\n\nexport const markings: Array<Marking> = [\n  { name: \"Larghissimo\", range: [0, 24] },\n  { name: \"Grave\", range: [25, 45] },\n  { name: \"Largo\", range: [40, 60] },\n  { name: \"Lento\", range: [45, 60] },\n  { name: \"Larghetto\", range: [60, 66] },\n  { name: \"Adagio\", range: [66, 76] },\n  { name: \"Andante\", range: [76, 108] },\n  { name: \"Marcia moderato\", range: [83, 85] },\n  { name: \"Andante moderato\", range: [92, 112] },\n  { name: \"Moderato\", range: [108, 120] },\n  { name: \"Allegro\", range: [120, 156] },\n  { name: \"Vivace\", range: [156, 176] },\n  { name: \"Vivacissimo\", range: [172, 176] },\n  { name: \"Allegrissimo\", range: [172, 176] },\n  { name: \"Presto\", range: [168, 200] },\n  { name: \"Prestissimo\", range: [200, 250] }\n];\n\nconst inRange = ([from, to]: [number, number], test: number) => {\n  return test >= from && test <= to;\n};\n\nconst fromBPM = (bpm: number): Array<Marking> => {\n  return markings.filter(({ range }) => inRange(range, bpm));\n};\n\ninterface Props {\n  bpm: number;\n}\n\nconst TempoMarking = ({ bpm }: Props) => {\n  const markings = fromBPM(bpm);\n  return (\n      <div style={{minHeight: '6.5em'}}>\n          {markings.map(({ name, range }, idx) => (\n              <div key={idx} className=\"has-text-centered\">\n                  {name} - {range[0]} - {range[1]}\n              </div>\n          ))}\n              </div>\n  );\n};\n\nexport default TempoMarking;\n","import {\n  useState,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport * as R from \"ramda\";\nimport * as d from \"deep-object-diff\";\nimport * as t from \"./types\";\n\n// TODO - add in some logic to do simple migrations. Otherwise, we get stuck\n// with this state forever and have to blow it away.\nexport const useLocalStorage = <T>(\n  key: t.LocalStorageKey,\n  initialValue: T | (() => T),\n  override: boolean = false\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [value, setValue] = useState(() => {\n    let firstValue;\n    const fromLocal = localStorage.getItem(key);\n    if (fromLocal !== null && fromLocal !== undefined && !override) {\n      firstValue = JSON.parse(fromLocal);\n    } else {\n      firstValue =\n        initialValue instanceof Function ? initialValue() : initialValue;\n    }\n    window.localStorage.setItem(key, JSON.stringify(firstValue));\n    return firstValue;\n  });\n\n  const setNewValue: Dispatch<SetStateAction<T>> = useCallback(\n    (valueAction: SetStateAction<T>) => {\n      setValue((oldValue: T) => {\n        const newValue =\n          valueAction instanceof Function ? valueAction(oldValue) : valueAction;\n        window.localStorage.setItem(key, JSON.stringify(newValue));\n        return newValue;\n      });\n    },\n    [key]\n  );\n\n  return [value, setNewValue];\n};\n\nexport const usePersistantToggle = (\n  key: t.LocalStorageKey,\n  initialValue: boolean\n): [boolean, () => void] => {\n  const [storageValue, setStorageValue] = useLocalStorage(key, initialValue);\n  const toggle = useCallback(() => {\n    setStorageValue(R.not);\n  }, [setStorageValue]);\n  return [storageValue, toggle];\n};\n\nexport const useToggle = (\n  initialValue: boolean,\n  sideEffect = (toggleState: boolean) => {}\n): [boolean, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  const toggle = useCallback(\n    () =>\n      setValue((old: boolean) => {\n        const newValue = !old;\n        sideEffect(newValue);\n        return newValue;\n      }),\n    [sideEffect]\n  );\n  return [value, toggle];\n};\n\nexport const useAdvice = <T>(\n  [originalT, originalSetter]: [T, React.Dispatch<React.SetStateAction<T>>],\n  advice: (t: T) => T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const newSetter = useCallback(\n    (action: React.SetStateAction<T>) => {\n      originalSetter(oldT =>\n        advice(action instanceof Function ? action(oldT) : action)\n      );\n    },\n    [advice, originalSetter]\n  );\n  return [originalT, newSetter];\n};\n\nexport const useDetectChangedValue = (...values: any[]) => {\n  const oldValues = useRef<any[]>(values);\n\n  useEffect(() => {\n    const lastValues = oldValues.current;\n    const newValues = values;\n    lastValues.forEach((lastValue: any, index: number) => {\n      const newValue = newValues[index];\n      if (newValue !== lastValue) {\n        const diff = d.detailedDiff(lastValue, newValue);\n        console.log(`Change at argument index: ${index}`, diff);\n      }\n    });\n    oldValues.current = values;\n  }, [values]);\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {}\n\nexport const Button = ({ children, className, ...props }: ButtonProps) => {\n  const classes = `button ${className}`;\n  const allProps = Object.assign(props, { className: classes });\n  return (\n    <button {...allProps} {...props}>\n      {children}\n    </button>\n  );\n};\n\nexport const GrowButton = styled(Button)`\n  flex-grow: 1;\n`;\n\ninterface ButtonsProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  classes?: string[];\n}\n\nexport const Buttons = ({ children, className, ...props }: ButtonsProps) => {\n  const classes = `${className} buttons has-addons}`;\n  const allProps = Object.assign(props, { className: classes });\n  return <div {...allProps}>{children}</div>;\n};\n","import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\n\nconst noteIdx: { [note: number]: string } = {\n  0: \"A\",\n  1: \"Bb\",\n  2: \"B\",\n  3: \"C\",\n  4: \"Db\",\n  5: \"D\",\n  6: \"Eb\",\n  7: \"E\",\n  8: \"F\",\n  9: \"Gb\",\n  10: \"G\",\n  11: \"Ab\"\n};\n\nconst A4 = 440;\nconst notes: Array<{\n  octave: number;\n  note: string;\n  frequency: number;\n  centsPerOctave: number;\n}> = [];\nfor (let i = -4; i < 4; i++) {\n  for (let j = 0; j < 12; j++) {\n    const base = A4 * Math.pow(2, i);\n    const centsPerOctave = base / 1200;\n    const frequency = base * Math.pow(2, j / 12);\n    const octave = i + 4;\n    const note = noteIdx[j];\n    notes.push({ octave, note, frequency, centsPerOctave });\n  }\n}\n\nconst freqToPitch = (freq: number) => {\n  let low = 0;\n  for (let i = 0; i < notes.length; i++) {\n    let note = notes[i];\n    if (note.frequency >= freq) {\n      low = i;\n      break;\n    }\n  }\n  const high = low + 1;\n  const lowPitch = notes[low];\n  const highPitch = notes[high];\n  const average = (lowPitch.frequency + highPitch.frequency) / 2;\n  let note = notes[high];\n  let difference = note.frequency - freq;\n  if (freq < average) {\n    note = notes[low];\n  }\n  const cents = note.centsPerOctave * difference;\n  return Object.assign(note, { originalFrequency: freq, difference, cents });\n};\n\nconst Tuner = () => {\n  const [analyser, setAnalyser] = useState<AnalyserNode>();\n  const [, setDataArray] = useState();\n  const [sampleRate, setSampleRate] = useState<number>();\n  const [freq, setFreq] = useState<number>(440);\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const audioContext = new AudioContext();\n    setSampleRate(audioContext.sampleRate);\n    const mediaDevices = navigator.mediaDevices;\n    if (mediaDevices) {\n      mediaDevices.getUserMedia({ audio: true }).then((thing: MediaStream) => {\n        const analyser = audioContext.createAnalyser();\n        // If this isn't big, I don't have very good frequency accuracy, and I\n        // can't change the sample rate because web audio sucks.\n        analyser.fftSize = 8192;\n        const mic = audioContext.createMediaStreamSource(thing);\n        mic.connect(analyser);\n        setAnalyser(analyser);\n      });\n    }\n    return () => {\n      audioContext.close();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    let animationFrame: number;\n\n    const tick = () => {\n      const bufferLength = analyser!.frequencyBinCount;\n      const dataArray = new Float32Array(bufferLength);\n      analyser!.getFloatFrequencyData(dataArray);\n      setDataArray(dataArray);\n\n      const [, maxIdx] = dataArray.reduce(\n        (a, b, i) => (a[0] < b ? [b, i] : a),\n        [-Infinity, -1]\n      );\n\n      const resolution = sampleRate! / analyser!.fftSize;\n      const freq = resolution * maxIdx;\n      setFreq(freq);\n\n      loop();\n    };\n\n    const loop = () => {\n      animationFrame = requestAnimationFrame(tick);\n    };\n\n    if (analyser !== undefined) {\n      loop();\n      return () => {\n        cancelAnimationFrame(animationFrame);\n      };\n    }\n  }, [analyser, sampleRate]);\n\n  const { octave, note, cents } = freqToPitch(freq || 0);\n  return (\n    <div className=\"box\">\n      <div className=\"has-text-centered\">\n        <div className=\"is-size-1\">{note + octave}</div>\n        <div>\n          {cents.toFixed(2)} Cents {cents < 0 ? \"flat\" : \"sharp\"}\n        </div>\n      </div>\n      {false && <canvas width={\"100%\"} height={\"100\"} ref={canvasRef} />}\n    </div>\n  );\n};\n\nexport default Tuner;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport * as R from \"ramda\";\nimport styled from \"styled-components\";\nimport { useToggle, useLocalStorage } from \"./hooks\";\nimport { Button, GrowButton } from \"./Common\";\nimport * as t from \"./types\";\n\ninterface Props {\n  signature: t.Signature;\n  setSignature: React.Dispatch<React.SetStateAction<t.Signature>>;\n  playing: boolean;\n  activeSubDivisions: t.Divisions;\n}\n\nconst SigColumn = styled.div`\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst SigColumns = styled.div`\n  display: flex;\n`;\n\nconst TimeSignature = ({\n  playing,\n  signature: { beats },\n  setSignature,\n  activeSubDivisions\n}: Props) => {\n  const [edit, toggleEdit] = useToggle(false);\n  const [hasChanged, setHasChanged] = useState(false);\n  const [divisions, setDivisions] = useLocalStorage<t.DivisionOptions[]>(\n    t.LocalStorageKey.SignatureDivisions,\n    [1]\n  );\n  const setNumerator = useCallback(\n    (numerator: number) => {\n      setHasChanged(true);\n      setSignature(old => ({\n        ...old,\n        beats: R.range(0, numerator).map(() => ({ divisions }))\n      }));\n    },\n    [divisions, setSignature]\n  );\n\n  const classesForDivisions = useCallback(\n    (division: t.DivisionOptions) => {\n      if (divisions.indexOf(division) === -1) {\n        return \"\";\n      } else {\n        return \"is-primary\";\n      }\n    },\n    [divisions]\n  );\n  useEffect(() => {\n    if (hasChanged) {\n      setSignature(old => ({\n        ...old,\n        beats: R.range(0, old.beats.length).map(() => ({ divisions }))\n      }));\n    }\n  }, [divisions, hasChanged, setSignature]);\n\n  const toggleDivisionOption = useCallback(\n    (divisionOption: t.DivisionOptions) => {\n      setHasChanged(true);\n      setDivisions(old => {\n        if (old.indexOf(divisionOption) !== -1) {\n          return old.filter(a => a !== divisionOption);\n        } else {\n          return old.concat([divisionOption]).sort();\n        }\n      });\n    },\n    [setDivisions]\n  );\n\n  const clearDivisions = useCallback(() => {\n    setDivisions([1]);\n  }, [setDivisions]);\n\n  return (\n    <>\n      <h3\n        className=\"subtitle is-5\"\n        style={{ paddingLeft: \"10px\", marginBottom: \"0\" }}\n      >\n        Divisions\n      </h3>\n      <section\n        style={{ marginTop: \"10px\" }}\n        className=\"section buttons is-centered\"\n      >\n        {([2, 3, 4, 5, 6] as t.DivisionOptions[]).map(\n          (num: t.DivisionOptions) => (\n            <GrowButton\n              key={`division-options-${num}`}\n              className={classesForDivisions(num)}\n              onClick={() => toggleDivisionOption(num)}\n            >\n              {num}\n            </GrowButton>\n          )\n        )}\n        <GrowButton\n          className={\"is-danger is-outlined\"}\n          onClick={clearDivisions}\n        >\n          Clear\n        </GrowButton>\n      </section>\n      <section className=\"section is-mobile columns\" onClick={toggleEdit}>\n        {activeSubDivisions.map((subDivisions, beat) => {\n          return (\n            <div className={`column has-text-centered`} key={beat}>\n              {subDivisions.map(({ divisions, current }, beatIdx) => {\n                return (\n                  <SigColumns key={`d${divisions}`}>\n                    {R.range(0, divisions).map((d, idx) => {\n                      const bg =\n                        current === idx && playing\n                          ? \"has-background-primary\"\n                          : \"has-background-light\";\n                      const marginTop = divisions === 1 ? 0 : 5;\n                      const marginLeft = idx === 0 ? 0 : 10 / divisions;\n                      const marginRight =\n                        idx === divisions - 1 ? 0 : 10 / divisions;\n                      return (\n                        <SigColumn\n                          key={`d${divisions}-${idx}`}\n                          className={`${bg} has-text-centered`}\n                          style={{\n                            justifyContent: \"center\",\n                            height: 70 / subDivisions.length - marginTop,\n                            marginLeft,\n                            marginRight,\n                            marginTop\n                          }}\n                        >\n                          {beatIdx === 0 && beat + 1}\n                        </SigColumn>\n                      );\n                    })}\n                  </SigColumns>\n                );\n              })}\n            </div>\n          );\n        })}\n      </section>\n      {edit && (\n        <section className=\"section buttons is-centered\">\n          <Button onClick={() => setNumerator(2)}>2/4</Button>\n          <Button onClick={() => setNumerator(3)}>3/4</Button>\n          <Button onClick={() => setNumerator(4)}>4/4</Button>\n          <Button onClick={() => setNumerator(5)}>5/4</Button>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default TimeSignature;\n","import { useEffect, useState, useCallback, useRef } from \"react\";\nimport * as R from \"ramda\";\nimport * as t from \"./types\";\nimport { useLocalStorage, useAdvice } from \"./hooks\";\nconst click = require(\"./click.wav\");\n\nconst scheduleNote = (\n  audioContext: AudioContext,\n  { time, gain, buffer, pitch }: t.Beat\n) => {\n  const sound = audioContext.createBufferSource();\n  sound.buffer = buffer;\n  sound.detune.value = -pitch;\n\n  const volume = audioContext.createGain();\n  volume.gain.value = gain;\n\n  sound.connect(volume);\n  volume.connect(audioContext.destination);\n  sound.start(time);\n};\n\nconst beatsFor = (\n  startOfBeatTime: number,\n  secondsPerBeat: number,\n  divisions: t.DivisionOptions[],\n  buffer: AudioBuffer,\n  currentBeat: number\n): Array<t.Beat> => {\n  return divisions.reduce((acc: t.Beat[], divisions) => {\n    const noteOffset = secondsPerBeat / divisions;\n    const newBeats = R.range(0, divisions).map((divisionIndex: number) => {\n      const time = startOfBeatTime + divisionIndex * noteOffset;\n      const beat: t.Beat = {\n        time,\n        pitch: 220,\n        gain: 1.0 * 0.5,\n        buffer,\n        divisions,\n        divisionIndex,\n        currentBeat\n      };\n      return beat;\n    });\n    return acc.concat(newBeats);\n  }, []);\n};\n\nconst useAudioBuffer = (\n  audioContext: AudioContext | undefined,\n  url: string\n): AudioBuffer | undefined => {\n  const [buffer, updateBuffer] = useState<AudioBuffer>();\n  useEffect(() => {\n    if (audioContext !== undefined) {\n      fetch(url)\n        .then(response => response.arrayBuffer())\n        .then(buffer => audioContext.decodeAudioData(buffer))\n        .then(updateBuffer);\n    }\n  }, [url, audioContext]);\n  return buffer;\n};\n\nconst scheduleGroup = (\n  state: React.MutableRefObject<t.State>,\n  scheduleAhead: number,\n  nextNoteTime: React.MutableRefObject<number>,\n  buffer: AudioBuffer,\n  audioContext: AudioContext,\n  setDivisions: React.Dispatch<React.SetStateAction<t.Divisions>>,\n  beatToSchedule: React.MutableRefObject<number>,\n  nextBeat: () => void\n) => {\n  const {\n    bpm,\n    signature,\n    signature: { beats }\n  } = state.current;\n  const beatIdx = beatToSchedule.current;\n  const currentBeat = beats[beatToSchedule.current];\n  // This isn't very elegant, there's probably something that's not right.\n  if (currentBeat === undefined) {\n    return;\n  }\n  const divisions = currentBeat.divisions;\n  const secondsPerBeat = 60.0 / bpm;\n  // TODO - instead of scheduling a whole measure, I want to make a queue of\n  // notes and only schedule the ones that should happen before the next\n  // setInterval is run.\n  while (nextNoteTime.current < audioContext.currentTime + scheduleAhead) {\n    // schedule the whole beat, I think.\n    const beatData = beatsFor(\n      nextNoteTime.current,\n      secondsPerBeat,\n      divisions,\n      buffer,\n      beatIdx\n    );\n    for (const beat of beatData) {\n      // TODO - I think I shouldn't play all of the beat 1's\n      scheduleNote(audioContext, beat);\n      runAtTime(audioContext, beat.time, () => {\n        // We only want to update the UI if important assumptions haven't\n        // changed in the time this was scheduled.\n        const shouldStillUpdate =\n          state.current.signature === signature && state.current.playing; // stateBeforeSchedule === state.current;\n        if (shouldStillUpdate) {\n          setDivisions((oldDivisions: t.Divisions) => {\n            const newDivisions = resetActiveSubDivisions(\n              beats,\n              beatIdx,\n              oldDivisions[beatIdx]\n            );\n            const thing = newDivisions[beatIdx].find(\n              d => d.divisions === beat.divisions\n            );\n            if (thing !== undefined) {\n              thing.current = beat.divisionIndex;\n            }\n            return newDivisions;\n          });\n        }\n      });\n    }\n    nextNoteTime.current += secondsPerBeat;\n    nextBeat();\n  }\n};\n\nconst useScheduleAhead = (\n  audioContext: AudioContext | undefined,\n  state: t.State,\n  setDivisions: React.Dispatch<React.SetStateAction<t.Divisions>>,\n  beatToSchedule: number,\n  nextBeat: () => void\n) => {\n  const scheduleAhead = 0.3;\n  const { playing } = state;\n  const buffer = useAudioBuffer(audioContext, click);\n  const nextNoteTimeRef = useRef<number>(0);\n  const delay = playing ? (scheduleAhead * 1000) / 2 : undefined;\n\n  const stateRef = useRef<t.State>(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n\n  const beatToScheduleRef = useRef(beatToSchedule);\n\n  useEffect(() => {\n    beatToScheduleRef.current = beatToSchedule;\n  }, [beatToSchedule]);\n\n  useEffect(() => {\n    if (\n      delay !== undefined &&\n      audioContext !== undefined &&\n      buffer !== undefined\n    ) {\n      const initialTime = audioContext.currentTime + 0.3;\n      nextNoteTimeRef.current = initialTime;\n      const tick = () => {\n        scheduleGroup(\n          stateRef,\n          scheduleAhead,\n          nextNoteTimeRef,\n          buffer,\n          audioContext,\n          setDivisions,\n          beatToScheduleRef,\n          nextBeat\n        );\n      };\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay, buffer, audioContext, nextBeat, setDivisions]);\n};\n\nconst runAtTime = (\n  audioContext: AudioContext,\n  timeToRun: number,\n  callback: () => void\n) => {\n  const now = audioContext.currentTime;\n  if (timeToRun <= now) {\n    callback();\n  } else {\n    const sleepTime = ((timeToRun - now) / 2) * 1000;\n    setTimeout(() => runAtTime(audioContext, timeToRun, callback), sleepTime);\n  }\n};\n\nconst resetActiveSubDivisions = (\n  beats: t.SignatureBeat[],\n  currentBeatIndex?: number,\n  currentBeat?: t.Division[]\n): t.Divisions => {\n  const b: t.Divisions = beats.map((beat: t.SignatureBeat, idx: number) => {\n    if (idx === currentBeatIndex && currentBeat !== undefined) {\n      return currentBeat;\n    }\n    return beat.divisions.map((divisions: t.DivisionOptions) => ({\n      divisions,\n      current: undefined,\n      pitch: 220,\n      gain: 1.0\n    }));\n  });\n  return b;\n};\n\nexport const useMetronome = (\n  audioContext: AudioContext | undefined\n): t.Metronome => {\n  const clampBPM = useCallback((bpm: number) => R.clamp(10, 250, bpm), []);\n\n  const [playing, setPlaying] = useState(false);\n  const [bpm, setBPM] = useAdvice(\n    useLocalStorage(t.LocalStorageKey.BPM, 90),\n    clampBPM\n  );\n  const [beatToSchedule, setBeatToSchedule] = useState(0);\n  const [signature, setSignature] = useLocalStorage<t.Signature>(\n    t.LocalStorageKey.Signature,\n    {\n      denominator: 4,\n      beats: [{ divisions: [1] }, { divisions: [1] }, { divisions: [1] }]\n    }\n  );\n  const [divisions, setDivisions] = useLocalStorage<t.Division[][]>(\n    t.LocalStorageKey.Divisions,\n    resetActiveSubDivisions(signature.beats)\n  );\n\n  const state: t.State = {\n    bpm,\n    playing,\n    signature,\n    divisions\n  };\n  const { beats } = signature;\n\n  const numeratorRef = useRef(beats.length);\n\n  const addBPM = (bpmToAdd: number) => {\n    setBPM(R.add(bpmToAdd));\n  };\n\n  const bpmRef = useRef(bpm);\n  useEffect(() => {\n    bpmRef.current = bpm;\n  }, [bpm]);\n\n  const start = useCallback(\n    (bpm?: number) => {\n      if (bpm !== undefined) {\n        setBPM(bpm);\n      }\n      setPlaying(true);\n    },\n    [setPlaying, setBPM]\n  );\n\n  const toggleStart = () => setPlaying(R.not);\n\n  const stop = useCallback(() => {\n    setPlaying(false);\n  }, [setPlaying]);\n\n  const nextBeat = useCallback(() => {\n    setBeatToSchedule(current => (current + 1) % numeratorRef.current);\n  }, []);\n\n  // Effects for updating state.\n\n  // If the time signature changes, we need to reset the active subdivisions.\n  useEffect(() => {\n    // TODO - This would be fancier if when the next beat can still happen, it\n    // didn't clear the active beat in the UI.\n    setDivisions(resetActiveSubDivisions(beats));\n    setBeatToSchedule(0);\n    numeratorRef.current = beats.length;\n  }, [beats, signature, setDivisions]);\n\n  useEffect(() => {\n    if (!playing) {\n      setBeatToSchedule(0);\n      setDivisions(resetActiveSubDivisions(beats));\n      setTimeout(() => {\n        setBeatToSchedule(0);\n        setDivisions(resetActiveSubDivisions(beats));\n      }, 100);\n    }\n  }, [playing, beats, setDivisions]);\n\n  useScheduleAhead(audioContext, state, setDivisions, beatToSchedule, nextBeat);\n\n  return {\n    toggleStart,\n    setSignature,\n    start,\n    stop,\n    setBPM,\n    addBPM,\n    state\n  };\n};\n","import React, { useState } from \"react\";\nimport * as R from \"ramda\";\nimport { Button } from \"./Common\";\n\ninterface Props {\n  setBPM: (bpm: number) => void;\n}\n\nconst calculateBPM = R.pipe(\n  (tapTimes: number[]) => R.aperture(2, tapTimes),\n  R.map(([a, b]) => b - a),\n  R.mean,\n  R.divide(60000),\n  Math.trunc\n);\n\nconst TapIn = ({ setBPM }: Props) => {\n  const [taps, setTaps] = useState<number[]>([]);\n\n  const onTap = () => {\n    const now = performance.now();\n    const newTaps = R.append(now, taps).filter(tap => now - tap < 3000);\n    if (newTaps.length > 1) {\n      const bpm = calculateBPM(newTaps);\n      setBPM(bpm);\n    }\n    setTaps(newTaps);\n  };\n\n  return <Button onClick={onTap}>Tap In</Button>;\n};\n\nexport default TapIn;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { useLocalStorage } from \"./hooks\";\nimport styled from \"styled-components\";\nimport * as t from \"./types\";\n\nconst Outer = styled.div`\n  margin: auto;\n  position: relative;\n  height: 300px;\n  width: 300px;\n  border-radius: 300px;\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst Inner = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  position: absolute;\n  touch-action: none;\n`;\n\ninterface Props {\n  initialValue: number;\n  addDiff: (diff: number) => void;\n  size?: number;\n}\n\nconst InfiniKnob = ({\n  size = 300,\n  initialValue,\n  addDiff,\n  children\n}: React.PropsWithChildren<Props>) => {\n  const [radians, setRadians] = useLocalStorage(\n    t.LocalStorageKey.Radians,\n    (initialValue * (Math.PI * 3)) / 2\n  );\n  const radiansRef = useRef(Math.PI);\n  useEffect(() => {\n    radiansRef.current = radians;\n  }, [radians]);\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const mouseDownRef = useRef(false);\n  useEffect(() => {\n    mouseDownRef.current = mouseDown;\n  }, [mouseDown]);\n\n  const [totalDiff, setTotalDiff] = useState(0);\n  const totalDiffRef = useRef(0);\n  useEffect(() => {\n    totalDiffRef.current = totalDiff;\n  }, [totalDiff]);\n\n  const knobContainer = useRef<HTMLDivElement>(null);\n\n  const onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    setMouseDown(true);\n    e.preventDefault();\n  };\n\n  const onMouseUp = useCallback((_: MouseEvent) => {\n    setMouseDown(false);\n  }, []);\n\n  const addToBuffer = useCallback(\n    (diff: number) => {\n      const threshold = 0.2;\n      if (Math.abs(totalDiffRef.current) < threshold) {\n        setTotalDiff(oldDiff => oldDiff + diff);\n      } else {\n        addDiff(totalDiffRef.current > 0 ? -1 : 1);\n        setTotalDiff(0);\n      }\n    },\n    [addDiff]\n  );\n\n  const moveKnob = useCallback(\n    (e: React.Touch | React.MouseEvent | MouseEvent) => {\n      const { clientX, clientY } = e;\n      const box = knobContainer.current!.getBoundingClientRect();\n\n      const boxCenter = {\n        x: box.left + box.width / 2,\n        y: box.top + box.height / 2\n      };\n      const y = -(boxCenter.y - clientY);\n      const x = -(boxCenter.x - clientX);\n      const newRadians = Math.atan2(y, x);\n      let diff = radiansRef.current - newRadians;\n      if (diff < -Math.PI) {\n        diff = -radiansRef.current - newRadians;\n      } else if (diff > Math.PI) {\n        diff = radiansRef.current - -newRadians;\n      }\n      if (diff !== 0) {\n        addToBuffer(diff);\n      }\n      const same = newRadians === radiansRef.current;\n      if (!same) {\n        setRadians(newRadians);\n      }\n    },\n    [addToBuffer, setRadians]\n  );\n\n  const onMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLDivElement> | MouseEvent) => {\n      if (mouseDownRef.current) {\n        moveKnob(e);\n      }\n    },\n    [moveKnob]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  const onTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n    const t = e.changedTouches;\n    const t0 = t[0];\n    moveKnob(t0);\n  };\n\n  const top =\n    size / 2 +\n    Math.sin(radians) * (size / 4) +\n    (Math.sin(radians) * size) / 16 -\n    size / 6;\n  const left =\n    size / 2 +\n    Math.cos(radians) * (size / 4) +\n    (Math.cos(radians) * size) / 16 -\n    size / 6;\n\n  return (\n    <Outer ref={knobContainer} className=\"has-background-primary\">\n      <Inner\n        className=\"has-background-info\"\n        onMouseDown={onMouseDown}\n        onTouchMove={onTouchMove}\n        style={{\n          top,\n          left\n        }}\n      />\n      <ChildContainer>{children}</ChildContainer>\n    </Outer>\n  );\n};\n\nconst ChildContainer = styled.div`\n  align-self: center;\n  margin: auto;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport default InfiniKnob;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocalStorage, usePersistantToggle } from \"./hooks\";\nimport * as R from \"ramda\";\nimport { Button, Buttons } from \"./Common\";\nimport { Scale, Mode, ScalesDB, ScaleKey, scaleKeys } from \"./types\";\nimport * as t from \"./types\";\n\nenum ScaleMode {\n  NOT_STARTED = \"Not Started\",\n  LEARNING = \"Learning\",\n  KNOWN = \"Known\"\n}\n\ninterface Props {\n  startMetronome: (bpm: number) => void;\n  stopMetronome: () => void;\n}\n\nconst getScaleByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n): Scale | undefined => {\n  return getScalesByFilter(scalesDB, filter)[0];\n};\n\nconst getScalesByFilter = (\n  scalesDB: ScalesDB,\n  filter: (s: Scale) => boolean\n) => {\n  let scales: Scale[] = [];\n  Object.entries(scalesDB).forEach(([, lilMap]) => {\n    Object.entries(lilMap).forEach(([, scale]) => {\n      if (filter(scale)) {\n        scales.push(scale);\n      }\n    });\n  });\n  return scales;\n};\n\nconst initScalesDB = (): ScalesDB => {\n  const scalesDB: ScalesDB = {};\n  const scaleFor = (scaleKey: ScaleKey): Scale => ({\n    scaleKey,\n    pitch: scaleKey[0],\n    mode: scaleKey[1],\n    known: false,\n    learning: false,\n    bpm: 60\n  });\n\n  const addScale = (key: ScaleKey): void => {\n    const [pitch, mode] = key;\n    let pitchMap = scalesDB[pitch];\n    if (pitchMap === undefined) {\n      pitchMap = {};\n      scalesDB[pitch] = pitchMap;\n    }\n    pitchMap[mode] = scaleFor(key);\n  };\n  // TODO(me) - clean up scale names & add sharps.\n  // Major\n  for (const key of scaleKeys) {\n    addScale(key);\n  }\n  return scalesDB;\n};\n\nconst ScalesGroup = ({\n  scaleKey: [pitch, mode],\n  learning,\n  known,\n  toggleLearning,\n  toggleKnown\n}: Scale & { toggleLearning: () => void; toggleKnown: () => void }) => {\n  return (\n    <div className=\"is-grouped field has-addons\">\n      <div className=\"is-size-5 control is-expanded\">\n        {pitch} {mode}\n      </div>\n      <Buttons>\n        <Button className={`${known ? \"is-info\" : \"\"}`} onClick={toggleKnown}>\n          Known\n        </Button>\n        <Button\n          className={`${learning ? \"is-link\" : \"\"}`}\n          onClick={toggleLearning}\n        >\n          Learning\n        </Button>\n      </Buttons>\n    </div>\n  );\n};\nfunction shuffle<T>(a: Array<T>) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\ninterface LearnScalesProps {\n  scalesDB: ScalesDB;\n  addBPM: (s: Scale, n: number) => () => void;\n  startMetronome: (bpm: number) => void;\n  reset: () => void;\n  scaleMode: ScaleMode;\n}\n\nconst LearnScales = ({\n  scalesDB,\n  addBPM,\n  reset,\n  scaleMode,\n  startMetronome\n}: LearnScalesProps) => {\n  const [scaleKeys, setScales] = useState<Array<ScaleKey>>(() =>\n    shuffle(\n      getScalesByFilter(scalesDB, s => {\n        if (scaleMode === ScaleMode.LEARNING) {\n          return s.learning;\n        } else if (scaleMode === ScaleMode.KNOWN) {\n          return s.known;\n        }\n        return false;\n      }).map(({ scaleKey }) => scaleKey)\n    )\n  );\n  const nextScale = () => {\n    setScales(old => {\n      const nu = old.slice(1);\n      if (nu.length === 0) {\n        reset();\n      }\n      return nu;\n    });\n  };\n\n  const currentKey = scaleKeys[0] || [];\n  const maybeScale = getScaleByFilter(\n    scalesDB,\n    (s: Scale) => s.mode === currentKey[1] && s.pitch === currentKey[0]\n  );\n  useEffect(() => {\n    if (maybeScale !== undefined) {\n      startMetronome(maybeScale.bpm);\n    }\n  }, [maybeScale, startMetronome]);\n  const nextScaleText = scaleKeys.length > 1 ? \"Next Scale\" : \"Finish\";\n\n  // TODO - this error handling makes me sad, I should really do better.\n  if (scaleKeys.length === 0) {\n    return <div>No more scales</div>;\n  }\n  const scale = maybeScale!;\n  const { mode, pitch, bpm } = scale!;\n\n  return (\n    <div>\n      <div\n        style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n        className=\"control is-expanded is-size-5\"\n      >\n        {scaleMode}\n      </div>\n      <div style={{ display: \"flex\", marginBottom: \"5px\" }}>\n        <div style={{ alignSelf: \"center\", marginRight: \"10px\" }}>\n          {pitch} {mode} @ {bpm}bpm\n        </div>\n        <Buttons style={{ flexGrow: 1 }}>\n          <Button\n            className=\"is-danger is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, -10)}\n          >\n            -10\n          </Button>\n          <Button\n            className=\"is-danger is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, -1)}\n          >\n            -\n          </Button>\n          <Button\n            className=\"is-success is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, 1)}\n          >\n            +\n          </Button>\n          <Button\n            className=\"is-success is-outlined\"\n            style={{ flexGrow: 1 }}\n            onClick={addBPM(scale, 10)}\n          >\n            +10\n          </Button>\n        </Buttons>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Button onClick={reset}>Stop</Button>\n        <Button onClick={nextScale}>{nextScaleText}</Button>\n      </div>\n    </div>\n  );\n};\n\nconst Scales = ({ startMetronome, stopMetronome, ...props }: Props) => {\n  const [scalesDB, setScalesDB] = useLocalStorage(\n    t.LocalStorageKey.ScalesDB,\n    initScalesDB\n  );\n\n  const [scaleMode, setScaleMode] = useState(ScaleMode.NOT_STARTED);\n\n  useEffect(() => {\n    if (scaleMode === ScaleMode.NOT_STARTED) {\n      stopMetronome();\n    }\n  }, [scaleMode, stopMetronome]);\n\n  const toggleLearning = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"learning\"]), R.not));\n  };\n\n  const toggleKnown = ({ pitch, mode }: Scale) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"known\"]), R.not));\n  };\n\n  const [showKnown, toggleShowKnown] = usePersistantToggle(\n    t.LocalStorageKey.ShowKnown,\n    false\n  );\n\n  const addBPM = ({ pitch, mode }: Scale, n: number) => () => {\n    setScalesDB(R.over(R.lensPath([pitch, mode, \"bpm\"]), R.add(n)));\n  };\n\n  return (\n    <div className=\"box\" style={{ marginTop: \"10px\" }}>\n      {scaleMode === ScaleMode.NOT_STARTED ? (\n        <div style={{ marginBottom: \"5px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <div\n              style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\n              className=\"control is-expanded is-size-5\"\n            >\n              Scales\n            </div>\n            <Buttons>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.KNOWN)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.known) === undefined\n                }\n                className=\"is-info is-outlined\"\n              >\n                Start Known\n              </Button>\n              <Button\n                onClick={() => setScaleMode(ScaleMode.LEARNING)}\n                disabled={\n                  getScaleByFilter(scalesDB, s => s.learning) === undefined\n                }\n                className=\"is-link is-outlined\"\n              >\n                Start Learning\n              </Button>\n            </Buttons>\n          </div>\n          <hr />\n\n          <Buttons>\n            <Button\n              onClick={toggleShowKnown}\n              className={`${\n                showKnown ? \"is-primary is-outlined\" : \"is-danger\"\n              }`}\n            >\n              {showKnown ? \"Hide Known\" : \"Show Known\"}\n            </Button>\n          </Buttons>\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Major && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n          <hr />\n          {getScalesByFilter(\n            scalesDB,\n            s => s.mode === Mode.Minor && (showKnown ? true : s.known === false)\n          ).map((scale: Scale) => (\n            <ScalesGroup\n              key={`${scale.pitch}-${scale.mode}`}\n              {...scale}\n              toggleLearning={toggleLearning(scale)}\n              toggleKnown={toggleKnown(scale)}\n            />\n          ))}\n        </div>\n      ) : (\n        <LearnScales\n          scaleMode={scaleMode}\n          startMetronome={startMetronome}\n          addBPM={addBPM}\n          scalesDB={scalesDB}\n          reset={() => setScaleMode(ScaleMode.NOT_STARTED)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Scales;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TempoMarking from \"./TempoMarking\";\nimport TimeSignature from \"./TimeSignature\";\nimport { useMetronome } from \"./metronome\";\nimport TapIn from \"./TapIn\";\nimport Tuner from \"./Tuner\";\nimport Dial from \"./Dial\";\nimport Scales from \"./Scales\";\nimport { usePersistantToggle } from \"./hooks\";\nimport { Button, GrowButton, Buttons } from \"./Common\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as t from \"./types\";\n\nconst Metronome = () => {\n  const [audioContext, setAudioContext] = useState<AudioContext | undefined>();\n  const {\n    state: { playing, signature, divisions, bpm },\n    start,\n    stop,\n    toggleStart,\n    setSignature,\n    setBPM,\n    addBPM\n  } = useMetronome(audioContext);\n\n  // Initialize AudioContext as a singleton on first start.\n  useEffect(() => {\n    if (playing && audioContext === undefined) {\n      setAudioContext(new AudioContext());\n    }\n  }, [playing, audioContext]);\n\n  const [showScales, toggleScales] = usePersistantToggle(\n    t.LocalStorageKey.ShowScales,\n    false\n  );\n  const [showTuner, toggleTuner] = usePersistantToggle(\n    t.LocalStorageKey.ShowTuner,\n\n    false\n  );\n  const [showDial, toggleDial] = usePersistantToggle(\n    t.LocalStorageKey.ShowDial,\n    true\n  );\n\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  useEffect(() => {\n    serviceWorker.register({\n      onUpdate: () => {\n        setUpdateAvailable(true);\n      }\n    });\n  });\n\n  return (\n    <InnerBody>\n      {updateAvailable && (\n        <section\n          className=\"box is-grouped field has-addons\"\n          style={{ marginBottom: \"10px\" }}\n        >\n          <p style={{ alignSelf: \"center\" }} className=\"control is-expanded\">\n            An Update is Available!\n          </p>\n          <Button onClick={() => window.location.reload()}>Refresh</Button>\n        </section>\n      )}\n      <section\n        className=\"section\"\n        style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n      >\n        <h2 className=\"title is-2 has-text-centered\">(mjh)tronome</h2>\n      </section>\n      {showDial && (\n        <section className=\"section\">\n          <Dial initialValue={bpm} addDiff={addBPM}>\n            <div className=\"has-text-centered is-size-1\">{bpm}</div>\n            <TempoMarking bpm={bpm} />\n          </Dial>\n        </section>\n      )}\n      <TimeSignature\n        playing={playing}\n        signature={signature}\n        setSignature={setSignature}\n        activeSubDivisions={divisions}\n      />\n\n      <section className=\"section\">\n        <Buttons>\n          <TapIn setBPM={setBPM} />\n          <GrowButton\n            className={`is-outlined ${playing ? \"is-danger\" : \"is-primary\"}`}\n            onClick={toggleStart}\n          >\n            {playing ? \"Stop\" : \"Start\"}\n          </GrowButton>\n        </Buttons>\n      </section>\n      {showScales && <Scales startMetronome={start} stopMetronome={stop} />}\n      {showTuner && <Tuner />}\n      <nav className=\"navbar is-fixed-bottom has-background-light\">\n        <InnerBody className=\" buttons is-right\">\n          <Button\n            className={`${showDial ? \"is-primary\" : \"\"}`}\n            onClick={toggleDial}\n          >\n            Dial\n          </Button>\n          <Button\n            className={`${showScales ? \"is-primary\" : \"\"}`}\n            onClick={toggleScales}\n          >\n            Scales\n          </Button>\n          <Button\n            className={`${showTuner ? \"is-primary\" : \"\"}`}\n            onClick={toggleTuner}\n          >\n            Tuner\n          </Button>\n          <div>{`v${process.env.REACT_APP_VERSION}`}</div>\n        </InnerBody>\n      </nav>\n    </InnerBody>\n  );\n};\n\nconst InnerBody = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst App: React.FC = () => {\n  return <Metronome />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bulma-overrides.sass\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}